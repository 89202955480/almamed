if ($.ui) {
    $.wa = $.extend(true, $.wa, $.ui);
} else {
    $.wa = {};
}

$.wa = $.extend(true, $.wa, {
    data: {},
    get: function(key, defaultValue) {
        if (key == undefined) {
            return this.data;
        }
        return this.data[name] || defaultValue || null;
    },
    set: function(key, val) {
        if (key == undefined) {
            return this.data;
        }
        if (typeof(key) == 'object') {
            $.extend(this.data, key);
        } else {
            this.data[key] = value;
        }
        return this.data;
    },
    encodeHTML: function(html) {
        return html && (''+html).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
    },
    decodeHTML: function(html) {
        return html.replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;/g,'>');
    },
    setHash: function(hash){
        if (!(hash instanceof String) && hash.toString) {
            hash = hash.toString();
        }
        hash = hash.replace(/\/\//g, "/");
        hash = hash.replace(/^.*#/, '');
        if ($.browser && $.browser.safari) {
            // Work around bug in safari 5.0.5 and down that broke UTF8 hashes
            if (parent) {
                parent.window.location = parent.window.location.href.replace(/#.*/, '') + '#' + hash;
            } else {
                window.location = location.href.replace(/#.*/, '') + '#' + hash;
            }
        } else if (parent && (!$.browser || !$.browser.msie)) {
            parent.window.location.hash = hash;
        } else {
            location.hash = hash;
        }
        return true;
    },
    back: function (hash) {
        if (history.length > 2) {
            if (typeof(hash)=='number' && parseInt(hash) == hash) {
                history.go(-hash);
            } else {
                history.go(-1);
            }
        } else if ($.browser.msie && history.length > 0) {
            history.back();
        } else if (hash) {
            this.setHash(hash);
        }
        return false;
    },
    toggleHashParam: function(param){
        var hash = location.hash;
        if (hash.search(param) == -1){
            this.addToHash(param);
        } else {
            this.removeFromHash(param);
        }
    },
    addToHash: function(param){
        var hash = location.hash;
        if (hash.search(param) == -1){
            hash+='/'+param+'/';
        }
        this.setHash(hash);
    },
    removeFromHash: function(param){
        var hash = location.hash;
        if (hash.search(param) > -1){
            hash = hash.replace(param, "");
        }
        this.setHash(hash);
    },

    setTitle: function (title) {
        document.title = title;
    },
    array_search: function ( needle, haystack, strict ) {
        var strict = !!strict;

        for(var key in haystack){
            if( (strict && haystack[key] === needle) || (!strict && haystack[key] == needle) ){
                return key;
            }
        }
        return false;
    },

    /** Create dialog with given id (or use existing) and set it up according to properties.
        p = {
            content: // content for the dialog to show immediately. Default is a loading image.
            buttons: // html for button area. Defaut is a single 'cancel' link.

            url: ..., // if specified, content will be loaded from given url
            post: { // used with url; contains post parameters.
                var: value
            },
            onload: null // function to call when content is loaded (only when url is specified)
        }
      */
    dialogCreate: function(id, p) {
        p = $.extend({
                content: '<h1>Loading... <i class="icon16 loading"></i></h1>',
                buttons: null,
                url: null,
                post: null,
                small: false,
                onload: null,
                oncancel: null
            }, p);

        p.content = $(p.content);
        if (!p.buttons) {
            p.buttons = $('<input type="submit" class="button gray" value="'+$_('Cancel')+'">').click(function() {
                if (p.oncancel) {
                    p.oncancel.call(dialog[0]);
                }
                $.wa.dialogHide();
            });
        } else {
            p.buttons = $(p.buttons);
        }

        var dialog = $('#'+id);
        if (dialog.size() <= 0) {
            dialog = $(
                '<div class="dialog" id="'+id+'" style="display: none">'+
                    '<div class="dialog-background"></div>'+
                    '<div class="dialog-window">'+
                        '<div class="dialog-content">'+
                            '<div class="dialog-content-indent">'+
                                // content goes here
                            '</div>'+
                        '</div>'+
                        '<div class="dialog-buttons">'+
                            '<div class="dialog-buttons-gradient">'+
                                // buttons go here
                            '</div>'+
                        '</div>'+
                    '</div>'+
                '</div>'
            ).appendTo('body');
        }

        dialog.find('.dialog-buttons-gradient').empty().append(p.buttons);
        dialog.find('.dialog-content-indent').empty().append(p.content);
        dialog.show();

        if (p.small) {
            dialog.addClass('small');
        } else {
            dialog.removeClass('small');
        }

        if (p.url) {
            var f_callback = function (response) {
                dialog.find('.dialog-content-indent').html(response);
                $.wa.waCenterDialog(dialog);
                if (p.onload) {
                    p.onload.call(dialog[0]);
                }
            };
            if (p.post) {
                $.post(p.url, p.post, f_callback);
            } else {
                $.get(p.url, f_callback);
            }
        }

        this.waCenterDialog(dialog);

        // close on escape key
        var onEsc = function(e) {
            if (!dialog.is(':visible')) {
                return;
            }

            if (e && e.keyCode == 27) { // escape
                if (p.oncancel && typeof p.oncancel == 'function') {
                    p.oncancel.call(dialog[0]);
                }
                $.wa.dialogHide();
                return;
            }

            $(document).one('keyup', onEsc);
        };
        onEsc();
        $(document).one('hashchange', $.wa.dialogHide);
        return dialog;
    },

    /** Center the dialog initially or when its properties changed significantly
      * (e.g. when .small class applied or removed) */
    waCenterDialog: function(dialog) {
        dialog = $(dialog);

        // Have to adjust width and height via JS because of min-width and min-height properties.
        var wdw = dialog.find('.dialog-window');

        var dw = wdw.outerWidth(true);
        var dh = wdw.outerHeight(true);

        var ww = $(window).width();
        var wh = $(window).height();

        var w = (ww-dw)/2 / ww;
        var h = (wh-dh)/2 / wh;

        wdw.css({
            'left': Math.round(w*100)+'%',
            'top': Math.round(h*100)+'%'
        });
    },

    /** Hide all dialogs */
    dialogHide: function() {
        $('.dialog').hide();
        return false;
    },

    /** Close all .dropdown menus */
    dropdownsClose: function() {
        var dd = $('.dropdown:not(.disabled)');
        dd.addClass('disabled');
        setTimeout(function() {
            dd.removeClass('disabled');
        }, 600);
    },

    /** Enable automatic close of .dropdowns when user clicks on item inside one. */
    dropdownsCloseEnable: function() {
        $(document).on('click', '.dropdown:not(.disabled)', this.dropdownsClickHandler);
    },

    /** Disable automatic close of .dropdowns when user clicks on item inside one. */
    dropdownsCloseDisable: function() {
        $(document).off('click', '.dropdown:not(.disabled)', this.dropdownsClickHandler);
    },

    /** Click handler used in dropdownsCloseDisable() and dropdownsCloseEnable(). */
    dropdownsClickHandler: function(e) {
        var self = $(this);
        if (self.hasClass('no-click-close')) {
            return;
        }
        self.addClass('disabled');
        setTimeout(function() {
            self.removeClass('disabled');
        }, 600);
    },

     /** Set default value for an input field. If field becomes empty, it receives specified css class
        * and default value. On field focus, css class and value are removed. On blur, if field
        * is still empty, css class and value are restored. */
    defaultInputValue: function(input, defValue, cssClass) {
        if (!(input instanceof jQuery)) {
            input = $(input);
        }

        var onBlur = function() {
            var v = input.val();
            if (!v || v == defValue) {
                input.val(defValue);
                input.addClass(cssClass);
            }
        };
        onBlur();
        input.blur(onBlur);
        input.focus(function() {
            if (input.hasClass(cssClass)) {
                input.removeClass(cssClass);
                input.val('');
            }
        });
    },

    /**
     * Load a bunch of .js and .css files.
     * Return a jQuery Promise object that resolves when all scripts are loaded.
     *
     * Accepts either several filenames/promises as arguments,
     * or an array of filenames/promises,
     * or a hashmap { filename: boolean whether to load file }
     */
    loadFiles: function(files) {

        // Convert arguments to an array of filenames/promises
        if (!$.isArray(files)) {
            // Allows to pass hashmap { filename: boolean }
            if (typeof files === 'object' && !$.isArray(files)) {
                files = $.map(files, function(should_load, file) {
                    return should_load ? file : null;
                });
            }
            // allows to pass several filenames directly as arguments
            else {
                files = [].slice.apply(arguments);
            }
        }

        // Start loading and obtain list of promises
        var promises = files.map(function(file) {
            // make sure `file` is a non-empty string
            if (!file) {
                return null;
            } else if (typeof file != 'string') {
                if (typeof file === 'object' && typeof file.then === "function") {
                    return file; // allows to mix in custom promises
                } else {
                    return null;
                }
            }

            // CSS?
            if (file.match(/\.css(\?.*)?$/)) {
                $('<link>').appendTo('head').attr({
                    type: 'text/css',
                    rel: 'stylesheet',
                    href: file
                });

                // Trying to figure out when CSS loads is cumbersome.
                // So we don't bother for now.
                return null;
            }

            // Otherwise it's a JS script
            return $.ajax({
                cache: true,
                dataType: "script",
                url: file
            });

        }).filter(function(file) {
            return !!file;
        });

        // Combine promises into a single one
        return $.when.apply($, promises);
    },

    /**
     * Automatically set server-side timezone if "Auto" timezone setting
     * is saved in user profile.
     */
    determineTimezone: function(wa_url, callback) {

        var done = false;
        $.each(document.cookie.split(/;\s*/g), function(i, pair) {
            pair = pair.split('=', 2);
            if (pair[0] == 'tz') {
                done = true;
                if (callback) {
                    callback(pair[1]);
                }
                return false;
            }
        });

        if (done) {
            return;
        }

        var options = {};
        options[wa_url + "wa-content/js/jstz/jstz.min.js"] = !window.jstz;
        $.wa.loadFiles(options).then(function() {
            var timezone = window.jstz.determine().name();

            // Session cookie timezone
            document.cookie = "tz="+jstz.determine().name();

            // Expires in two weeks
            var expire = new Date();
            expire.setTime(expire.getTime() + 14*24*60*60*1000); // two weeks
            document.cookie = "oldtz="+timezone+"; expires="+expire.toUTCString();
            if (callback) {
                callback(timezone);
            }
        });
    },

    util: {
        formatFileSize: function(bytes) {
            var i = -1;
            do {
                bytes = bytes / 1024;
                i++;
            } while (bytes > 99);

            return Math.max(bytes, 0.01).toFixed(2) + ((i >=0)? (' ' + $_(['kB', 'MB', 'GB', 'TB', 'PB', 'EB'][i])):'');
        }
    }
});

if (!window.wa_skip_ajax_setup) {
    $.ajaxSetup({'cache': false});
    $(document).ajaxError(function(e, xhr, settings, exception) {
        // Generic error page
        if (xhr.status !== 200 && xhr.responseText) {
            if (!$.wa.errorHandler || $.wa.errorHandler(xhr)) {
                if (xhr.responseText.indexOf('Exception') != -1) {
                    $.wa.dialogCreate('ajax-error', {'content': "<div>" + xhr.responseText + '</div>'});
                    return;
                }

                document.open("text/html");
                document.write(xhr.responseText); // !!! throws an "Access denied" exception in IE9
                document.close();
                $(window).one('hashchange', function() {
                    window.location.reload();
                });
            }
        }
        // Session timeout, show login page
        else if (xhr.getResponseHeader('wa-session-expired')) {
            window.location.reload();
        }
        // Show an exception in development mode
        else if (typeof xhr.responseText !== 'undefined' && xhr.responseText.indexOf('Exception') != -1) {
            $.wa.dialogCreate('ajax-error', {'content': "<div>" + xhr.responseText + '</div>'});
        }
    });
}

$(document).ajaxSend(function (event, xhr, settings) {
    if (settings.type == 'POST') {
        var matches = document.cookie.match(new RegExp("(?:^|; )_csrf=([^;]*)"));
        var csrf = matches ? decodeURIComponent(matches[1]) : '';
        if (settings.data === null ) {
            settings.data = '';
        }
        if (typeof(settings.data) == 'string') {
            if (settings.data.indexOf('_csrf=') == -1) {
                settings.data += (settings.data.length > 0 ? '&' : '') + '_csrf=' + csrf;
                xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");
            }
        } else if (typeof(settings.data) == 'object') {
            settings.data['_csrf'] = csrf;
        }
    }
});

if (!Array.prototype.indexOf)
{
    Array.prototype.indexOf = function(elt /*, from*/)
    {
    var len = this.length;

    var from = Number(arguments[1]) || 0;
    from = (from < 0)
         ? Math.ceil(from)
         : Math.floor(from);
    if (from < 0){from += len;}

    for (; from < len; from++)
    {
        if (from in this &&
            this[from] === elt) {
            return from;
        }
    }
    return -1;
    };
}

/** Localization */

// strings set up by apps
$.wa.locale = $.wa.locale || {};

/** One parameter: translate a string.
  * Two parameters, int and string: translate and get correct word form to use with number. */
$_ = function(p1, p2) {
    // Two parameters: number and string?
    if (p2) {
        if (!$.wa.locale[p2]) {
            if (console){
                console.log('Localization failed: '+p2); // !!!
            }
            return p2;
        }
        if (typeof $.wa.locale[p2] == 'string') {
            return $.wa.locale[p2];
        }

        var d = Math.floor(p1 / 10) % 10,
            e = p1 % 10;
        if (d == 1 || e > 4 || e == 0) {
            return $.wa.locale[p2][2];
        }
        if (e == 1) {
            return $.wa.locale[p2][0];
        }
        return $.wa.locale[p2][1];
    }

    // Just one parameter: a string
    if ($.wa.locale[p1]) {
        return typeof $.wa.locale[p1] == 'string' ? $.wa.locale[p1] : $.wa.locale[p1][0];
    }

    if (console){
        console.log('Localization failed: '+p1); // !!!
    }
    return p1;
};

// EOF;
jQuery.fn.waDialog = function (options) {
    options = jQuery.extend({
        loading_header: '',
        title: '',
        esc: true,
        buttons: null,
        url: null,
        url_reload: true,
        'class': null, // className is a synonym
        content: null,
        'width': 0,
        'height': 0,
        'min-width': 0,
        'min-height': 0,
        offsetTop: null,
        offsetLeft: null,
        disableButtonsOnSubmit: false,
        onLoad: null,
        onCancel: null,
        onSubmit: null
    }, options || {});

    var d = $(this);

    var id = d.attr('id');
    if (id && !d.hasClass('dialog')) {
        d.removeAttr('id');
        if ($("#" + id).length) {
            if (options.url) {
                d = $("#" + id);
                if (!options.url_reload) {
                    options.url = null;
                }
            } else {
                $("#" + id).remove();
            }
        }
    }

    var cl = (options['class'] || options['className']) ? (options['class'] || options['className']) : (d.attr('class') || '');

    if (!d.hasClass('dialog')) {
        var content = $(this);
        var $dialog_parent = d.parent();
        if (!$dialog_parent.length || !$dialog_parent.is(':visible')) {
            $dialog_parent = $('body');
        }
        d = $('<div ' + (id ? 'id = "' + id + '"' : '') + ' class="dialog ' + cl + '" style="display: none">'+
                    '<div class="dialog-background"></div>'+
                    '<div class="dialog-window"></div>'+
              '</div>').appendTo($dialog_parent);
        if (content.find('.dialog-content').length || content.find('.dialog-buttons').length) {
            $('.dialog-window', d).append(content.show());
            var dc = content.find('.dialog-content');
            if (dc.length) {
                var tmp = $('<div class="dialog-content-indent"></div>');
                dc.contents().appendTo(tmp);
                dc.append(tmp);
            }
            dc = content.find('.dialog-buttons');
            if (dc.length) {
                var tmp = $('<div class="dialog-buttons-gradient"></div>');
                dc.contents().appendTo(tmp);
                dc.append(tmp);
            }
        } else {
            $('.dialog-window', d).append(
                    (options.onSubmit ? '<form method="post" action="">' : '') +
                    '<div class="dialog-content">'+
                        '<div class="dialog-content-indent">'+
                            // content goes here
                        '</div>'+
                    '</div>'+
                    '<div class="dialog-buttons">'+
                        '<div class="dialog-buttons-gradient">'+
                            // buttons go here
                        '</div>'+
                    '</div>'+
                    (options.onSubmit ? '</form>' : '')
            );
            d.find('.dialog-content-indent').append(content.show());
        }
        if (options.buttons) {
            d.find('.dialog-buttons-gradient').empty().append(options.buttons);
        }
        if (options.url) {
            d.find('.dialog-content-indent').append('<h1>'+(options.loading_header || '')+'<i class="icon16 loading"></i></h1>');
        } else if (options.content) {
            d.find('.dialog-content-indent').append(options.content);
        }
        if (options.title) {
            d.find('.dialog-content-indent').prepend('<h1>' + options.title + '</h1>');
        }
    } else {
        if (options.content) {
            d.find('.dialog-content-indent').html(options.content);
            if (options.title) {
                d.find('.dialog-content-indent').prepend('<h1>' + options.title + '</h1>');
            }
        }
        if (options.buttons) {
            d.find('.dialog-buttons-gradient').empty().append(options.buttons);
        }
    }

    if (!d.find('.dialog-background').length) {
        d.prepend('<div class="dialog-background"> </div>');
    }

    d.unbind('close').bind('close', function () {
        if (options.onClose) {
            options.onClose.call($(this));
        }
        $(this).hide();
    });

    var css = ['width', 'height', 'min-width', 'min-height'];
    for (var k = 0; k < css.length; k++) {
        if (options[css[k]]) {
            if ((css[k] == 'height' && options[css[k]] < '300px') || (css[k] == 'width' && options[css[k]] < '400px')) {
                d.find('div.dialog-window').css('min-' + css[k], options[css[k]]);
            }
            d.find('div.dialog-window').css(css[k], options[css[k]]);
        }
    }

    if (options.disableButtonsOnSubmit) {
        d.find("input[type=submit]").removeAttr('disabled');
    }

    if (!d.parent().length) {
        d.appendTo('body');
    }


    d.show();

    if (options.url) {
        jQuery.get(options.url, function (response) {
            var el = $(response);
            if (el.find('.dialog-content').length || el.find('.dialog-buttons').length) {
                if (el.find('.dialog-content').length) {
                    d.find('.dialog-content-indent').empty().append(el.find('.dialog-content').contents());
                }
                if (el.find('.dialog-buttons').length) {
                    d.find('.dialog-buttons-gradient').empty().append(el.find('.dialog-buttons').contents());
                }
            } else {
                d.find('.dialog-content-indent').html(response);
            }
            d.trigger('wa-resize');
            if (options.onLoad) {
                options.onLoad.call(d.get(0));
            }
        });
    } else {
        if (options.onLoad) {
            options.onLoad.call(d.get(0));
        }
    }

    d.find('.dialog-buttons').delegate('.cancel', 'click', function (e) {
        e.stopPropagation();
        e.preventDefault();
        if (options.onCancel) {
            options.onCancel.call(d.get(0));
        }
        d.trigger('close');
        return false;
    });


    if (options.onSubmit) {
        d.find('form').unbind('submit').submit(function () {
            if (options.disableButtonsOnSubmit) {
                d.find("input[type=submit]").attr('disabled', 'disabled');
            }
            return options.onSubmit.apply(this, [d]);
        });
    }

    d.unbind('wa-resize').bind('wa-resize', function () {
        var el = jQuery(this).find('.dialog-window');
        var dw = el.width();
        var dh = el.height();

        jQuery("body").css('min-height', dh+'px');

        var ww = jQuery(window).width();
        var wh = jQuery(window).height()-60;

        //centralize dialog
        var w = (ww-dw)/2 / ww;
        var h = (wh-dh-60)/2 / wh; //60px is the height of .dialog-buttons div
        if (h < 0) h = 0;
        if (w < 0) w = 0;

        el.css({
            'left': options.offsetLeft || (Math.round(w*100)+'%'),
            'top': options.offsetTop || (Math.round(h*100)+'%')
        });
    }).trigger('wa-resize');

    if (options.esc) {
        d.unbind('esc').bind('esc', function () {
            d.trigger('close');
        });
    }
    return d;
}

jQuery(window).resize(function () {
    jQuery(".dialog:visible").trigger('wa-resize');
});

jQuery(document).keyup(function(e) {
    //all dialogs should be closed when Escape is pressed
    if (e.keyCode == 27) {
        jQuery(".dialog:visible").trigger('esc');
    }
});;
/*
 * iButton jQuery Plug-in
 *
 * Copyright 2011 Giva, Inc. (http://www.givainc.com/labs/) 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * 	http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Date: 2011-07-26
 * Rev:  1.0.03
 */
(function(E){E.iButton={version:"1.0.03",setDefaults:function(G){E.extend(F,G)}};E.fn.iButton=function(J){var K=typeof arguments[0]=="string"&&arguments[0];var I=K&&Array.prototype.slice.call(arguments,1)||arguments;var H=(this.length==0)?null:E.data(this[0],"iButton");if(H&&K&&this.length){if(K.toLowerCase()=="object"){return H}else{if(H[K]){var G;this.each(function(L){var M=E.data(this,"iButton")[K].apply(H,I);if(L==0&&M){if(!!M.jquery){G=E([]).add(M)}else{G=M;return false}}else{if(!!M&&!!M.jquery){G=G.add(M)}}});return G||this}else{return this}}}else{return this.each(function(){new C(this,J)})}};var A=0;E.browser.iphone=(navigator.userAgent.toLowerCase().indexOf("iphone")>-1);var C=function(N,I){var S=this,H=E(N),T=++A,K=false,U={},O={dragging:false,clicked:null},W={position:null,offset:null,time:null},I=E.extend({},F,I,(!!E.metadata?H.metadata():{})),Y=(I.labelOn==B&&I.labelOff==D),Z=":checkbox, :radio";if(!H.is(Z)){return H.find(Z).iButton(I)}else{if(E.data(H[0],"iButton")){return }}E.data(H[0],"iButton",S);if(I.resizeHandle=="auto"){I.resizeHandle=!Y}if(I.resizeContainer=="auto"){I.resizeContainer=!Y}this.toggle=function(b){var a=(arguments.length>0)?b:!H[0].checked;H.attr("checked",a).trigger("change")};this.disable=function(b){var a=(arguments.length>0)?b:!K;K=a;H.attr("disabled",a);V[a?"addClass":"removeClass"](I.classDisabled);if(E.isFunction(I.disable)){I.disable.apply(S,[K,H,I])}};this.repaint=function(){X()};this.destroy=function(){E([H[0],V[0]]).unbind(".iButton");E(document).unbind(".iButton_"+T);V.after(H).remove();E.data(H[0],"iButton",null);if(E.isFunction(I.destroy)){I.destroy.apply(S,[H,I])}};H.wrap('<div class="'+E.trim(I.classContainer+" "+I.className)+'" />').after('<div class="'+I.classHandle+'"><div class="'+I.classHandleRight+'"><div class="'+I.classHandleMiddle+'" /></div></div><div class="'+I.classLabelOff+'"><span><label>'+I.labelOff+'</label></span></div><div class="'+I.classLabelOn+'"><span><label>'+I.labelOn+'</label></span></div><div class="'+I.classPaddingLeft+'"></div><div class="'+I.classPaddingRight+'"></div>');var V=H.parent(),G=H.siblings("."+I.classHandle),P=H.siblings("."+I.classLabelOff),M=P.children("span"),J=H.siblings("."+I.classLabelOn),L=J.children("span");if(I.resizeHandle||I.resizeContainer){U.onspan=L.outerWidth();U.offspan=M.outerWidth()}if(I.resizeHandle){U.handle=Math.min(U.onspan,U.offspan);G.css("width",U.handle)}else{U.handle=G.width()}if(I.resizeContainer){U.container=(Math.max(U.onspan,U.offspan)+U.handle+20);V.css("width",U.container);P.css("width",U.container-5)}else{U.container=V.width()}var R=U.container-U.handle-6;var X=function(b){var c=H[0].checked,a=(c)?R:0,b=(arguments.length>0)?arguments[0]:true;if(b&&I.enableFx){G.stop().animate({left:a},I.duration,I.easing);J.stop().animate({width:a+4},I.duration,I.easing);L.stop().animate({marginLeft:a-R},I.duration,I.easing);M.stop().animate({marginRight:-a},I.duration,I.easing)}else{G.css("left",a);J.css("width",a+4);L.css("marginLeft",a-R);M.css("marginRight",-a)}};X(false);var Q=function(a){return a.pageX||((a.originalEvent.changedTouches)?a.originalEvent.changedTouches[0].pageX:0)};V.bind("mousedown.iButton touchstart.iButton",function(a){if(E(a.target).is(Z)||K||(!I.allowRadioUncheck&&H.is(":radio:checked"))){return }a.preventDefault();O.clicked=G;W.position=Q(a);W.offset=W.position-(parseInt(G.css("left"),10)||0);W.time=(new Date()).getTime();return false});if(I.enableDrag){E(document).bind("mousemove.iButton_"+T+" touchmove.iButton_"+T,function(c){if(O.clicked!=G){return }c.preventDefault();var a=Q(c);if(a!=W.offset){O.dragging=true;V.addClass(I.classHandleActive)}var b=Math.min(1,Math.max(0,(a-W.offset)/R));G.css("left",b*R);J.css("width",b*R+4);M.css("marginRight",-b*R);L.css("marginLeft",-(1-b)*R);return false})}E(document).bind("mouseup.iButton_"+T+" touchend.iButton_"+T,function(d){if(O.clicked!=G){return}d.preventDefault();var f=true;if(!O.dragging||(((new Date()).getTime()-W.time)<I.clickOffset)){var b=H[0].checked;H.attr("checked",!b);if(E.isFunction(I.click)){I.click.apply(S,[!b,H,I])}}else{var a=Q(d);var c=(a-W.offset)/R;var b=(c>=0.5);if(H[0].checked==b){f=false}H.attr("checked",b)}V.removeClass(I.classHandleActive);O.clicked=null;O.dragging=null;if(f){H.trigger("change")}else{X()}return false});H.bind("change.iButton",function(){X();if(H.is(":radio")){var b=H[0];var a=E(b.form?b.form[b.name]:":radio[name="+b.name+"]");a.filter(":not(:checked)").iButton("repaint")}if(E.isFunction(I.change)){I.change.apply(S,[H,I])}}).bind("focus.iButton",function(){V.addClass(I.classFocus)}).bind("blur.iButton",function(){V.removeClass(I.classFocus)});if(E.isFunction(I.click)){H.bind("click.iButton",function(){I.click.apply(S,[H[0].checked,H,I])})}if(H.is(":disabled")){this.disable(true)}if(E.browser.msie){V.find("*").andSelf().attr("unselectable","on");H.bind("click.iButton",function(){H.triggerHandler("change.iButton")})}if(E.isFunction(I.init)){I.init.apply(S,[H,I])}};var F={duration:200,easing:"swing",labelOn:"ON",labelOff:"OFF",resizeHandle:"auto",resizeContainer:"auto",enableDrag:true,enableFx:true,allowRadioUncheck:false,clickOffset:120,className:"",classContainer:"ibutton-container",classDisabled:"ibutton-disabled",classFocus:"ibutton-focus",classLabelOn:"ibutton-label-on",classLabelOff:"ibutton-label-off",classHandle:"ibutton-handle",classHandleMiddle:"ibutton-handle-middle",classHandleRight:"ibutton-handle-right",classHandleActive:"ibutton-active-handle",classPaddingLeft:"ibutton-padding-left",classPaddingRight:"ibutton-padding-right",init:null,change:null,click:null,disable:null,destroy:null},B=F.labelOn,D=F.labelOff})(jQuery);;
/**
 * jQuery History Plugin (balupton edition) - Simple History Handler/Remote for Hash, State, Bookmarking, and Forward Back Buttons
 * Copyright (C) 2008-2009 Benjamin Arthur Lupton
 * http://www.balupton/projects/jquery_history/
 *
 * This file is part of jQuery History Plugin (balupton edition).
 * 
 * jQuery History Plugin (balupton edition) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * jQuery History Plugin (balupton edition) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with jQuery History Plugin (balupton edition).  If not, see <http://www.gnu.org/licenses/>.
 *
 * @name jqsmarty: jquery.history.js
 * @package jQuery History Plugin (balupton edition)
 * @version 1.0.1-final
 * @date July 11, 2009
 * @category jquery plugin
 * @author Benjamin "balupton" Lupton {@link http://www.balupton.com}
 * @copyright (c) 2008-2009 Benjamin Arthur Lupton {@link http://www.balupton.com}
 * @license GNU Affero General Public License - {@link http://www.gnu.org/licenses/agpl.html}
 * @example Visit {@link http://jquery.com/plugins/project/jquery_history_bal} for more information.
 * 
 * 
 * I would like to take this space to thank the following projects, blogs, articles and people:
 * - jQuery {@link http://jquery.com/}
 * - jQuery UI History - Klaus Hartl {@link http://www.stilbuero.de/jquery/ui_history/}
 * - Really Simple History - Brian Dillard and Brad Neuberg {@link http://code.google.com/p/reallysimplehistory/}
 * - jQuery History Plugin - Taku Sano (Mikage Sawatari) {@link http://www.mikage.to/jquery/jquery_history.html}
 * - jQuery History Remote Plugin - Klaus Hartl {@link http://stilbuero.de/jquery/history/}
 * - Content With Style: Fixing the back button and enabling bookmarking for ajax apps - Mike Stenhouse {@link http://www.contentwithstyle.co.uk/Articles/38/fixing-the-back-button-and-enabling-bookmarking-for-ajax-apps}
 * - Bookmarks and Back Buttons {@link http://ajax.howtosetup.info/options-and-efficiencies/bookmarks-and-back-buttons/}
 * - Ajax: How to handle bookmarks and back buttons - Brad Neuberg {@link http://dev.aol.com/ajax-handling-bookmarks-and-back-button}
 *
 **
 ***
 * CHANGELOG
 **
 * v1.0.1-final, July 11, 2009
 * - Restructured a little bit
 * - Documented
 * - Cleaned go/request
 *
 * v1.0.0-final, June 19, 2009
 * - Been stable for over a year now, pushing live.
 * 
 * v0.1.0-dev, July 24, 2008
 * - Initial Release
 * 
 */

// Start of our jQuery Plugin
(function($)
{	// Create our Plugin function, with $ as the argument (we pass the jQuery object over later)
	// More info: http://docs.jquery.com/Plugins/Authoring#Custom_Alias
	
	// Debug
	
	if (typeof console === 'undefined') {
		console = typeof window.console !== 'undefined' ? window.console : {};
	}
	console.log			= console.log 			|| function(){};
	console.debug		= console.debug 		|| console.log;
	console.warn		= console.warn			|| console.log;
	console.error		= console.error			|| function(){var args = [];for (var i = 0; i < arguments.length; i++) { args.push(arguments[i]); } alert(args.join("\n")); };
	console.trace		= console.trace			|| console.log;
	console.group		= console.group			|| console.log;
	console.groupEnd	= console.groupEnd		|| console.log;
	console.profile		= console.profile		|| console.log;
	console.profileEnd	= console.profileEnd	|| console.log;
	
	
	// Declare our class
	$.History = {
		// Our Plugin definition
		
		// -----------------
		// Options
		
		options: {
			debug: false
		},
		
		// -----------------
		// Variables
		
		state:		'',
		$window:	null,
		$iframe:	null,
		handlers:	{
			generic:	[],
			specific:	{}
		},
		
		// --------------------------------------------------
		// Functions
		
		/**
		 * Format a hash into a proper state
		 * @param {String} hash
		 */
		format: function ( hash ) {
			// Format the hash
			hash = hash.replace(/^.+?#/g,'').replace(/^#?\/?|\/?$/g, '');
			// Return the hash
			return hash;
		},
		
		/**
		 * Get the current state of the application
		 */
        getState: function ( ) {
			var History = $.History;
			// Get the current state
			return History.state;
        },
		/**
		 * Set the current state of the application
		 * @param {String} hash
		 */
		setState: function ( state ) {
			var History = $.History;
			// Format the state
			state = History.format(state)
			// Apply the state
			History.state = state;
			// Return the state
			return History.state;
		},
		
		/**
		 * Get the current hash of the browser
		 */
		getHash: function ( ) {
			var History = $.History;
			// Get hash
			if (parent && !$.browser.msie) {
				var hash = parent.window.location.hash;
			} else {
				var hash = window.location.hash || location.hash;
			}
			// Format the hash
			hash = History.format(hash);
			// Return the hash
			return hash;
		},
		/**
		 * Set the current hash of the browser
		 * @param {String} hash
		 */
		setHash: function ( hash ) {
			var History = $.History;
			// Prepare hash
			hash = $.History.format(hash);
			hash = hash.replace(/^\/?|\/?(\?)|\/?$/g, '/$1');
			
			// Write hash
			if ( typeof window.location.hash !== 'undefined' ) {
				//window.location.hash = hash;
			} else {
				location.hash = hash;
			}
			
			// Update IE<8 History
			if ( $.browser.msie && parseInt($.browser.version, 10) < 8 )
			{	// We are IE<8
				$.History.$iframe.contentWindow.document.open();
				$.History.$iframe.contentWindow.document.close();
				//$.History.$iframe.contentWindow.document.location.hash = $.History.getState();						
			}
			
		},
		
		/**
		 * Go to the specific state - does not force a history entry like setHash
		 * @param {String} state
		 */
		go: function ( state ) {
			var History = $.History;
			
			// Format the state
			state = History.format(state);
			
			// Get the current hash
			var hash = History.getHash();
			
			// Are they different?
			if ( hash !== state ) {
				// Yes, create a history entry
				History.setHash(state);
				// Wait for hashchange
			} else {
				// No change, but update state and fire
				History.setState(state);
				History.trigger();
			}
			
			// Done
			return true;
		},
		
		/**
		 * Fired when the hash is changed, either automaticly or manually
		 * @param {Event} e
		 */
		hashchange: function ( e ) {

			var History = $.History;
			
			// Debug
			if ( History.options.debug ) {
				console.debug('History.hashchange', this, arguments);
			}
			
			// Get Hash
			var hash = History.getHash();
			var state = History.getState();
			
			// Prevent IE 8 from fireing this twice
			if ( (!History.$iframe && state === hash) || (History.$iframe && History.hash === History.$iframe.contentWindow.document.location.hash) ) {
				// For some reason this works
				return false;
			}
			
			// Check
			if ( state === hash ) {
				// Nothing to do
				return false;
			}
			
			// Update the state with the new hash
			History.setState(hash);
			
			// Fire the handler
			History.trigger();
			
			// All done
			return true;
		},
		
		/**
		 * Bind a handler to a hash
		 * @param {Object} state
		 * @param {Object} handler
		 */
		bind: function ( state, handler ) {
			var History = $.History;
			// 
			if ( handler ) {
				// We have a state specific handler
				// Prepare
				if ( typeof History.handlers.specific[state] === 'undefined' )
				{	// Make it an array
					History.handlers.specific[state] = [];
				}
				// Push new handler
				History.handlers.specific[state].push(handler);
			}
			else {
				// We have a generic handler
				handler = state;
				History.handlers.generic.push(handler);
			}
			
			// Done
			return true;
		},
		
		/**
		 * Trigger a handler for a state
		 * @param {String} state
		 */
		trigger: function ( state ) {
			var History = $.History;
			
			// Prepare
			if ( typeof state === 'undefined' ) {
				// Use current
				state = History.getState();
			}
			var i, n, handler, list;
			
			// Fire specific
			if ( typeof History.handlers.specific[state] !== 'undefined' ) {
				// We have specific handlers
				list = History.handlers.specific[state];
				for ( i = 0, n = list.length; i < n; ++i ) {
					// Fire the specific handler
					handler = list[i];
					handler(state);
				}
			}
			
			// Fire generics
			list = History.handlers.generic;
			for ( i = 0, n = list.length; i < n; ++i ) {
				// Fire the specific handler
				handler = list[i];
				handler(state);
			}
			
			// Done
			return true;
		},
		
		// --------------------------------------------------
		// Constructors
		
		/**
		 * Construct our application
		 */
		construct: function ( ) {
			var History = $.History;
			
			// Modify the document
			$(document).ready(function() {
				// Prepare the document
				History.domReady();
			});
			
			// Done
			return true;
		},
		
		/**
		 * Configure our application
		 * @param {Object} options
		 */
		configure: function ( options ) {
			var History = $.History;
			
			// Set options
			History.options = $.extend(History.options, options);
			
			// Done
			return true;
		},
		
		domReadied: false,
		domReady: function ( ) {
			var History = $.History;
			
			// Runonce
			if ( History.domRedied ) {
				return;
			}
			History.domRedied = true;
			
			// Define window
			History.$window = $(window);
			
			// Apply the hashchange function
			History.$window.bind('hashchange', this.hashchange);
			
			// Force hashchange support for all browsers
			setTimeout(History.hashchangeLoader, 200);
			
			// All done
			return true;
		},
		
		/**
		 * Enable hashchange for all browsers
		 */
		hashchangeLoader: function () {
			var History = $.History;
			
			// More is needed for non IE8 browsers
			if ( !($.browser.msie && parseInt($.browser.version) >= 8) ) {	
				// We are not IE8
			
				// State our checker function, it is used to constantly check the location to detect a change
				var checker;
				
				// Handle depending on the browser
				if ( $.browser.msie ) {
					// We are still IE
				
					// Append and $iframe to the document, as $iframes are required for back and forward
					// Create a hidden $iframe for hash change tracking
					History.$iframe = $('<iframe id="jquery-history-iframe" style="display: none;"></$iframe>').prependTo(document.body)[0];
					
					// Create initial history entry
					History.$iframe.contentWindow.document.open();
					History.$iframe.contentWindow.document.close();
					
					// Check for initial state
					var hash = History.getHash();
					if ( hash ) {
						// Apply it to the iframe
						History.$iframe.contentWindow.document.location.hash = hash;
					}
					
					// Define the checker function (for bookmarks)
					checker = function ( ) {
						var iframeHash = History.format(History.$iframe.contentWindow.document.location.hash);
						if ( History.getState() !== iframeHash ) {
							// Back Button Change
							History.setHash(History.$iframe.contentWindow.document.location.hash);
						}
						var hash = History.getHash();
						if ( History.getState() !== hash ) {
							// The has has changed
							History.go(hash);
						}
					};
				}
				else {
					// We are not IE
				
					// Define the checker function (for bookmarks, back, forward)
					checker = function ( ) {
						var hash = History.getHash();
						if ( History.getState() !== hash ) {
							// The has has changed
							History.go(hash);
						}
					};
				}
				
				// Apply the checker function
				if ( !($.browser.msie && parseInt($.browser.version) < 8) ) {
					setInterval(checker, 200);
				} else {
					setInterval(checker, 1500);
				}
			}
			else {
				// We are IE8
				var hash = History.getHash();
				if (hash) {
					History.$window.trigger('hashchange');
				}
			}
			
			// Done
			return true;
		}
	
	}; // We have finished extending/defining our Plugin

	// --------------------------------------------------
	// Finish up
	
	// Instantiate
	$.History.construct();

// Finished definition

})(jQuery); // We are done with our plugin, so lets call it with jQuery as the argument
;
/*
 * jQuery store - Plugin for persistent data storage using localStorage, userData (and window.name)
 * 
 * Authors: Rodney Rehm
 * Web: http://medialize.github.com/jQuery-store/
 * 
 * Licensed under the MIT License:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 */

/**********************************************************************************
 * INITIALIZE EXAMPLES:
 **********************************************************************************
 * 	// automatically detect best suited storage driver and use default serializers
 *	$.storage = new $.store();
 *	// optionally initialize with specific driver and or serializers
 *	$.storage = new $.store( [driver] [, serializers] );
 *		driver		can be the key (e.g. "windowName") or the driver-object itself
 *		serializers	can be a list of named serializers like $.store.serializers
 **********************************************************************************
 * USAGE EXAMPLES:
 **********************************************************************************
 *	$.storage.get( key );			// retrieves a value
 *	$.storage.set( key, value );	// saves a value
 *	$.storage.del( key );			// deletes a value
 *	$.storage.flush();				// deletes aall values
 **********************************************************************************
 */

(function($,undefined){

/**********************************************************************************
 * $.store base and convinience accessor
 **********************************************************************************/

$.store = function( driver, serializers )
{
	var that = this;
	
	if( typeof driver == 'string' )
	{
		if( $.store.drivers[ driver ] )
			this.driver = $.store.drivers[ driver ];
		else
			throw new Error( 'Unknown driver '+ driver );
	}
	else if( typeof driver == 'object' )
	{
		var invalidAPI = !$.isFunction( driver.init )
			|| !$.isFunction( driver.get )
			|| !$.isFunction( driver.set )
			|| !$.isFunction( driver.del )
			|| !$.isFunction( driver.flush );
			
		if( invalidAPI )
			throw new Error( 'The specified driver does not fulfill the API requirements' );
		
		this.driver = driver;
	}
	else
	{
		// detect and initialize storage driver
		$.each( $.store.drivers, function()
		{
			// skip unavailable drivers
			if( !$.isFunction( this.available ) || !this.available() )
				return true; // continue;
			
			that.driver = this;
			if( that.driver.init() === false )
			{
				that.driver = null;
				return true; // continue;
			}
			
			return false; // break;
		});
	}
	
	// use default serializers if not told otherwise
	if( !serializers )
		serializers = $.store.serializers;
	
	// intialize serializers
	this.serializers = {};
	$.each( serializers, function( key, serializer )
	{
		// skip invalid processors
		if( !$.isFunction( this.init ) )
			return true; // continue;
		
		that.serializers[ key ] = this;
		that.serializers[ key ].init( that.encoders, that.decoders );
	});
};


/**********************************************************************************
 * $.store API
 **********************************************************************************/

$.extend( $.store.prototype, {
	get: function( key )
	{
		var value = this.driver.get( key );
		return this.driver.encodes ? value : this.unserialize( value );
	},
	set: function( key, value )
	{
		this.driver.set( key, this.driver.encodes ? value : this.serialize( value ) );
	},
	del: function( key )
	{
		this.driver.del( key );
	},
	flush: function()
	{
		this.driver.flush();
	},
	driver : undefined,
	encoders : [],
	decoders : [],
	serialize: function( value )
	{
		var that = this;
		
		$.each( this.encoders, function()
		{
			var serializer = that.serializers[ this + "" ];
			if( !serializer || !serializer.encode )
				return true; // continue;
			try
			{
				value = serializer.encode( value );
			}
			catch( e ){}
		});

		return value;
	},
	unserialize: function( value )
	{
		var that = this;
		if( !value )
			return value;
		
		$.each( this.decoders, function()
		{
			var serializer = that.serializers[ this + "" ];
			if( !serializer || !serializer.decode )
				return true; // continue;

			value = serializer.decode( value );
		});

		return value;
	}
});


/**********************************************************************************
 * $.store drivers
 **********************************************************************************/

$.store.drivers = {
	// Firefox 3.5, Safari 4.0, Chrome 5, Opera 10.5, IE8
	'localStorage': {
		// see https://developer.mozilla.org/en/dom/storage#localStorage
		ident: "$.store.drivers.localStorage",
		scope: 'browser',
		available: function()
		{
			try
			{
				return !!window.localStorage;
			}
			catch(e)
			{
				// Firefox won't allow localStorage if cookies are disabled
				return false;
			}
		},
		init: $.noop,
		get: function( key )
		{
			return window.localStorage.getItem( key );
		},
		set: function( key, value )
		{
			window.localStorage.setItem( key, value );
		},
		del: function( key )
		{
			window.localStorage.removeItem( key );
		},
		flush: function()
		{
			window.localStorage.clear();
		}
	},
	
	// IE6, IE7
	'userData': {
		// see http://msdn.microsoft.com/en-us/library/ms531424.aspx
		ident: "$.store.drivers.userData",
		element: null,
		nodeName: 'userdatadriver',
		scope: 'browser',
		initialized: false,
		available: function()
		{
			try
			{
				return !!( document.documentElement && document.documentElement.addBehavior );
			}
			catch(e)
			{
				return false;
			}
		},
		init: function()
		{
			// $.store can only utilize one userData store at a time, thus avoid duplicate initialization
			if( this.initialized )
				return;
			
			try
			{
				// Create a non-existing element and append it to the root element (html)
				this.element = document.createElement( this.nodeName );
				document.documentElement.insertBefore( this.element, document.getElementsByTagName('title')[0] );
				// Apply userData behavior
				this.element.addBehavior( "#default#userData" );
				this.initialized = true;
			}
			catch( e )
			{
				return false; 
			}
		},
		get: function( key )
		{
			this.element.load( this.nodeName );
			return this.element.getAttribute( key );
		},
		set: function( key, value )
		{
			this.element.setAttribute( key, value );
			this.element.save( this.nodeName );
		},
		del: function( key )
		{
			this.element.removeAttribute( key );
			this.element.save( this.nodeName );
			
		},
		flush: function()
		{
			// flush by expiration
			this.element.expires = (new Date).toUTCString();
			this.element.save( this.nodeName );
		}
	},
	
	// most other browsers
	'windowName': {
		ident: "$.store.drivers.windowName",
		scope: 'window',
		cache: {},
		encodes: true,
		available: function()
		{
			return true;
		},
		init: function()
		{
			this.load();
		},
		save: function()
		{
			window.name = $.store.serializers.json.encode( this.cache );
		},
		load: function()
		{
			try
			{
				this.cache = $.store.serializers.json.decode( window.name + "" );
				if( typeof this.cache != "object" )
					this.cache = {};
			}
			catch(e)
			{
				this.cache = {};
				window.name = "{}";
			}
		},
		get: function( key )
		{
			return this.cache[ key ];
		},
		set: function( key, value )
		{
			this.cache[ key ] = value;
			this.save();
		},
		del: function( key )
		{
			try
			{
				delete this.cache[ key ];
			}
			catch(e)
			{
				this.cache[ key ] = undefined;
			}
			
			this.save();
		},
		flush: function()
		{
			window.name = "{}";
		}
	}
};

/**********************************************************************************
 * $.store serializers
 **********************************************************************************/

$.store.serializers = {
	
	'json': {
		ident: "$.store.serializers.json",
		init: function( encoders, decoders )
		{
			encoders.push( "json" );
			decoders.push( "json" );
		},
		encode: ((typeof(JSON) == 'object')?JSON.stringify:$.JSON.stringify),
		decode: ((typeof(JSON) == 'object')?JSON.parse:$.JSON.parse)
	},
	
	// TODO: html serializer
	// 'html' : {},
	
	'xml': {
		ident: "$.store.serializers.xml",
		init: function( encoders, decoders )
		{
			encoders.unshift( "xml" );
			decoders.push( "xml" );
		},
		
		// wouldn't be necessary if jQuery exposed this function
		isXML: function( value )
		{
			var documentElement = ( value ? value.ownerDocument || value : 0 ).documentElement;
			return documentElement ? documentElement.nodeName.toLowerCase() !== "html" : false;
		},

		// encodes a XML node to string (taken from $.jStorage, MIT License)
		encode: function( value )
		{
			if( !value || value._serialized || !this.isXML( value ) )
				return value;

			var _value = { _serialized: this.ident, value: value };
			
			try
			{
				// Mozilla, Webkit, Opera
				_value.value = new XMLSerializer().serializeToString( value );
				return _value;
			}
			catch(E1)
			{
				try
				{
					// Internet Explorer
					_value.value = value.xml;
					return _value;
				}
				catch(E2){}
			}
			
			return value;
		},
		
		// decodes a XML node from string (taken from $.jStorage, MIT License)
		decode: function( value )
		{
			if( !value || !value._serialized || value._serialized != this.ident )
				return value;

			var dom_parser = ( "DOMParser" in window && (new DOMParser()).parseFromString );
			if( !dom_parser && window.ActiveXObject )
			{
				dom_parser = function( _xmlString )
				{
					var xml_doc = new ActiveXObject( 'Microsoft.XMLDOM' );
					xml_doc.async = 'false';
					xml_doc.loadXML( _xmlString );
					return xml_doc;
				}
			}

			if( !dom_parser )
			{
				return undefined;
			}
			
			value.value = dom_parser.call(
				"DOMParser" in window && (new DOMParser()) || window, 
				value.value, 
				'text/xml'
			);
			
			return this.isXML( value.value ) ? value.value : undefined;
		}
	}
};

})(jQuery);;
/*! jQuery UI - v1.8.24 - 2012-09-28
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.position.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.ui=a.ui||{};var c=/left|center|right/,d=/top|center|bottom/,e="center",f={},g=a.fn.position,h=a.fn.offset;a.fn.position=function(b){if(!b||!b.of)return g.apply(this,arguments);b=a.extend({},b);var h=a(b.of),i=h[0],j=(b.collision||"flip").split(" "),k=b.offset?b.offset.split(" "):[0,0],l,m,n;return i.nodeType===9?(l=h.width(),m=h.height(),n={top:0,left:0}):i.setTimeout?(l=h.width(),m=h.height(),n={top:h.scrollTop(),left:h.scrollLeft()}):i.preventDefault?(b.at="left top",l=m=0,n={top:b.of.pageY,left:b.of.pageX}):(l=h.outerWidth(),m=h.outerHeight(),n=h.offset()),a.each(["my","at"],function(){var a=(b[this]||"").split(" ");a.length===1&&(a=c.test(a[0])?a.concat([e]):d.test(a[0])?[e].concat(a):[e,e]),a[0]=c.test(a[0])?a[0]:e,a[1]=d.test(a[1])?a[1]:e,b[this]=a}),j.length===1&&(j[1]=j[0]),k[0]=parseInt(k[0],10)||0,k.length===1&&(k[1]=k[0]),k[1]=parseInt(k[1],10)||0,b.at[0]==="right"?n.left+=l:b.at[0]===e&&(n.left+=l/2),b.at[1]==="bottom"?n.top+=m:b.at[1]===e&&(n.top+=m/2),n.left+=k[0],n.top+=k[1],this.each(function(){var c=a(this),d=c.outerWidth(),g=c.outerHeight(),h=parseInt(a.curCSS(this,"marginLeft",!0))||0,i=parseInt(a.curCSS(this,"marginTop",!0))||0,o=d+h+(parseInt(a.curCSS(this,"marginRight",!0))||0),p=g+i+(parseInt(a.curCSS(this,"marginBottom",!0))||0),q=a.extend({},n),r;b.my[0]==="right"?q.left-=d:b.my[0]===e&&(q.left-=d/2),b.my[1]==="bottom"?q.top-=g:b.my[1]===e&&(q.top-=g/2),f.fractions||(q.left=Math.round(q.left),q.top=Math.round(q.top)),r={left:q.left-h,top:q.top-i},a.each(["left","top"],function(c,e){a.ui.position[j[c]]&&a.ui.position[j[c]][e](q,{targetWidth:l,targetHeight:m,elemWidth:d,elemHeight:g,collisionPosition:r,collisionWidth:o,collisionHeight:p,offset:k,my:b.my,at:b.at})}),a.fn.bgiframe&&c.bgiframe(),c.offset(a.extend(q,{using:b.using}))})},a.ui.position={fit:{left:function(b,c){var d=a(window),e=c.collisionPosition.left+c.collisionWidth-d.width()-d.scrollLeft();b.left=e>0?b.left-e:Math.max(b.left-c.collisionPosition.left,b.left)},top:function(b,c){var d=a(window),e=c.collisionPosition.top+c.collisionHeight-d.height()-d.scrollTop();b.top=e>0?b.top-e:Math.max(b.top-c.collisionPosition.top,b.top)}},flip:{left:function(b,c){if(c.at[0]===e)return;var d=a(window),f=c.collisionPosition.left+c.collisionWidth-d.width()-d.scrollLeft(),g=c.my[0]==="left"?-c.elemWidth:c.my[0]==="right"?c.elemWidth:0,h=c.at[0]==="left"?c.targetWidth:-c.targetWidth,i=-2*c.offset[0];b.left+=c.collisionPosition.left<0?g+h+i:f>0?g+h+i:0},top:function(b,c){if(c.at[1]===e)return;var d=a(window),f=c.collisionPosition.top+c.collisionHeight-d.height()-d.scrollTop(),g=c.my[1]==="top"?-c.elemHeight:c.my[1]==="bottom"?c.elemHeight:0,h=c.at[1]==="top"?c.targetHeight:-c.targetHeight,i=-2*c.offset[1];b.top+=c.collisionPosition.top<0?g+h+i:f>0?g+h+i:0}}},a.offset.setOffset||(a.offset.setOffset=function(b,c){/static/.test(a.curCSS(b,"position"))&&(b.style.position="relative");var d=a(b),e=d.offset(),f=parseInt(a.curCSS(b,"top",!0),10)||0,g=parseInt(a.curCSS(b,"left",!0),10)||0,h={top:c.top-e.top+f,left:c.left-e.left+g};"using"in c?c.using.call(b,h):d.css(h)},a.fn.offset=function(b){var c=this[0];return!c||!c.ownerDocument?null:b?a.isFunction(b)?this.each(function(c){a(this).offset(b.call(this,c,a(this).offset()))}):this.each(function(){a.offset.setOffset(this,b)}):h.call(this)}),a.curCSS||(a.curCSS=a.css),function(){var b=document.getElementsByTagName("body")[0],c=document.createElement("div"),d,e,g,h,i;d=document.createElement(b?"div":"body"),g={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},b&&a.extend(g,{position:"absolute",left:"-1000px",top:"-1000px"});for(var j in g)d.style[j]=g[j];d.appendChild(c),e=b||document.documentElement,e.insertBefore(d,e.firstChild),c.style.cssText="position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;",h=a(c).offset(function(a,b){return b}).offset(),d.innerHTML="",e.removeChild(d),i=h.top+h.left+(b?2e3:0),f.fractions=i>21&&i<22}()})(jQuery);;
/*
 * jQuery UI Autocomplete 1.8.2
 *
 * Copyright (c) 2010 AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 *
 * http://docs.jquery.com/UI/Autocomplete
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.widget.js
 *	jquery.ui.position.js
 */
(function(e){e.widget("ui.autocomplete",{options:{minLength:1,delay:300},_create:function(){var a=this,c=this.element[0].ownerDocument;this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(d){var b=e.ui.keyCode;switch(d.keyCode){case b.PAGE_UP:a._move("previousPage",d);break;case b.PAGE_DOWN:a._move("nextPage",d);break;case b.UP:a._move("previous",d);d.preventDefault();
break;case b.DOWN:a._move("next",d);d.preventDefault();break;case b.ENTER:case b.NUMPAD_ENTER:a.menu.active&&d.preventDefault();case b.TAB:if(!a.menu.active)return;a.menu.select(d);break;case b.ESCAPE:a.element.val(a.term);a.close(d);break;case b.LEFT:case b.RIGHT:case b.SHIFT:case b.CONTROL:case b.ALT:case b.COMMAND:case b.COMMAND_RIGHT:case b.INSERT:case b.CAPS_LOCK:case b.END:case b.HOME:break;default:clearTimeout(a.searching);a.searching=setTimeout(function(){a.search(null,d)},a.options.delay);
break}}).bind("focus.autocomplete",function(){a.selectedItem=null;a.previous=a.element.val()}).bind("blur.autocomplete",function(d){clearTimeout(a.searching);a.closing=setTimeout(function(){a.close(d);a._change(d)},150)});this._initSource();this.response=function(){return a._response.apply(a,arguments)};this.menu=e("<ul></ul>").addClass("ui-autocomplete").appendTo("body",c).mousedown(function(){setTimeout(function(){clearTimeout(a.closing)},13)}).menu({focus:function(d,b){b=b.item.data("item.autocomplete");
false!==a._trigger("focus",null,{item:b})&&/^key/.test(d.originalEvent.type)&&a.element.val(b.value)},selected:function(d,b){b=b.item.data("item.autocomplete");false!==a._trigger("select",d,{item:b})&&a.element.val(b.value);a.close(d);d=a.previous;if(a.element[0]!==c.activeElement){a.element.focus();a.previous=d}a.selectedItem=b},blur:function(){a.menu.element.is(":visible")&&a.element.val(a.term)}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu");e.fn.bgiframe&&this.menu.element.bgiframe()},
destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");this.menu.element.remove();e.Widget.prototype.destroy.call(this)},_setOption:function(a){e.Widget.prototype._setOption.apply(this,arguments);a==="source"&&this._initSource()},_initSource:function(){var a,c;if(e.isArray(this.options.source)){a=this.options.source;this.source=function(d,b){b(e.ui.autocomplete.filter(a,d.term))}}else if(typeof this.options.source===
"string"){c=this.options.source;this.source=function(d,b){e.getJSON(c,d,b)}}else this.source=this.options.source},search:function(a,c){a=a!=null?a:this.element.val();if(a.length<this.options.minLength)return this.close(c);clearTimeout(this.closing);if(this._trigger("search")!==false)return this._search(a)},_search:function(a){this.term=this.element.addClass("ui-autocomplete-loading").val();this.source({term:a},this.response)},_response:function(a){if(a.length){a=this._normalize(a);this._suggest(a);
this._trigger("open")}else this.close();this.element.removeClass("ui-autocomplete-loading")},close:function(a){clearTimeout(this.closing);if(this.menu.element.is(":visible")){this._trigger("close",a);this.menu.element.hide();this.menu.deactivate()}},_change:function(a){this.previous!==this.element.val()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(a){if(a.length&&a[0].label&&a[0].value)return a;return e.map(a,function(c){if(typeof c==="string")return{label:c,value:c};return e.extend({label:c.label||
c.value,value:c.value||c.label},c)})},_suggest:function(a){var c=this.menu.element.empty().zIndex(this.element.zIndex()+1),d;this._renderMenu(c,a);this.menu.deactivate();this.menu.refresh();this.menu.element.show().position({my:"left top",at:"left bottom",of:this.element,collision:"none"});a=c.width("").width();d=this.element.width();c.width(Math.max(a,d))},_renderMenu:function(a,c){var d=this;e.each(c,function(b,f){d._renderItem(a,f)})},_renderItem:function(a,c){return e("<li></li>").data("item.autocomplete",
c).append("<a>"+c.label+"</a>").appendTo(a)},_move:function(a,c){if(this.menu.element.is(":visible"))if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term);this.menu.deactivate()}else this.menu[a](c);else this.search(null,c)},widget:function(){return this.menu.element}});e.extend(e.ui.autocomplete,{escapeRegex:function(a){return a.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi,"\\$1")},filter:function(a,c){var d=new RegExp(e.ui.autocomplete.escapeRegex(c),
"i");return e.grep(a,function(b){return d.test(b.label||b.value||b)})}})})(jQuery);
(function(e){e.widget("ui.menu",{_create:function(){var a=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(c){if(e(c.target).closest(".ui-menu-item a").length){c.preventDefault();a.select(c)}});this.refresh()},refresh:function(){var a=this;this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem").children("a").addClass("ui-corner-all").attr("tabindex",
-1).mouseenter(function(c){a.activate(c,e(this).parent())}).mouseleave(function(){a.deactivate()})},activate:function(a,c){this.deactivate();if(this.hasScroll()){var d=c.offset().top-this.element.offset().top,b=this.element.attr("scrollTop"),f=this.element.height();if(d<0)this.element.attr("scrollTop",b+d);else d>f&&this.element.attr("scrollTop",b+d-f+c.height())}this.active=c.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end();this._trigger("focus",a,{item:c})},deactivate:function(){if(this.active){this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
this._trigger("blur");this.active=null}},next:function(a){this.move("next",".ui-menu-item:first",a)},previous:function(a){this.move("prev",".ui-menu-item:last",a)},first:function(){return this.active&&!this.active.prev().length},last:function(){return this.active&&!this.active.next().length},move:function(a,c,d){if(this.active){a=this.active[a+"All"](".ui-menu-item").eq(0);a.length?this.activate(d,a):this.activate(d,this.element.children(c))}else this.activate(d,this.element.children(c))},nextPage:function(a){if(this.hasScroll())if(!this.active||
this.last())this.activate(a,this.element.children(":first"));else{var c=this.active.offset().top,d=this.element.height(),b=this.element.children("li").filter(function(){var f=e(this).offset().top-c-d+e(this).height();return f<10&&f>-10});b.length||(b=this.element.children(":last"));this.activate(a,b)}else this.activate(a,this.element.children(!this.active||this.last()?":first":":last"))},previousPage:function(a){if(this.hasScroll())if(!this.active||this.first())this.activate(a,this.element.children(":last"));
else{var c=this.active.offset().top,d=this.element.height();result=this.element.children("li").filter(function(){var b=e(this).offset().top-c+d-e(this).height();return b<10&&b>-10});result.length||(result=this.element.children(":first"));this.activate(a,result)}else this.activate(a,this.element.children(!this.active||this.first()?":last":":first"))},hasScroll:function(){return this.element.height()<this.element.attr("scrollHeight")},select:function(a){this._trigger("selected",a,{item:this.active})}})})(jQuery);
;
/**
 * @file jQuery Plugin: jquery.ajax-combobox
 * @version 7.4.4
 * @author Yuusaku Miyazaki <toumin.m7@gmail.com>
 * @license MIT License
 */
(function($) {

/**
 * @desc プラグインをjQueryのプロトタイプに追加する
 * @global
 * @memberof jQuery
 * @param {string|Object} source - サーバ側のプログラム、もしくは連想配列そのもの。
 * @param {Object} option - オプションを収めた連想配列。
 * @param {boolean} [option.instance] - プラグインを呼び出すとき、jQueryオブジェクトではなくインスタンスを返すかどうか
 * @param {string} [option.lang='ja'] - プラグインのメッセージに使われる言語。 ('ja', 'en', 'es' and 'pt-br')
 * @param {string} [option.db_table='tbl'] - 問い合わせるデータベースのテーブル。
 * @param {string} [option.field='name'] - JavaScript側での結果表示に用いるフィールド。
 * @param {string} [option.search_field=option.field] - 検索対象のフィールド名。カンマ区切りで複数指定可能。 (e.g.: 'id, name, job')
 * @param {string|Array} [option.order_by=option.search_field] - 並替の基準となるフィールド。配列でも可。 (e.g.: 'name DESC' or ['name ASC', 'age DESC'])
 * @param {number} [option.per_page=10] - 候補一覧の1ページあたりに表示する数。
 * @param {number} [option.navi_num=5] - ページナビで表示する、隣接ページの数。
 * @param {boolean} [option.navi_simple=false] - 先頭・末尾のページへのリンクを非表示にして、ComboBoxの幅をできるだけ狭くする。
 * @param {string} [option.plugin_type='combobox'] - 'combobox', 'simple', 'textarea'
 * @param {string} [option.init_record=false] - 初期値に指定するレコード。プライマリキーの値で指定する。 
 * @param {string} [option.bind_to] - 候補選択後に実行されるイベントの名前
 * @param {string} [option.and_or='AND'] - AND検索、もしくはOR検索 ('AND' or 'OR')
 * @param {boolean|string} [option.sub_info=false] - サブ情報を表示。'simple'と指定することで項目名を非表示にできる。 (true, false or 'simple')
 * @param {Objec} [option.sub_as={}] - サブ情報のフィールドの別名。連想配列で指定する。
 * @param {string} [option.show_field] - サブ情報で表示するフィールド。カンマ区切りで複数指定可能。 (e.g.: 'id' or 'id, job, age')
 * @param {string} [option.hide_field] - サブ情報で非表示にするフィールド。カンマ区切りで複数指定可能。 (e.g.: 'id' or 'id, job, age')
 * @param {boolean} [option.select_only=false] - セレクト専用にする。(データベースに登録された値しか受け入れない)
 * @param {string} [option.primary_key='id'] - セレクト専用時、Form の hidden の値に指定される、レコードを特定できるフィールド。
 * @param {string} [option.button_img='dist/btn.png'] - ボタンに使われる画像
 * @param {string} [option.shorten_btn] - (option.plugin_type='textarea' の場合に限り、)短縮実行ボタンのセレクタ。
 * @param {string} [option.shorten_src='dist/bitly.php'] - URL短縮を外部に依頼するスクリプトのパス。
 * @param {number} [option.shorten_min=20] - URL短縮を実行する最小の文字数。
 * @param {Object} [option.shorten_reg] - URLを検出するための正規表現。
 * @param {Array} [option.tags=false] - (option.plugin_type='textarea' の場合に限り、)タグ検索の設定。
 * @param {Array} [option.tags.pattern] - タグを囲む記号。開始文字と終了文字を配列で指定する。 (e.g.: pattern: [ '<', '>' ])
 * @param {Array} [option.tags.space] - タグ選択後に、前後に空白を挿入するかどうかを配列で指定する。
 * @param {string} [option.tags.db_table=option.db_table]
 * @param {string} [option.tags.field=option.field]
 * @param {string} [option.tags.search_field=option.search_field]
 * @param {string|Array} [option.tags.order_by=option.order_by]
 * @param {boolean|string} [option.tags.sub_info=option.sub_info]
 * @param {Object} [option.tags.sub_as=option.sub_as]
 * @param {string} [option.tags.show_field=option.show_field]
 * @param {string} [option.tags.hide_field=option.hide_field]
 */
$.fn.ajaxComboBox = function(source, option) {
  var arr = [];
  this.each(function() {
    arr.push(new AjaxComboBox(this, source, option));
  });
  return (option !== undefined && option.instance !== undefined && option.instance) ? $(arr) : this;
};

/**
 * @global
 * @constructor
 * @classdesc 要素ごとに適用される処理を集めたクラス
 * @param {Object} combo_input - プラグインを適用するHTML要素。
 * @param {string|Object} source - サーバ側のプログラム、もしくは連想配列そのもの。
 * @param {Object} option - オプションを収めた連想配列。
 */
function AjaxComboBox(combo_input, source, option) {
  this._setOption(source, option);
  this._setMessage();
  this._setCssClass();
  this._setProp();
  this._setElem(combo_input);

  this._setButtonAttrDefault();
  this._setInitRecord();

  this._ehButton();
  this._ehComboInput();
  this._ehWhole();
  this._ehTextArea();

  if (this.option.shorten_btn) this._findUrlToShorten(this);
}

$.extend(AjaxComboBox.prototype, /** @lends AjaxComboBox.prototype */ {
  /**
   * @private
   * @desc オプションの初期化
   * @param {string|Object} source - サーバサイド言語へのパス、またはデータそのものの連想配列
   * @param {Object} option - 連想配列の形式のオプション
   */
  _setOption: function(source, option) {
    option = this._setOption1st(source, option);
    option = this._setOption2nd(option);
    this.option = option;
  },

  /**
   * @private
   * @desc オプションの初期化 第1段階
   * @param {string|Object} source - サーバサイド言語へのパス、またはデータそのものの連想配列
   * @param {Object} option - 連想配列の形式のオプション
   * @return {Object} - 第1段階が終了したオプション
   */
  _setOption1st: function(source, option) {
    return $.extend({
      // 基本設定
      source: source,
      lang: 'ja',
      plugin_type: 'combobox',
      init_record: false,
      db_table: 'tbl',
      field: 'name',
      and_or: 'AND',
      per_page: 10,
      navi_num: 5,
      primary_key: 'id',
      button_img: '/wa-content/dist/btn.png',
      bind_to: false,
      navi_simple: false,

      // サブ情報
      sub_info: false,
      sub_as: {},
      show_field: '',
      hide_field: '',

      // セレクト専用
      select_only: false,

      // タグ検索
      tags: false,

      // URL短縮用
      shorten_btn: false, // 短縮実行ボタンのセレクタ
      shorten_src: 'dist/bitly.php',
      shorten_min: 20,
      shorten_reg: false
    }, option);
  },

  /**
   * @private
   * @desc オプションの初期化 第2段階
   * @param {Object} option - 連想配列の形式のオプション
   * @return {Object} - 第2段階が終了したオプション
   */
  _setOption2nd: function(option) {
    // 検索するフィールド(カンマ区切りで複数指定可能)
    option.search_field = (option.search_field === undefined) ?
      option.field :
      option.search_field;

    // 大文字で統一
    option.and_or = option.and_or.toUpperCase();

    // カンマ区切りのオプションを配列に変換する。
    var arr = ['hide_field', 'show_field', 'search_field'];
    for (var i=0; i<arr.length; i++) {
      option[arr[i]] = this._strToArray(option[arr[i]]);
    }

    // CASE WHEN後のORDER BY指定
    option.order_by = (option.order_by === undefined) ?
      option.search_field :
      option.order_by;

    // order_by を多層配列に
    // 例:  [ ['id', 'ASC'], ['name', 'DESC'] ]
    option.order_by = this._setOrderbyOption(option.order_by, option.field);

    // テキストエリア
    if (option.plugin_type == 'textarea') {
      option.shorten_reg = this._setRegExpShort(option.shorten_reg, option.shorten_min);
    }

    // カテゴリタグ
    if (option.tags) {
      option.tags = this._setTagPattern(option);
    }
    return option;
  },

  /**
   * @private
   * @desc カンマ区切りの文字列を配列にする。
   * @param {string} str - 文字列
   * @return {Array} - 配列
   */
  _strToArray: function(str) {
    return str.replace(/[\s　]+/g, '').split(',');
  },

  /**
   * @private
   * @desc URL短縮用に、URLらしき文字列を検索するための正規表現を生成する
   * @param {Object|boolean} shorten_reg - ユーザが指定した正規表現オブジェクト、もしくはfalse
   * @return {Object} - 正規表現オブジェクト
   */
  _setRegExpShort: function(shorten_reg, shorten_min) {
    if (shorten_reg) return shorten_reg; // ユーザが正規表現を設定しているなら、それを使う。
    var reg = '(?:^|[\\s|　\\[(<「『（【［＜〈《]+)';
    reg += '(';
    reg += 'https:\\/\\/[^\\s|　\\])>」』）】］＞〉》]{' + (shorten_min - 7) + ',}';
    reg += '|';
    reg += 'http:\\/\\/[^\\s|　\\])>」』）】］＞〉》]{'  + (shorten_min - 6) + ',}';
    reg += '|';
    reg += 'ftp:\\/\\/[^\\s|　\\])>」』）】］＞〉》]{'   + (shorten_min - 5) + ',}';
    reg += ')';
    return new RegExp(reg, 'g');
  },

  /**
   * @private
   * @desc テカテゴリタグの定義方法を設定する
   * @param {Object} option - オプション全体の連想配列
   * @return {Object} - タグ定義を格納した連想配列
   */
  _setTagPattern: function(option) {
    for (var i = 0; i < option.tags.length; i++) {
      option.tags[i] = this._setTagOptions(option, i);
      option.tags[i].pattern = this._setRegExpTag(option.tags[i].pattern, option.tags[i].space);
    }
    return option.tags;
  },

  /**
   * @private
   * @desc 各タグの検索方法を設定する
   * @param {Object} option - オプション全体の連想配列
   * @param {number} idx - 選択中のタグを表す添字
   * @return {Object} - タグ1つ分のオプションの連想配列
   */
  _setTagOptions: function(option, idx) {
    option.tags[idx] = $.extend({
      // スペース挿入
      space: [true, true],
      
      // DB接続
      db_table: option.db_table,
      field: option.field,
      search_field: option.search_field,
      primary_key: option.primary_key,

      // サブ情報
      sub_info: option.sub_info,
      sub_as: option.sub_as,
      show_field: option.show_field,
      hide_field: option.hide_field
    }, option.tags[idx]);

    // カンマ区切りのオプションを配列に変換する。
    var arr = ['hide_field', 'show_field', 'search_field'];
    for (var i = 0; i < arr.length; i++) {
      if (typeof option.tags[idx][arr[i]] != 'object') {
        option.tags[idx][arr[i]] = this._strToArray(option.tags[idx][arr[i]]);
      }
    }

    // order_byを配列にする
    option.tags[idx].order_by = (option.tags[idx].order_by === undefined) ?
      option.order_by :
      this._setOrderbyOption(option.tags[idx].order_by, option.tags[idx].field);

    return option.tags[idx];
  },

  /**
   * @private
   * @desc 各タグを抽出するための一連の正規表現を作成する
   * @param {Array} pattern - タグの開始と終了のペアを表す配列
   * @param {Array} space - タグとタグの間の空白を表す配列
   * @return {Object} - タグのパターンを表す連想配列
   */
  _setRegExpTag: function(pattern, space) {
    // ユーザオプションを正規表現エスケープ
    var esc_left  = pattern[0].replace(/[\s\S]*/, this._escapeForReg);
    var esc_right = pattern[1].replace(/[\s\S]*/, this._escapeForReg);

    return {
      // 素のカッコ文字
      left: pattern[0],
      right: pattern[1],

      // キャレットの左側へ、開始カッコまでを抜き出す正規表現
      reg_left: new RegExp(esc_left + '((?:(?!' + esc_left + '|' + esc_right + ')[^\\s　])*)$'),

      // キャレットの右側へ、終了カッコまでを抜き出す正規表現
      reg_right: new RegExp('^((?:(?!' + esc_left + '|' + esc_right + ')[^\\s　])+)'),

      // 候補選択後、開始カッコ前にスペースを挿入するかを判断するための正規表現
      // これに当てはまらない場合、スペースを挿入する。
      space_left: new RegExp('^' + esc_left + '$|[\\s　]+' + esc_left + '$'),

      // 候補選択後、終了カッコ前にスペースを挿入するかを判断するための正規表現
      // これに当てはまらない場合、スペースを挿入する。
      space_right: new RegExp('^$|^[\\s　]+'),

      // 候補選択後、終了カッコを補完するかを判断するための正規表現
      comp_right: new RegExp('^' + esc_right)
    };
  },

  /**
   * @private
   * @desc 正規表現用エスケープ用の無名関数
   * @param {string} text - マッチした部分文字列
   * @return {string} - 置換する値
   */
  _escapeForReg: function(text) {
    return '\\u' + (0x10000 + text.charCodeAt(0)).toString(16).slice(1);
  },

  /**
   * @private
   * @desc コンボボックスとタグ、両方の order_by を配列にする
   * @param {Array} arg_order - ORDER BY の情報を格納した配列
   * @param {string} arg_field - 検索対象のフィールド
   * @return {Array} - order_by の配列
   */
  _setOrderbyOption: function(arg_order, arg_field) {
    var arr = [];
    var orders = [];
    if (typeof arg_order == 'object') {
      for (var i = 0; i < arg_order.length; i++) {
        orders = $.trim(arg_order[i]).split(' ');
        arr[i] =  (orders.length == 2) ? orders : [orders[0], 'ASC'];
      }
    } else {
      orders = $.trim(arg_order).split(' ');
      arr[0] = (orders.length == 2) ?
        orders :
        (orders[0].match(/^(ASC|DESC)$/i)) ?
          [arg_field, orders[0]] :
          [orders[0], 'ASC'];
    }
    return arr;
  },

  /**
   * @private
   * @desc プラグインの中で使うメッセージを設定する
   */
  _setMessage: function() {
    var message;
    switch (this.option.lang) {
      // German (Thanks Sebastian Gohres)
      case 'de':
        message = {
          add_btn     : 'Hinzufügen-Button',
          add_title   : 'Box hinzufügen',
          del_btn     : 'Löschen-Button',
          del_title   : 'Box löschen',
          next        : 'Nächsten',
          next_title  : 'Nächsten' + this.option.per_page + ' (Pfeil-rechts)',
          prev        : 'Vorherigen',
          prev_title  : 'Vorherigen' + this.option.per_page + ' (Pfeil-links)',
          first_title : 'Ersten (Umschalt + Pfeil-links)',
          last_title  : 'Letzten (Umschalt + Pfeil-rechts)',
          get_all_btn : 'alle (Pfeil-runter)',
          get_all_alt : '(Button)',
          close_btn   : 'Schließen (Tab)',
          close_alt   : '(Button)',
          loading     : 'lade...',
          loading_alt : '(lade)',
          page_info   : 'num_page_top - num_page_end von cnt_whole',
          select_ng   : 'Achtung: Bitte wählen Sie aus der Liste aus.',
          select_ok   : 'OK : Richtig ausgewählt.',
          not_found   : 'nicht gefunden',
          ajax_error  : 'Bei der Verbindung zum Server ist ein Fehler aufgetreten. (ajax-combobox)'
        };
        break;

      // English
      case 'en':
        message = {
          add_btn     : 'Add button',
          add_title   : 'add a box',
          del_btn     : 'Del button',
          del_title   : 'delete a box',
          next        : 'Next',
          next_title  : 'Next' + this.option.per_page + ' (Right key)',
          prev        : 'Prev',
          prev_title  : 'Prev' + this.option.per_page + ' (Left key)',
          first_title : 'First (Shift + Left key)',
          last_title  : 'Last (Shift + Right key)',
          get_all_btn : 'Get All (Down key)',
          get_all_alt : '(button)',
          close_btn   : 'Close (Tab key)',
          close_alt   : '(button)',
          loading     : 'loading...',
          loading_alt : '(loading)',
          page_info   : 'num_page_top - num_page_end of cnt_whole',
          select_ng   : 'Attention : Please choose from among the list.',
          select_ok   : 'OK : Correctly selected.',
          not_found   : 'not found',
          ajax_error  : 'An error occurred while connecting to server. (ajax-combobox)'
        };
        break;

      // Spanish (Thanks Joaquin G. de la Zerda)
      case 'es':
        message = {
          add_btn     : 'Agregar boton',
          add_title   : 'Agregar una opcion',
          del_btn     : 'Borrar boton',
          del_title   : 'Borrar una opcion',
          next        : 'Siguiente',
          next_title  : 'Proximas ' + this.option.per_page + ' (tecla derecha)',
          prev        : 'Anterior',
          prev_title  : 'Anteriores ' + this.option.per_page + ' (tecla izquierda)',
          first_title : 'Primera (Shift + Left)',
          last_title  : 'Ultima (Shift + Right)',
          get_all_btn : 'Ver todos (tecla abajo)',
          get_all_alt : '(boton)',
          close_btn   : 'Cerrar (tecla TAB)',
          close_alt   : '(boton)',
          loading     : 'Cargando...',
          loading_alt : '(Cargando)',
          page_info   : 'num_page_top - num_page_end de cnt_whole',
          select_ng   : 'Atencion: Elija una opcion de la lista.',
          select_ok   : 'OK: Correctamente seleccionado.',
          not_found   : 'no encuentre',
          ajax_error  : 'Un error ocurrió mientras conectando al servidor. (ajax-combobox)'
        };
        break;

      // Brazilian Portuguese (Thanks Marcio de Souza)
      case 'pt-br':
        message = {
          add_btn     : 'Adicionar botão',
          add_title   : 'Adicionar uma caixa',
          del_btn     : 'Apagar botão',
          del_title   : 'Apagar uma caixa',
          next        : 'Próxima',
          next_title  : 'Próxima ' + this.option.per_page + ' (tecla direita)',
          prev        : 'Anterior',
          prev_title  : 'Anterior ' + this.option.per_page + ' (tecla esquerda)',
          first_title : 'Primeira (Shift + Left)',
          last_title  : 'Última (Shift + Right)',
          get_all_btn : 'Ver todos (Seta para baixo)',
          get_all_alt : '(botão)',
          close_btn   : 'Fechar (tecla TAB)',
          close_alt   : '(botão)',
          loading     : 'Carregando...',
          loading_alt : '(Carregando)',
          page_info   : 'num_page_top - num_page_end de cnt_whole',
          select_ng   : 'Atenção: Escolha uma opção da lista.',
          select_ok   : 'OK: Selecionado Corretamente.',
          not_found   : 'não encontrado',
          ajax_error  : 'Um erro aconteceu enquanto conectando a servidor. (ajax-combobox)'
        };
        break;

      // Japanese (ja)
      default:
        message = {
          add_btn     : '追加ボタン',
          add_title   : '入力ボックスを追加します',
          del_btn     : '削除ボタン',
          del_title   : '入力ボックスを削除します',
          next        : '次へ',
          next_title  : '次の' + this.option.per_page + '件 (右キー)',
          prev        : '前へ',
          prev_title  : '前の' + this.option.per_page + '件 (左キー)',
          first_title : '最初のページへ (Shift + 左キー)',
          last_title  : '最後のページへ (Shift + 右キー)',
          get_all_btn : '全件取得 (下キー)',
          get_all_alt : '画像:ボタン',
          close_btn   : '閉じる (Tabキー)',
          close_alt   : '画像:ボタン',
          loading     : '読み込み中...',
          loading_alt : '画像:読み込み中...',
          page_info   : 'num_page_top - num_page_end 件 (全 cnt_whole 件)',
          select_ng   : '注意 : リストの中から選択してください',
          select_ok   : 'OK : 正しく選択されました。',
          not_found   : '(0 件)',
          ajax_error  : 'サーバとの通信でエラーが発生しました。(ajax-combobox)'
        };
    }
    this.message = message;
  },

  /**
   * @private
   * @desc CSSクラスの名前を設定する
   */
  _setCssClass: function() {
    // 各モード共通
    var css_class = {
      container      : 'ac_container', // ComboBoxを包むdivタグ
      container_open : 'ac_container_open',
      selected       : 'ac_selected',
      re_area        : 'ac_result_area', // 結果リストの<div>
      navi           : 'ac_navi', // ページナビを囲む<div>
      results        : 'ac_results', // 候補一覧を囲む<ul>
      re_off         : 'ac_results_off', // 候補一覧(非選択状態)
      select         : 'ac_over', // 選択中の<li>
      sub_info       : 'ac_subinfo', // サブ情報
      select_ok      : 'ac_select_ok',
      select_ng      : 'ac_select_ng',
      input_off      : 'ac_input_off' // 非選択状態
    };
    switch (this.option.plugin_type) {
      case 'combobox':
        css_class = $.extend(css_class, {
          button  : 'ac_button', // ボタンのCSSクラス
          btn_on  : 'ac_btn_on', // ボタン(mover時)
          btn_out : 'ac_btn_out', // ボタン(mout時)
          input   : 'ac_input' // テキストボックス
        });
        break;

      case 'simple':
        css_class = $.extend(css_class, {
          input: 'ac_s_input' // テキストボックス
        });
        break;

      case 'textarea':
        css_class = $.extend(css_class, {
          input         : 'ac_textarea', // テキストボックス
          btn_short_off : 'ac_btn_short_off'
        });
        break;
    }
    this.css_class = css_class;
  },

  /**
   * @private
   * @desc 雑多なプロパティをひとまとめにして扱う
   */
  _setProp: function() {
    this.prop = {
      timer_valchange: false, // タイマー変数(一定時間ごとに入力値の変化を監視)
      is_suggest: false, // リストのタイプ。false=>全件 / true=>予測
      page_all: 1,  // 全件表示の際の、現在のページ番号
      page_suggest: 1, // 候補表示の際の、現在のページ番号
      max_all: 1,  // 全件表示の際の、全ページ数
      max_suggest: 1, // 候補表示の際の、全ページ数
      is_paging: false, // ページ移動か?
      is_loading: false, // Ajaxで問い合わせ中かどうか？
      reserve_btn: false, // ボタンの背景色変更の予約があるかどうか？
      reserve_click: false, // マウスのキーを押し続ける操作に対応するためmousedownを検知
      xhr: false, // XMLHttpオブジェクトを格納
      key_paging: false, // キーでページ移動したか？
      key_select: false, // キーで候補移動したか？？
      prev_value: '', // 初期値

      // サブ情報
      size_navi: null, // サブ情報表示用(ページナビの高さ)
      size_results: null, // サブ情報表示用(リストの上枠線)
      size_li: null, // サブ情報表示用(候補一行分の高さ)
      size_left: null, // サブ情報表示用(リストの横幅)
      
      // タグ検索
      tag: null
    };
  },

  /**
   * @private
   * @desc HTML要素を修正、生成する
   * @param {Object} combo_input - プラグイン適用の対象とされたHTML要素
   */
  _setElem: function(combo_input) {
    // 1. 要素を修正、生成する
    // 本体
    var elem = {};
    elem.combo_input = $(combo_input)
      .attr('autocomplete', 'off')
      .addClass(this.css_class.input)
      .wrap('<div>'); // This "div" is "container".

    elem.container = $(elem.combo_input).parent().addClass(this.css_class.container);
    if (this.option.plugin_type == 'combobox') {
      elem.button = $('<div>').addClass(this.css_class.button);
      elem.img    = $('<img>').attr('src', this.option.button_img);
    } else {
      elem.button = false;
      elem.img    = false;
    }
    // サジェストリスト
    elem.result_area = $('<div>').addClass(this.css_class.re_area);
    elem.navi        = $('<div>').addClass(this.css_class.navi);
    elem.navi_info   = $('<div>').addClass('info');
    elem.navi_p      = $('<p>');
    elem.results     = $('<ul>' ).addClass(this.css_class.results);
    elem.sub_info    = $('<div>').addClass(this.css_class.sub_info);
    // primary_keyカラムの値を送信するための"input:hidden"を作成
    if (this.option.plugin_type == 'textarea') {
      elem.hidden = false;
    } else {
      var hidden_name = ($(elem.combo_input).attr('name') !== undefined) ?
        $(elem.combo_input).attr('name') :
        $(elem.combo_input).attr('id');
      // CakePHP用の対策 例:data[search][user] -> data[search][user_primary_key]
    
	
      elem.hidden = $('<input type="hidden" />')
        .attr({
         name: hidden_name,
          id: hidden_name
        })
        .val('');
    }

    // 2. 要素をHTML内に配置する
    switch (this.option.plugin_type) {
      case 'combobox':
        $(elem.container)
          .append(elem.button)
          .append(elem.result_area)
          .append(elem.hidden);
        $(elem.button).append(elem.img);
        break;
      
      case 'simple':
        $(elem.container)
          .append(elem.result_area)
          .append(elem.hidden);
        break;
      
      case 'textarea':
        $(elem.container)
          .append(elem.result_area);
    }
    $(elem.result_area)
      .append(elem.navi)
      .append(elem.results)
      .append(elem.sub_info);
    $(elem.navi)
      .append(elem.navi_info)
      .append(elem.navi_p);

    // 3. サイズ調整
    // ComboBoxの幅
    if (this.option.plugin_type == 'combobox') {
      $(elem.container).width($(elem.combo_input).outerWidth() + $(elem.button).outerWidth());
    } else {
      $(elem.container).width($(elem.combo_input).outerWidth());
    }

    this.elem = elem;
  },

  /**
   * @private
   * @desc 画面表示の初期状態を決める
   */
  _setButtonAttrDefault: function() {
    if (this.option.select_only) {
      if ($(this.elem.combo_input).val() !== '') {
        if (this.option.plugin_type != 'textarea') {
          if ($(this.elem.hidden).val() !== '') {
            // 選択状態
            $(this.elem.combo_input)
              .attr('title',this.message.select_ok)
              .removeClass(this.css_class.select_ng)
              .addClass(this.css_class.select_ok);
          } else {
            // 入力途中
            $(this.elem.combo_input)
              .attr('title',this.message.select_ng)
              .removeClass(this.css_class.select_ok)
              .addClass(this.css_class.select_ng);
          }
        }
      } else {
        // 完全な初期状態へ戻す
        if (this.option.plugin_type != 'textarea') $(this.elem.hidden).val('');
        $(this.elem.combo_input)
          .removeAttr('title')
          .removeClass(this.css_class.select_ng);
      }
    }
    if (this.option.plugin_type == 'combobox') {
      $(this.elem.button).attr('title', this.message.get_all_btn);
      $(this.elem.img).attr('src', this.option.button_img);
    }
  },

  /**
   * @private
   * @desc ComboBoxに初期値を挿入する
   */
  _setInitRecord: function() {
    if (this.option.init_record === false) return;
    // セレクト専用への値を挿入する
    // hiddenへ値を挿入
    if (this.option.plugin_type != 'textarea') $(this.elem.hidden).val(this.option.init_record);

    // テキストボックスへ値を挿入
    if (typeof this.option.source == 'object') {
      // sourceがデータセットの場合
      var data;
      for (var i = 0; i < this.option.source.length; i++) {
        if (this.option.source[i][this.option.primary_key] == this.option.init_record) {
          data = this.option.source[i];
          break;
        }
      }
      this._afterInit(this, data);
    } else {
      var self = this;
      $.ajax({
        dataType: 'json',
        url: self.option.source,
        data: {
          db_table: this.option.db_table,
          pkey_name: this.option.primary_key,
          pkey_val: this.option.init_record
        },
        success: function (json) {
          self._afterInit(self, json);
        },
        error: function(jqXHR, textStatus, errorThrown) { self._ajaxErrorNotify(self, errorThrown); }
      });
    }
  },

  /**
   * @private
   * @desc 初期化用Ajax通信後の処理
   * @param {Object} self - このクラスのインスタンスオブジェクト
   * @param {Object} data - サーバからのレスポンス
   */
  _afterInit: function(self, data) {
    $(self.elem.combo_input).val(data[self.option.field]);
    if (self.option.plugin_type != 'textarea') $(self.elem.hidden).val(data[self.option.primary_key]);
    self.prop.prev_value = data[self.option.field];
    if (self.option.select_only) {
      // 選択状態
      $(self.elem.combo_input)
        .attr('title',self.message.select_ok)
        .removeClass(self.css_class.select_ng)
        .addClass(self.css_class.select_ok);
    }
  },

  /**
   * @private
   * @desc イベントハンドラ: ボタン
   */
  _ehButton: function() {
    if (this.option.plugin_type != 'combobox') return;

    var self = this;
    $(self.elem.button)
      .mouseup(function(ev) {
        if ($(self.elem.result_area).is(':hidden')) {
          clearInterval(self.prop.timer_valchange);
          self.prop.is_suggest = false;
          self._suggest(self);
          $(self.elem.combo_input).focus();
        } else {
          self._hideResults(self);
        }
        ev.stopPropagation();
      })
      .mouseover(function() {
        $(self.elem.button)
          .addClass(self.css_class.btn_on)
          .removeClass(self.css_class.btn_out);
      })
      .mouseout(function() {
        $(self.elem.button)
          .addClass(self.css_class.btn_out)
          .removeClass(self.css_class.btn_on);
      }).mouseout(); // default: mouseout
  },

  /**
   * @private
   * @desc イベントハンドラ: コンボボックスの入力欄
   */
  _ehComboInput: function() {
    var self = this;
    $(self.elem.combo_input).keydown(function(ev) {
      self._processKey(self, ev);
    });
    $(self.elem.combo_input)
      .focus(function() {
        self._setTimerCheckValue(self);
      })
      .click(function() {
        self._setCssFocusedInput(self);
        $(self.elem.results).children('li').removeClass(self.css_class.select);
      });
  },

  /**
   * @private
   * @desc イベントハンドラ: コンボボックス全体
   */
  _ehWhole: function() {
    var self = this;
    var stop_hide = false; // このプラグイン内でのマウスクリックなら、ページ全体での候補消去を中止。
    $(self.elem.container).mousedown(function() {
      stop_hide = true;
    });
    $('html').mousedown(function() {
      if (stop_hide) stop_hide = false;
      else           self._hideResults(self);
    });
  },

  /**
   * @private
   * @desc イベントハンドラ: 検索結果リスト
   */
  _ehResults: function() {
    var self = this;
    $(self.elem.results)
      .children('li')
      .mouseover(function() {
        // Firefoxでは、候補一覧の上にマウスカーソルが乗っていると
        // うまくスクロールしない。そのための対策。 イベント中断。
        if (self.prop.key_select) {
          self.prop.key_select = false;
          return;
        }
        self._setSubInfo(self, this);

        $(self.elem.results).children('li').removeClass(self.css_class.select);
        $(this).addClass(self.css_class.select);
        self._setCssFocusedResults(self);
      })
      .click(function(e) {
        // Firefoxでは、候補一覧の上にマウスカーソルが乗っていると
        // うまくスクロールしない。そのための対策。イベント中断。
        if (self.prop.key_select) {
          self.prop.key_select = false;
          return;
        }
        e.preventDefault();
        e.stopPropagation();
        self._selectCurrentLine(self, false);
      });
  },

  /**
   * @private
   * @desc イベントハンドラ: ページング部分
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _ehNaviPaging: function(self) {
    // "<< 1"
    $(self.elem.navi).find('.navi_first').mouseup(function(ev) {
      $(self.elem.combo_input).focus();
      ev.preventDefault();
      self._firstPage(self);
    });

    // "< prev"
    $(self.elem.navi).find('.navi_prev').mouseup(function(ev) {
      $(self.elem.combo_input).focus();
      ev.preventDefault();
      self._prevPage(self);
    });

    // the number of page
    $(self.elem.navi).find('.navi_page').mouseup(function(ev) {
      $(self.elem.combo_input).focus();
      ev.preventDefault();

      if (!self.prop.is_suggest) self.prop.page_all     = parseInt($(this).text(), 10);
      else                       self.prop.page_suggest = parseInt($(this).text(), 10);

      self.prop.is_paging = true;
      self._suggest(self);
    });

    // "next >"
    $(self.elem.navi).find('.navi_next').mouseup(function(ev) {
      $(self.elem.combo_input).focus();
      ev.preventDefault();
      self._nextPage(self);
    });

    // "last >>"
    $(self.elem.navi).find('.navi_last').mouseup(function(ev) {
      $(self.elem.combo_input).focus();
      ev.preventDefault();
      self._lastPage(self);
    });
  },

  /**
   * @private
   * @desc イベントハンドラ: テキストエリア
   */
  _ehTextArea: function() {
    var self = this;
    if (!self.option.shorten_btn) return;
    // URL短縮用ボタン
    $(self.option.shorten_btn).click(function() {
      self._getShortURL(self);
    });
  },

  /**
   * @private
   * @desc 外部サービスを利用してURLを短縮する
   */
  _getShortURL: function(self) {
    // テキストエリアを入力禁止に
    $(self.elem.combo_input).attr('disabled', 'disabled');

    var text = $(self.elem.combo_input).val(); // Ajax後も使用する
    var matches = []; // 結果を最終的に格納する
    var arr = null; // ループの中で一時的に使用

    while ((arr = self.option.shorten_reg.exec(text)) !== null) {
      matches[matches.length] = arr[1];
    }
    // URLがなければ、ここで終了。
    // ボタンが表示された直後に文章が変更された場合などに対応
    if (matches.length < 1) {
      // テキストエリアを入力可能に
      $(self.elem.combo_input).removeAttr('disabled');
      return;
    }
    // 可変長オブジェクトを引数にする
    var obj_param = {};
    for (var i = 0; i < matches.length; i++) {
      obj_param['p_' + i] = matches[i];
    }
    // bitlyへ送信
    $.ajax({
      dataType: 'json',
      url: self.option.shorten_src,
      data: obj_param,
      success: function (json) {
        // 元URLと短縮URLを順番に置換する
        var i = 0;
        var result = text.replace(self.option.shorten_reg, function() {
          var matched = arguments[0].replace(arguments[1], json[i]);
          i++;
          return matched;
        });
        // 画面を整える
        $(self.elem.combo_input).val(result);
        self.prop.prev_value = result;
        self._disableButtonShort(self);
      },
      error: function(jqXHR, textStatus, errorThrown) { self._ajaxErrorNotify(self, errorThrown); },
      complete: function() {
        // テキストエリアを入力可能に
        $(self.elem.combo_input).removeAttr('disabled').focus();
      }
     });
  },

  /**
   * @private
   * @desc Ajax通信が失敗した場合の処理
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @errorThrom {string} errorThrown - サーバから返されたエラーメッセージ
   */
  _ajaxErrorNotify: function(self, errorThrown) {
    //TODO: アラート表示ではなく、結果リストを流用して表示する。
    //TODO: errorThrownを活用する。
    alert(self.message.ajax_error);
  },


  /**
   * @private
   * @desc 選択候補を追いかけて画面をスクロールさせる。
   *       (キー操作による候補移動、ページ移動のみに適用)
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {boolean} enforce - 移動先をテキストボックスに強制するかどうかの真偽値
   */
  _scrollWindow: function(self, enforce) {
    // 使用する変数を定義
    var current_result = self._getCurrentLine(self);

    var target_top = (current_result && !enforce) ?
      current_result.offset().top :
      $(self.elem.container).offset().top;

    var target_size;

    // サブ情報を表示する場合は、その高さを考慮に入れる
    if (self.option.sub_info) {
      var dl = $(self.elem.sub_info).children('dl:visible');
      target_size =
        $(dl).height() +
        parseInt($(dl).css('border-top-width')) +
        parseInt($(dl).css('border-bottom-width'));
    } else {
      self.prop.size_li = $(self.elem.results).children('li:first').outerHeight();
      target_size = self.prop.size_li;
    }
    var client_height = $(window).height();
    var scroll_top = $(window).scrollTop();
    var scroll_bottom = scroll_top + client_height - target_size;

    // スクロール処理
    var gap;
    if ($(current_result).length) {
      if (target_top < scroll_top || target_size > client_height) {
        // 上へスクロール
        // ※ブラウザの高さがターゲットよりも低い場合もこちらへ分岐する。
        gap = target_top - scroll_top;
      } else if (target_top > scroll_bottom) {
        // 下へスクロール
        gap = target_top - scroll_bottom;
      } else {
        // スクロールは行われない
        return;
      }
    } else if (target_top < scroll_top) {
      gap = target_top - scroll_top;
    }
    window.scrollBy(0, gap);
  },

  /**
   * @private
   * @desc 候補リスト:暗い、入力欄:明瞭、サブ情報:隠す
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _setCssFocusedInput: function(self) {
    $(self.elem.results).addClass(self.css_class.re_off);
    $(self.elem.combo_input).removeClass(self.css_class.input_off);
    $(self.elem.sub_info).children('dl').hide();
  },

  /**
   * @private
   * @desc 候補リスト:明瞭、入力欄:暗い
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _setCssFocusedResults: function(self) {
    $(self.elem.results).removeClass(self.css_class.re_off);
    $(self.elem.combo_input).addClass(self.css_class.input_off);
  },

  /**
   * @private
   * @desc URL短縮ボタンを使用可能にする
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _enableButtonShort: function(self) {
    $(self.option.shorten_btn)
      .removeClass(self.css_class.btn_short_off)
      .removeAttr('disabled');
  },

  /**
   * @private
   * @desc URL短縮ボタンを使用不可にする
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _disableButtonShort: function(self) {
    $(self.option.shorten_btn)
      .addClass(self.css_class.btn_short_off)
      .attr('disabled', 'disabled');
  },

  /**
   * @private
   * @desc 入力値変化の監視をタイマーで予約する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _setTimerCheckValue: function(self) {
    self.prop.timer_valchange = setTimeout(function() {
      self._checkValue(self);
    }, 500);
  },

  /**
   * @private
   * @desc 入力値変化の監視を実行する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _checkValue: function(self) {
    var now_value = $(self.elem.combo_input).val();
    if (now_value != self.prop.prev_value) {
      self.prop.prev_value = now_value;
      if (self.option.plugin_type == 'textarea') {
        // URLを探し、短縮ボタンを表示または非表示にする
        self._findUrlToShorten(self);

        // タグとして検索すべき文字列を探す
        var tag = self._findTag(self, now_value);
        if (tag) {
          self._setTextAreaNewSearch(self, tag);
          self._suggest(self);
        }
      } else {
        // sub_info属性を削除
        $(self.elem.combo_input).removeAttr('sub_info');

        // hiddenの値を削除
        if (self.option.plugin_type != 'textarea') $(self.elem.hidden).val('');

        // セレクト専用時
        if (self.option.select_only) self._setButtonAttrDefault();

        // ページ数をリセット
        self.prop.page_suggest = 1;
        self.prop.is_suggest = true;
        self._suggest(self);
      }
    } else if (
      // textareaで、現在のタグから別のタグへ移動していないか検査する
      self.option.plugin_type == 'textarea' &&
      $(self.elem.result_area).is(':visible')
    ) {
      var new_tag = self._findTag(self, now_value);
      if (!new_tag) {
        self._hideResults(self);
      } else if (
        new_tag.str != self.prop.tag.str ||
        new_tag.pos_left != self.prop.tag.pos_left
      ) {
        self._setTextAreaNewSearch(self, new_tag);
        self._suggest(self);
      }
    }
    // 一定時間ごとの監視を再開
    self._setTimerCheckValue(self);
  },

  /**
   * @private
   * @desc 現在のテキストエリアの値をもとに、検索オプションを決める
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Object} tag - タグ1種類分の情報を格納した連想配列
   */
  _setTextAreaNewSearch: function (self, tag) {
    self.prop.tag             = tag;
    self.prop.page_suggest    = 1;
    self.option.search_field  = self.option.tags[self.prop.tag.type].search_field;
    self.option.order_by      = self.option.tags[self.prop.tag.type].order_by;
    self.option.primary_key   = self.option.tags[self.prop.tag.type].primary_key;
    self.option.db_table      = self.option.tags[self.prop.tag.type].db_table;
    self.option.field         = self.option.tags[self.prop.tag.type].field;
    self.option.sub_info      = self.option.tags[self.prop.tag.type].sub_info;
    self.option.sub_as        = self.option.tags[self.prop.tag.type].sub_as;
    self.option.show_field    = self.option.tags[self.prop.tag.type].show_field;
    self.option.hide_field    = self.option.tags[self.prop.tag.type].hide_field;
  },

  /**
   * @private
   * @desc URLを探し、短縮ボタンを表示または非表示にする
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Object} tag - タグ1種類分の情報を格納した連想配列
   */
  _findUrlToShorten: function(self) {
    var flag = null;
    var arr  = null; // ループの中で一時的に使用
    while ((arr = self.option.shorten_reg.exec($(self.elem.combo_input).val())) !== null) {
      flag = true;
      self.option.shorten_reg.lastIndex = 0; // .exec() のループを中断する場合、必ずリセットしておくこと
      break;
    }
    if (flag) self._enableButtonShort(self);
    else self._disableButtonShort(self);
  },

  /**
   * @private
   * @desc キャレット位置周辺の文字列(タグ)を抜き出す
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {string} now_value - テキストエリア全文
   * @return {Array} - キャレット位置周辺の文字列と、抜き出す範囲(左、右)のオブジェクト配列
   */
  _findTag: function(self, now_value) {
    // キャレット位置を取得
    var pos  = self._getCaretPosition($(self.elem.combo_input).get(0));

    // 抽出したタグの情報を保存する。
    var left, pos_left, right, pos_right, str;
    for (var i = 0; i < self.option.tags.length; i++) {
      // キャレット位置から左へ空白までを抜き出す
      left = now_value.substring(0, pos);
      left = left.match(self.option.tags[i].pattern.reg_left);
      if (!left) continue;
      left = left[1]; // 短縮していることに注意!
      pos_left = pos - left.length;
      if (pos_left < 0) pos_left = 0;

      // キャレット位置から右へ空白までを抜き出す
      right = now_value.substring(pos, now_value.length);
      right = right.match(self.option.tags[i].pattern.reg_right);
      if (right) {
        right = right[1]; // 短縮していることに注意!
        pos_right = pos + right.length;
      } else {
        right = '';
        pos_right = pos;
      }
      str = left + '' + right;
      self.prop.is_suggest = (str === '') ? false : true;
      return {
        type: i,
        str: str,
        pos_left: pos_left,
        pos_right: pos_right
      };
    }
    return false;
  },

  /**
   * @private
   * @desc キャレットの位置を取得
   * @param {Object} item - プラグイン呼び出し元の要素 "$(elem).get(0)"
   * @return {number} - キャレットの現在位置
   */
  _getCaretPosition: function(item) {
    var pos = 0;
    if (document.selection) {
      // IE
      item.focus();
      var obj_select = document.selection.createRange();
      obj_select.moveStart ("character", -item.value.length);
      pos = obj_select.text.length;
    } else if (item.selectionStart || item.selectionStart == "0") {
      // Firefox, Chrome
      pos = item.selectionStart;
    }
    return pos;
  },

  /**
   * @private
   * @desc 指定位置にキャレットを移動させる
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {number} pos - キャレットを移動させる位置
   */
  _setCaretPosition: function(self, pos) {
    var item = $(self.elem.combo_input).get(0);
    if (item.setSelectionRange) {
      // Firefox, Chrome
      item.focus();
      item.setSelectionRange(pos, pos);
    } else if (item.createTextRange) {
      // IE
      var range = item.createTextRange();
      range.collapse(true);
      range.moveEnd("character", pos);
      range.moveStart("character", pos);
      range.select();
    }
  },

  /**
   * @private
   * @desc キー入力への対応
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Object} e - jQueryのイベントオブジェクト
   */
  _processKey: function(self, e) {
    if (
      ($.inArray(e.keyCode, [27,38,40,9]) > -1 && $(self.elem.result_area).is(':visible')) ||
      ($.inArray(e.keyCode, [37,39,13,9]) > -1 && self._getCurrentLine(self)) ||
      (e.keyCode == 40 && self.option.plugin_type != 'textarea')
    ) {
      e.preventDefault();
      e.stopPropagation();
      e.cancelBubble = true;
      e.returnValue  = false;

      switch (e.keyCode) {
        case 37: // left
          if (e.shiftKey) self._firstPage(self);
          else            self._prevPage(self);
          break;

        case 38: // up
          self.prop.key_select = true;
          self._prevLine(self);
          break;

        case 39: // right
          if (e.shiftKey) self._lastPage(self);
          else            self._nextPage(self);
          break;

        case 40: // down
          if ($(self.elem.results).children('li').length) {
            self.prop.key_select = true;
            self._nextLine(self);
          } else {
            self.prop.is_suggest = false;
            self._suggest(self);
          }
          break;

        case 9: // tab
          self.prop.key_paging = true;
          self._hideResults(self);
          break;

        case 13: // return
          self._selectCurrentLine(self, true);
          break;

        case 27: //  escape
          self.prop.key_paging = true;
          self._hideResults(self);
          break;
      }
    } else {
      if (e.keyCode != 16) self._setCssFocusedInput(self); // except Shift(16)
      self._checkValue(self);
    }
  },

  /**
   * @private
   * @desc Ajax通信を中断する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _abortAjax: function(self) {
    if (self.prop.xhr) {
      self.prop.xhr.abort();
      self.prop.xhr = false;
    }
  },

  /**
   * @private
   * @desc データベースもしくは連想配列から検索する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _suggest: function(self) {
    // コンボボックスの種類によって検索文字列の形式を変える
    var q_word;
    if (self.option.plugin_type != 'textarea') {
      q_word = (self.prop.is_suggest) ? $.trim($(self.elem.combo_input).val()) : '';
      if (q_word.length < 1 && self.prop.is_suggest) {
        self._hideResults(self);
        return;
      }
      q_word = q_word.split(/[\s　]+/);
    } else {
      q_word = [self.prop.tag.str];
    }

    self._abortAjax(self);
    self._setLoading(self);
    $(self.elem.sub_info).children('dl').hide(); // サブ情報消去

    // ここで、本来は真偽値が格納される変数に数値を格納している。
    if (self.prop.is_paging) {
      var obj = self._getCurrentLine(self);
      self.prop.is_paging = (obj) ? $(self.elem.results).children('li').index(obj) : -1;
    } else if (!self.prop.is_suggest) {
      self.prop.is_paging = 0;
    }
    var which_page_num = (self.prop.is_suggest) ? self.prop.page_suggest : self.prop.page_all;

    // データ取得
    if (typeof self.option.source == 'object') self._searchForJson(self, q_word, which_page_num);
    else                                       self._searchForDb(self, q_word, which_page_num);
  },

  /**
   * @private
   * @desc ローディング画像を表示する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _setLoading: function(self) {
    $(self.elem.navi_info).text(self.message.loading);
    if ($(self.elem.results).html() === '') {
      $(self.elem.navi).children('p').empty();
      self._calcWidthResults(self);
      $(self.elem.container).addClass(self.css_class.container_open);
    }
  },

  /**
   * @private
   * @desc データベースに対して検索する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Array} q_word - 検索文字列を収めた配列
   * @param {number} which_page_num - ページ番号
   */
  _searchForDb: function(self, q_word, which_page_num) {
    self.prop.xhr = $.ajax({
      dataType: 'json',
      url: self.option.source,
      data: {
        q_word: q_word,
        page_num: which_page_num,
        per_page: self.option.per_page,
        search_field: self.option.search_field,
        and_or: self.option.and_or,
        order_by: self.option.order_by,
        db_table: self.option.db_table
      },
      success: function(json) {
        json.candidate   = [];
        json.primary_key = [];
        json.subinfo     = [];
        if (typeof json.result != 'object') {
          // 検索結果はゼロだった。
          self.prop.xhr = null;
          self._notFoundSearch(self);
          return;
        }
        json.cnt_page = json.result.length;
        for (i = 0; i < json.cnt_page; i++) {
          json.subinfo[i] = [];
          for (var key in json.result[i]) {
            if (key == self.option.primary_key) {
              json.primary_key.push(json.result[i][key]);
            }
            if (key == self.option.field) {
              json.candidate.push(json.result[i][key]);
            } else if ($.inArray(key, self.option.hide_field) == -1) {
              if (
                self.option.show_field !== '' &&
                $.inArray('*', self.option.show_field) == -1 &&
                $.inArray(key, self.option.show_field) == -1
              ) {
                continue;
              } else {
                json.subinfo[i][key] = json.result[i][key];
              }
            }
          }
        }
        delete(json.result);
        self._prepareResults(self, json, q_word, which_page_num);
      },
      error: function(jqXHR, textStatus, errorThrown) {
        // このAjax通信のみ、プラグインが故意に通信を中断する場合がある。
        // その場合は警告を表示させない。
        if (textStatus != 'abort') {
          self._hideResults(self);
          self._ajaxErrorNotify(self, errorThrown);
        }
      },
      complete: function() { self.prop.xhr = null; }
    });
  },

  /**
   * @private
   * @desc 連想配列に対して検索する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Array} q_word - 検索文字列を収めた配列
   * @param {number} which_page_num - ページ番号
   */
  _searchForJson: function(self, q_word, which_page_num) {
    var matched = [];
    var esc_q = [];
    var sorted = [];
    var json = {};
    var i = 0;
    var arr_reg = [];

    do { // 全件表示のため、do-while文を使う。
      // 正規表現のメタ文字をエスケープ
      esc_q[i] = q_word[i].replace(/\W/g,'\\$&').toString();
      arr_reg[i] = new RegExp(esc_q[i], 'gi');
      i++;
    } while (i < q_word.length);

    // SELECT * FROM source WHERE field LIKE q_word;
    for (i = 0; i < self.option.source.length; i++) {
      var flag = false;
      for (var j=0; j<arr_reg.length; j++) {
        if (self.option.source[i][self.option.field].match(arr_reg[j])) {
          flag = true;
          if (self.option.and_or == 'OR') break;
        } else {
          flag = false;
          if (self.option.and_or == 'AND') break;
        }
      }
      if (flag) matched.push(self.option.source[i]);
    }

    // 見つからなければすぐに終了
    if (matched.length === undefined) {
      self._notFoundSearch(self);
      return;
    }
    json.cnt_whole = matched.length;

    // (CASE WHEN ...)の後に続く order 指定
    var reg1 = new RegExp('^' + esc_q[0] + '$', 'gi');
    var reg2 = new RegExp('^' + esc_q[0], 'gi');
    var matched1 = [];
    var matched2 = [];
    var matched3 = [];
    for (i = 0; i < matched.length; i++) {
      if (matched[i][self.option.order_by[0][0]].match(reg1)) {
        matched1.push(matched[i]);
      } else if (matched[i][self.option.order_by[0][0]].match(reg2)) {
        matched2.push(matched[i]);
      } else {
        matched3.push(matched[i]);
      }
    }

    if (self.option.order_by[0][1].match(/^asc$/i)) {
      matched1 = self._sortAsc(self, matched1);
      matched2 = self._sortAsc(self, matched2);
      matched3 = self._sortAsc(self, matched3);
    } else {
      matched1 = self._sortDesc(self, matched1);
      matched2 = self._sortDesc(self, matched2);
      matched3 = self._sortDesc(self, matched3);
    }
    sorted = sorted.concat(matched1).concat(matched2).concat(matched3);

    // LIMIT xx OFFSET xx
    var start = (which_page_num - 1) * self.option.per_page;
    var end   = start + self.option.per_page;

    // 最終的に返るオブジェクトを作成
    for (i = start, sub = 0; i < end; i++, sub++) {
      if (sorted[i] === undefined) break;
      for (var key in sorted[i]) {
        // セレクト専用
        if (key == self.option.primary_key) {
          if (json.primary_key === undefined) json.primary_key = [];
          json.primary_key.push(sorted[i][key]);
        }
        if (key == self.option.field) {
          // 変換候補を取得
          if (json.candidate === undefined) json.candidate = [];
          json.candidate.push(sorted[i][key]);
        } else {
          // サブ情報
          if ($.inArray(key, self.option.hide_field) == -1) {
            if (
              self.option.show_field !== '' &&
              $.inArray('*', self.option.show_field) == -1 &&
              $.inArray(key, self.option.show_field) == -1
            ) {
              continue;
            }
            if (json.subinfo === undefined) json.subinfo = [];
            if (json.subinfo[sub] === undefined) json.subinfo[sub] = [];
            json.subinfo[sub][key] = sorted[i][key];
          }
        }
      }
    }
    // json.cnt_page = json.candidate.length;
    if (json.candidate === undefined) json.candidate = [];
    json.cnt_page = json.candidate.length;
    self._prepareResults(self, json, q_word, which_page_num);
  },

  /**
   * @private
   * @desc 独自のソート (昇順)
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Array} arr - 検索結果の配列
   */
  _sortAsc: function(self, arr) {
    arr.sort(function(a, b) {
      return a[self.option.order_by[0][0]].localeCompare(b[self.option.order_by[0][0]]);
    });
    return arr;
  },

  /**
   * @private
   * @desc 独自のソート (降順)
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Array} arr - 検索結果の配列
   */
  _sortDesc: function(self, arr) {
    arr.sort(function(a, b) {
      return b[self.option.order_by[0][0]].localeCompare(a[self.option.order_by[0][0]]);
    });
    return arr;
  },

  /**
   * @private
   * @desc 問い合わせ該当件数ゼロだった場合の処理
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _notFoundSearch: function(self) {
    $(self.elem.navi_info).text(self.message.not_found);
    $(self.elem.navi_p).hide();
    $(self.elem.results).empty();
    $(self.elem.sub_info).empty();
    self._calcWidthResults(self);
    $(self.elem.container).addClass(self.css_class.container_open);
    self._setCssFocusedInput(self);
  },

  /**
   * @private
   * @desc 検索結果の表示を準備する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Object} json - サーバからのレスポンス
   * @param {Array} q_word - 検索文字列を収めた配列
   * @param {number} which_page_num - ページ番号
   */
  _prepareResults: function(self, json, q_word, which_page_num) {
    // 1ページのみでもナビを表示する
    self._setNavi(self, json.cnt_whole, json.cnt_page, which_page_num);

    if (!json.subinfo || !self.option.sub_info) json.subinfo = false;
    if (!json.primary_key) json.primary_key = false;

    // セレクト専用時
    // 本来なら、候補リストから選ばなければならないが、
    // 候補の数が一つで、その候補の文字列と入力文字列が一致する場合、
    // 『リストから選ばれた』と判断する。
    if (
      self.option.select_only &&
      json.candidate.length === 1 &&
      json.candidate[0] == q_word[0]
    ) {
      if (self.option.plugin_type != 'textarea') $(self.elem.hidden).val(json.primary_key[0]);
      this._setButtonAttrDefault();
    }
    // 候補リストを表示する
    self._displayResults(self, json.candidate, json.subinfo, json.primary_key);
    if (self.prop.is_paging === false) {
      self._setCssFocusedInput(self);
    } else {
      // 全件表示とページ移動時、直前の行番号と同じ候補を選択状態にする
      var idx = self.prop.is_paging; // 真偽値を収めるべき変数に、例外的に数値が入っている。
      var limit = $(self.elem.results).children('li').length - 1;
      if (idx > limit) idx = limit;
      var obj = $(self.elem.results).children('li').eq(idx);
      $(obj).addClass(self.css_class.select);
      self._setSubInfo(self, obj);
      self.prop.is_paging = false; // 次回に備えて初期化する

      self._setCssFocusedResults(self);
    }
  },

  /**
   * @private
   * @desc ナビ部分を作成する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {number} cnt_whole - ヒットした件数
   * @param {number} cnt_page - このページで表示する候補の件数
   * @param {number} page_num - 現在ページの番号
   */
  _setNavi: function(self, cnt_whole, cnt_page, page_num) {
    var num_page_top = self.option.per_page * (page_num - 1) + 1;
    var num_page_end = num_page_top + cnt_page - 1;
    var cnt_result = self.message.page_info
      .replace('cnt_whole'    , cnt_whole)
      .replace('num_page_top' , num_page_top)
      .replace('num_page_end' , num_page_end);
    $(self.elem.navi_info).text(cnt_result);

    // ページング部分
    var last_page = Math.ceil(cnt_whole / self.option.per_page); // 全ページ数
    if (last_page > 1) {
      $(self.elem.navi_p).empty();
      // ページ数
      if (self.prop.is_suggest) {
        self.prop.max_suggest = last_page;
      } else {
        self.prop.max_all = last_page;
      }
      // 表示する一連のページ番号の左右端
      var left  = page_num - Math.ceil ((self.option.navi_num - 1) / 2);
      var right = page_num + Math.floor((self.option.navi_num - 1) / 2);
      // 現ページが端近くの場合のleft,rightの調整
      while (left < 1) {
        left ++;
        right++;
      }
      while (right > last_page) right--;
      while ((right-left < self.option.navi_num - 1) && left > 1) left--;

      // 『<< 前へ』の表示
      if (page_num == 1) {
        if (!self.option.navi_simple) {
          $('<span>')
            .text('<< 1')
            .addClass('page_end')
            .appendTo(self.elem.navi_p);
        }
        $('<span>')
          .text(self.message.prev)
          .addClass('page_end')
          .appendTo(self.elem.navi_p);
      } else {
        if (!self.option.navi_simple) {
          $('<a>')
            .attr({
              'href': '#',
              'class': 'navi_first'
            })
            .text('<< 1')
            .attr('title', self.message.first_title)
            .appendTo(self.elem.navi_p);
        }
        $('<a>')
          .attr({
            'href': '#',
            'class': 'navi_prev',
            'title': self.message.prev_title
          })
          .text(self.message.prev)
          .appendTo(self.elem.navi_p);
      }
      // 各ページへのリンクの表示
      for (var i = left; i <= right; i++) {
        // 現在のページ番号は<span>で囲む(強調表示用)
        var num_link = (i == page_num) ? '<span class="current">' + i + '</span>' : i;
        $('<a>')
          .attr({
            'href': '#',
            'class': 'navi_page'
          })
          .html(num_link)
          .appendTo(self.elem.navi_p);
      }
      // 『次のX件 >>』の表示
      if (page_num == last_page) {
        $('<span>')
          .text(self.message.next)
          .addClass('page_end')
          .appendTo(self.elem.navi_p);
        if (!self.option.navi_simple) {
          $('<span>')
            .text(last_page + ' >>')
            .addClass('page_end')
            .appendTo(self.elem.navi_p);
        }
      } else {
        $('<a>')
          .attr({
            'href': '#',
            'class': 'navi_next'
          })
          .text(self.message.next)
          .attr('title', self.message.next_title)
          .appendTo(self.elem.navi_p);
        if (!self.option.navi_simple) {
          $('<a>')
            .attr({
              'href': '#',
              'class': 'navi_last'
            })
            .text(last_page + ' >>')
            .attr('title', self.message.last_title)
            .appendTo(self.elem.navi_p);
        }
      }
      $(self.elem.navi_p).show();
      self._ehNaviPaging(self); // イベントハンドラ設定
    } else {
      $(self.elem.navi_p).hide();
    }
  },

  /**
   * @private
   * @desc サブ情報を表示する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Object} obj - サブ情報を右隣に表示させる<li>要素
   */
  _setSubInfo: function(self, obj) {
    // サブ情報を表示しない設定なら、ここで終了
    if (!self.option.sub_info) return; 

    // サブ情報の座標設定用の基本情報
    self.prop.size_results = ($(self.elem.results).outerHeight() - $(self.elem.results).height()) / 2;
    self.prop.size_navi    = $(self.elem.navi).outerHeight();
    self.prop.size_li      = $(self.elem.results).children('li:first').outerHeight();
    self.prop.size_left    = $(self.elem.results).outerWidth();

    // 現在の<li>の番号は？
    var idx = $(self.elem.results).children('li').index(obj);

    // 一旦、サブ情報全非表示 (<dl>単位で非表示にする)
    $(self.elem.sub_info).children('dl').hide();

    // 位置調整
    var t_top = 0;
    if ($(self.elem.navi).css('display') != 'none') t_top += self.prop.size_navi;
    t_top += (self.prop.size_results + self.prop.size_li * idx);
    var t_left = self.prop.size_left;
    t_top  += 'px';
    t_left += 'px';

    $(self.elem.sub_info).children('dl').eq(idx).css({
      position: 'absolute',
      top: t_top,
      left: t_left,
      display: 'block'
    });
  },

  /**
   * @private
   * @desc 候補一覧の<ul>成形、表示
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {Array} arr_candidate - DBから検索・取得した値の配列
   * @param {Array} arr_subinfo - サブ情報の配列
   * @param {Array} arr_primary_key - 主キーの配列
   */
  _displayResults: function(self, arr_candidate, arr_subinfo, arr_primary_key) {
    // 候補リストを、一旦リセット
    $(self.elem.results).empty();
    $(self.elem.sub_info).empty();
    for (var i = 0; i < arr_candidate.length; i++) {

      // 候補リスト
      var list = $('<li>')
        .text(arr_candidate[i]) // XSS対策
        .attr({
          pkey: arr_primary_key[i],
          title: arr_candidate[i]
        });

      if (
        self.option.plugin_type != 'textarea' &&
        arr_primary_key[i] == $(self.elem.hidden).val()
      ) {
        $(list).addClass(self.css_class.selected);
      }
      $(self.elem.results).append(list);

      // サブ情報のdlを生成
      if (arr_subinfo) {
        // sub_info属性にJSON文字列そのままを格納
        var str_subinfo = [];
        var $dl = $('<dl>');
        // テーブルの各行を生成
        var dt, dd;
        for (var key in arr_subinfo[i]) {
          // sub_info属性の値を整える
          var json_key = key.replace('\'', '\\\'');

          if (arr_subinfo[i][key] === null) {
            // DBのデータ値がnullの場合の対処
            arr_subinfo[i][key] = '';
          } else {
            // DBのデータ値が数値の場合の対処
            arr_subinfo[i][key] += '';
          }
          var json_val = arr_subinfo[i][key].replace('\'', '\\\'');

          str_subinfo.push("'" + json_key + "':" + "'" + json_val + "'");

          // thの別名を検索する
          if (self.option.sub_as[key] !== null) dt = self.option.sub_as[key];
          else dt = key;

          dt = $('<dt>').text(dt); // XSS対策
          if (self.option.sub_info == 'simple') $(dt).addClass('hide');
          $dl.append(dt);

          dd = $('<dd>').text(arr_subinfo[i][key]); // !!! against XSS !!!
          $dl.append(dd);
        }
        // sub_info属性を候補リストのliに追加
        str_subinfo = '{' + str_subinfo.join(',') + '}';
        $(list).attr('sub_info', str_subinfo);
        
        $(self.elem.sub_info).append($dl);
        if (self.option.sub_info == 'simple' && $dl.children('dd').text() === '') {
          $dl.addClass('ac_dl_empty');
        }
      }
    }
    // サジェスト結果表示
    // 表示のたびに、結果リストの位置を調整しなおしている。
    // このプラグイン以外でページ内の要素の位置をずらす処理がある場合に対処するため。
    self._calcWidthResults(self);

    $(self.elem.container).addClass(self.css_class.container_open);
    self._ehResults(); // イベントハンドラ設定

    // ボタンのtitle属性変更(閉じる)
    if (self.option.plugin_type == 'combobox') $(self.elem.button).attr('title', self.message.close_btn);
  },

  /**
   * @private
   * @desc 候補一覧の幅を算出する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _calcWidthResults: function(self) {
    // 候補の幅とトップ位置を再計算 (textareaがリサイズされることに対処するため)
    // ComboBoxの幅
    var w;
    if (self.option.plugin_type == 'combobox') {
      w = $(self.elem.combo_input).outerWidth() + $(self.elem.button).outerWidth();
    } else {
      w = $(self.elem.combo_input).outerWidth();
    }
    $(self.elem.container).width(w);
    
    // containerのpositionの値に合わせてtop,leftを設定する。
    if ($(self.elem.container).css('position') == 'static') {
      // position: static
      var offset = $(self.elem.combo_input).offset();
      $(self.elem.result_area).css({
        top: offset.top + $(self.elem.combo_input).outerHeight() + 'px',
        left: offset.left + 'px'
      });
    } else {
      // position: relative, absolute, fixed
      $(self.elem.result_area).css({
        top: $(self.elem.combo_input).outerHeight() + 'px',
        left: '0px'
      });
    }
    // 幅を設定した後、表示する。
    $(self.elem.result_area)
      .width(
        $(self.elem.container).width() -
        ($(self.elem.result_area).outerWidth() - $(self.elem.result_area).innerWidth())
      )
      .show();
  },

  /**
   * @private
   * @desc 候補一覧を消去する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _hideResults: function(self) {
    if (self.prop.key_paging) {
      self._scrollWindow(self, true);
      self.prop.key_paging = false;
    }
    self._setCssFocusedInput(self);

    $(self.elem.results).empty();
    $(self.elem.sub_info).empty();
    $(self.elem.result_area).hide();
    $(self.elem.container).removeClass(self.css_class.container_open);

    self._abortAjax(self);
    self._setButtonAttrDefault(); // ボタンのtitle属性初期化
  },

  /**
   * @private
   * @desc 1ページ目を表示する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _firstPage: function(self) {
    if (!self.prop.is_suggest) {
      if (self.prop.page_all > 1) {
        self.prop.page_all = 1;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    } else {
      if (self.prop.page_suggest > 1) {
        self.prop.page_suggest = 1;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    }
  },

  /**
   * @private
   * @desc 前のページを表示する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _prevPage: function(self) {
    if (!self.prop.is_suggest) {
      if (self.prop.page_all > 1) {
        self.prop.page_all--;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    } else {
      if (self.prop.page_suggest > 1) {
        self.prop.page_suggest--;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    }
  },

  /**
   * @private
   * @desc 次のページを表示する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _nextPage: function(self) {
    if (self.prop.is_suggest) {
      if (self.prop.page_suggest < self.prop.max_suggest) {
        self.prop.page_suggest++;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    } else {
      if (self.prop.page_all < self.prop.max_all) {
        self.prop.page_all++;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    }
  },

  /**
   * @private
   * @desc 最後のページを表示する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _lastPage: function(self) {
    if (!self.prop.is_suggest) {
      if (self.prop.page_all < self.prop.max_all) {
        self.prop.page_all = self.prop.max_all;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    } else {
      if (self.prop.page_suggest < self.prop.max_suggest) {
        self.prop.page_suggest = self.prop.max_suggest;
        self.prop.is_paging = true;
        self._suggest(self);
      }
    }
  },

  /**
   * @private
   * @desc 現在選択中の候補に決定する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   * @param {boolean} is_enter_key - Enterキーで決定されたかどうか
   */
  _selectCurrentLine: function(self, is_enter_key) {
    // 選択候補を追いかけてスクロール
    self._scrollWindow(self, true);

    var current = self._getCurrentLine(self);
    if (current) {
      if (self.option.plugin_type != 'textarea') {
        $(self.elem.combo_input).val($(current).text());

        // サブ情報があるならsub_info属性を追加・書き換え
        if (self.option.sub_info) {
          $(self.elem.combo_input).attr('sub_info', $(current).attr('sub_info'));
        }
        if (self.option.select_only) self._setButtonAttrDefault();
        $(self.elem.hidden).val($(current).attr('pkey'));
      } else {
        var left = self.prop.prev_value.substring(0, self.prop.tag.pos_left);
        var right = self.prop.prev_value.substring(self.prop.tag.pos_right);
        var ctext, p_len, l_len, pos;

        // 閉じカッコがあるタグの場合、rightの冒頭がその形式でない場合は追加する。
        // 前後にスペースを挿入するかどうかもここで判断する。
        // 行頭の場合はスペースは挿入しない。
        ctext = $(current).text();
        // 左側空白の補完
        if (
          self.option.tags[self.prop.tag.type].space[0] &&
          !left.match(self.option.tags[self.prop.tag.type].pattern.space_left)
        ) {
          p_len = self.option.tags[self.prop.tag.type].pattern.left.length;
          l_len = left.length;
          left = left.substring(0, (l_len - p_len)) +
            ' ' +
            left.substring((l_len - p_len));
        }
        // 右側カッコの補完
        if (!right.match(self.option.tags[self.prop.tag.type].pattern.comp_right)) {
          right = self.option.tags[self.prop.tag.type].pattern.right + right;
        }
        // 右側空白の補完
        if (
          self.option.tags[self.prop.tag.type].space[1] &&
          !right.match(self.option.tags[self.prop.tag.type].pattern.space_right)
        ) {
          p_len = self.option.tags[self.prop.tag.type].pattern.right.length;
          right = right.substring(0, p_len) +
            ' ' +
            right.substring(p_len);
        }
        $(self.elem.combo_input).val(left + '' + ctext + '' + right);
        pos = left.length + ctext.length;
        self._setCaretPosition(self, pos);
      }
      self.prop.prev_value = $(self.elem.combo_input).val();
      self._hideResults(self);
    }
    if (self.option.bind_to) {
      // 候補選択を引き金に、イベントを発火する
      $(self.elem.combo_input).trigger(self.option.bind_to, is_enter_key);
    }
    $(self.elem.combo_input).focus();  // テキストボックスにフォーカスを移す
    $(self.elem.combo_input).change(); // テキストボックスの値が変わったことを通知
    self._setCssFocusedInput(self);
  },

  /**
   * @private
   * @desc 現在選択中の候補の情報を取得する
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _getCurrentLine: function(self) {
    if ($(self.elem.result_area).is(':hidden')) return false;
    var obj = $(self.elem.results).children('li.' + self.css_class.select);
    if ($(obj).length) return obj;
    else               return false;
  },

  /**
   * @private
   * @desc 選択候補を次に移す
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _nextLine: function(self) {
    var obj = self._getCurrentLine(self);
    var idx;
    if (!obj) {
      idx = -1;
    } else {
      idx = $(self.elem.results).children('li').index(obj);
      $(obj).removeClass(self.css_class.select);
    }
    idx++;
    if (idx < $(self.elem.results).children('li').length) {
      var next = $(self.elem.results).children('li').eq(idx);
      self._setSubInfo(self, next);
      $(next).addClass(self.css_class.select);
      self._setCssFocusedResults(self);
    } else {
      self._setCssFocusedInput(self);
    }
    // 選択候補を追いかけてスクロール
    self._scrollWindow(self, false);
  },

  /**
   * @private
   * @desc 選択候補を前に移す
   * @param {Object} self - このクラスのインスタンスオブジェクトへの参照
   */
  _prevLine: function(self) {
    var obj = self._getCurrentLine(self);
    var idx;
    if (!obj) {
      idx = $(self.elem.results).children('li').length;
    } else {
      idx = $(self.elem.results).children('li').index(obj);
      $(obj).removeClass(self.css_class.select);
    }
    idx--;
    if (idx > -1) {
      var prev = $(self.elem.results).children('li').eq(idx);
      self._setSubInfo(self, prev);
      $(prev).addClass(self.css_class.select);
      self._setCssFocusedResults(self);
    } else {
      self._setCssFocusedInput(self);
    }
    // 選択候補を追いかけてスクロール
    self._scrollWindow(self, false);
  }
}); // END OF "$.extend(AjaxComboBox.prototype,"

})( /** namespace */ jQuery);;
(function(a){var r=a.fn.domManip,d="_tmplitem",q=/^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,b={},f={},e,p={key:0,data:{}},h=0,c=0,l=[];function g(e,d,g,i){var c={data:i||(d?d.data:{}),_wrap:d?d._wrap:null,tmpl:null,parent:d||null,nodes:[],calls:u,nest:w,wrap:x,html:v,update:t};e&&a.extend(c,e,{nodes:[],parent:d});if(g){c.tmpl=g;c._ctnt=c._ctnt||c.tmpl(a,c);c.key=++h;(l.length?f:b)[h]=c}return c}a.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(f,d){a.fn[f]=function(n){var g=[],i=a(n),k,h,m,l,j=this.length===1&&this[0].parentNode;e=b||{};if(j&&j.nodeType===11&&j.childNodes.length===1&&i.length===1){i[d](this[0]);g=this}else{for(h=0,m=i.length;h<m;h++){c=h;k=(h>0?this.clone(true):this).get();a.fn[d].apply(a(i[h]),k);g=g.concat(k)}c=0;g=this.pushStack(g,f,i.selector)}l=e;e=null;a.tmpl.complete(l);return g}});a.fn.extend({tmpl:function(d,c,b){return a.tmpl(this[0],d,c,b)},tmplItem:function(){return a.tmplItem(this[0])},template:function(b){return a.template(b,this[0])},domManip:function(d,l,j){if(d[0]&&d[0].nodeType){var f=a.makeArray(arguments),g=d.length,i=0,h;while(i<g&&!(h=a.data(d[i++],"tmplItem")));if(g>1)f[0]=[a.makeArray(d)];if(h&&c)f[2]=function(b){a.tmpl.afterManip(this,b,j)};r.apply(this,f)}else r.apply(this,arguments);c=0;!e&&a.tmpl.complete(b);return this}});a.extend({tmpl:function(d,h,e,c){var j,k=!c;if(k){c=p;d=a.template[d]||a.template(null,d);f={}}else if(!d){d=c.tmpl;b[c.key]=c;c.nodes=[];c.wrapped&&n(c,c.wrapped);return a(i(c,null,c.tmpl(a,c)))}if(!d)return[];if(typeof h==="function")h=h.call(c||{});e&&e.wrapped&&n(e,e.wrapped);j=a.isArray(h)?a.map(h,function(a){return a?g(e,c,d,a):null}):[g(e,c,d,h)];return k?a(i(c,null,j)):j},tmplItem:function(b){var c;if(b instanceof a)b=b[0];while(b&&b.nodeType===1&&!(c=a.data(b,"tmplItem"))&&(b=b.parentNode));return c||p},template:function(c,b){if(b){if(typeof b==="string")b=o(b);else if(b instanceof a)b=b[0]||{};if(b.nodeType)b=a.data(b,"tmpl")||a.data(b,"tmpl",o(b.innerHTML));return typeof c==="string"?(a.template[c]=b):b}return c?typeof c!=="string"?a.template(null,c):a.template[c]||a.template(null,q.test(c)?c:a(c)):null},encode:function(a){return(""+a).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;")}});a.extend(a.tmpl,{tag:{tmpl:{_default:{$2:"null"},open:"if($notnull_1){_=_.concat($item.nest($1,$2));}"},wrap:{_default:{$2:"null"},open:"$item.calls(_,$1,$2);_=[];",close:"call=$item.calls();_=call._.concat($item.wrap(call,_));"},each:{_default:{$2:"$index, $value"},open:"if($notnull_1){$.each($1a,function($2){with(this){",close:"}});}"},"if":{open:"if(($notnull_1) && $1a){",close:"}"},"else":{_default:{$1:"true"},open:"}else if(($notnull_1) && $1a){"},html:{open:"if($notnull_1){_.push($1a);}"},"=":{_default:{$1:"$data"},open:"if($notnull_1){_.push($.encode($1a));}"},"!":{open:""}},complete:function(){b={}},afterManip:function(f,b,d){var e=b.nodeType===11?a.makeArray(b.childNodes):b.nodeType===1?[b]:[];d.call(f,b);m(e);c++}});function i(e,g,f){var b,c=f?a.map(f,function(a){return typeof a==="string"?e.key?a.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g,"$1 "+d+'="'+e.key+'" $2'):a:i(a,e,a._ctnt)}):e;if(g)return c;c=c.join("");c.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/,function(f,c,e,d){b=a(e).get();m(b);if(c)b=j(c).concat(b);if(d)b=b.concat(j(d))});return b?b:j(c)}function j(c){var b=document.createElement("div");b.innerHTML=c;return a.makeArray(b.childNodes)}function o(b){return new Function("jQuery","$item","var $=jQuery,call,_=[],$data=$item.data;with($data){_.push('"+a.trim(b).replace(/([\\'])/g,"\\$1").replace(/[\r\t\n]/g," ").replace(/\$\{([^\}]*)\}/g,"{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g,function(m,l,j,d,b,c,e){var i=a.tmpl.tag[j],h,f,g;if(!i)throw"Template command not found: "+j;h=i._default||[];if(c&&!/\w$/.test(b)){b+=c;c=""}if(b){b=k(b);e=e?","+k(e)+")":c?")":"";f=c?b.indexOf(".")>-1?b+c:"("+b+").call($item"+e:b;g=c?f:"(typeof("+b+")==='function'?("+b+").call($item):("+b+"))"}else g=f=h.$1||"null";d=k(d);return"');"+i[l?"close":"open"].split("$notnull_1").join(b?"typeof("+b+")!=='undefined' && ("+b+")!=null":"true").split("$1a").join(g).split("$1").join(f).split("$2").join(d?d.replace(/\s*([^\(]+)\s*(\((.*?)\))?/g,function(d,c,b,a){a=a?","+a+")":b?")":"";return a?"("+c+").call($item"+a:d}):h.$2||"")+"_.push('"})+"');}return _;")}function n(c,b){c._wrap=i(c,true,a.isArray(b)?b:[q.test(b)?b:a(b).html()]).join("")}function k(a){return a?a.replace(/\\'/g,"'").replace(/\\\\/g,"\\"):null}function s(b){var a=document.createElement("div");a.appendChild(b.cloneNode(true));return a.innerHTML}function m(o){var n="_"+c,k,j,l={},e,p,i;for(e=0,p=o.length;e<p;e++){if((k=o[e]).nodeType!==1)continue;j=k.getElementsByTagName("*");for(i=j.length-1;i>=0;i--)m(j[i]);m(k)}function m(j){var p,i=j,k,e,m;if(m=j.getAttribute(d)){while(i.parentNode&&(i=i.parentNode).nodeType===1&&!(p=i.getAttribute(d)));if(p!==m){i=i.parentNode?i.nodeType===11?0:i.getAttribute(d)||0:0;if(!(e=b[m])){e=f[m];e=g(e,b[i]||f[i],null,true);e.key=++h;b[h]=e}c&&o(m)}j.removeAttribute(d)}else if(c&&(e=a.data(j,"tmplItem"))){o(e.key);b[e.key]=e;i=a.data(j.parentNode,"tmplItem");i=i?i.key:0}if(e){k=e;while(k&&k.key!=i){k.nodes.push(j);k=k.parent}delete e._ctnt;delete e._wrap;a.data(j,"tmplItem",e)}function o(a){a=a+n;e=l[a]=l[a]||g(e,b[e.parent.key+n]||e.parent,null,true)}}}function u(a,d,c,b){if(!a)return l.pop();l.push({_:a,tmpl:d,item:this,data:c,options:b})}function w(d,c,b){return a.tmpl(a.template(d),c,b,this)}function x(b,d){var c=b.options||{};c.wrapped=d;return a.tmpl(a.template(b.tmpl),b.data,c,b.item)}function v(d,c){var b=this._wrap;return a.map(a(a.isArray(b)?b.join(""):b).filter(d||"*"),function(a){return c?a.innerText||a.textContent:a.outerHTML||s(a)})}function t(){var b=this.nodes;a.tmpl(null,null,null,this).insertBefore(b[0]);a(b).remove()}})(jQuery);
/**
 * https://github.com/imulus/retinajs/blob/master/src/retina.js
 */
(function($) {
    $.fn.retina = function(options) {
        if ($.Retina.isRetina()) {
            $.Retina.opts = $.extend($.Retina.opts, options);
            return this.each(function() {
                if ($(this).is('img')) {
                    new RetinaImage(this);
                }
            });
        }
    }

    function Retina() {}
    $.Retina = Retina;
    $.Retina.opts = {
        // Ensure Content-Type is an image before trying to load @2x image
        // https://github.com/imulus/retinajs/pull/45)
        check_mime_type: true,
        // Resize high-resolution images to original image's pixel dimensions
        // https://github.com/imulus/retinajs/issues/8
        force_original_dimensions: true
    }

    $.Retina.isRetina = function() {
        var mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5),' +
                      '(min--moz-device-pixel-ratio: 1.5),' +
                      '(-o-min-device-pixel-ratio: 3/2),' +
                      '(min-resolution: 1.5dppx)';

        if (window.devicePixelRatio > 1)
            return true;

        if (window.matchMedia && window.matchMedia(mediaQuery).matches)
            return true;

        return false;
    }

    function RetinaImagePath(path, at_2x_path) {
        this.path = path;
        if (typeof at_2x_path !== "undefined" && at_2x_path !== null) {
            this.at_2x_path = at_2x_path;
            this.perform_check = false;
        } else {
            this.at_2x_path = path.replace(/\.\w+$/, function(match) { return "@2x" + match; });
            this.perform_check = true;
        }
    }

    RetinaImagePath.confirmed_paths = [];

    RetinaImagePath.prototype.is_external = function() {
        return !!(this.path.match(/^(https?\:|\/\/)/i) && !this.path.match('//' + document.domain + '/') );
    }

    RetinaImagePath.prototype.check_2x_variant = function(callback) {
        var http, that = this;
        if (this.is_external()) {
            return callback(true);
        } else if (!this.perform_check && typeof this.at_2x_path !== "undefined" && this.at_2x_path !== null) {
            return callback(true);
        } else if (this.at_2x_path in RetinaImagePath.confirmed_paths) {
            return callback(true);
        } else {
            http = new XMLHttpRequest();
            http.open('HEAD', this.at_2x_path);
            http.onreadystatechange = function() {
                if (http.readyState != 4) {
                    return callback(false);
                }

                if (http.status >= 200 && http.status <= 399) {
                    if ($.Retina.opts.check_mime_type) {
                        var type = http.getResponseHeader('Content-Type');
                        if (type === null || !type.match(/^image/i)) {
                            return callback(false);
                        }
                    }

                    RetinaImagePath.confirmed_paths.push(that.at_2x_path);
                    return callback(true);
                } else {
                    return callback(false);
                }
            };
            http.send();
        }
    }

    function RetinaImage(el) {
        if (!/@2x\.\w+$/.test($(el).attr('src'))) {
            this.el = el;
            this.path = new RetinaImagePath($(el).attr('src'), $(el).attr('data-at2x'));
            var that = this;
            this.path.check_2x_variant(function(hasVariant) {
                if (hasVariant) that.swap();
            });
        }
    }

    $.RetinaImage = RetinaImage;

    RetinaImage.prototype.swap = function(path) {
        if (typeof path == 'undefined') path = this.path.at_2x_path;

        var that = this;
        function load() {
            if (! that.el.complete) {
                setTimeout(load, 5);
            } else {
                if ($.Retina.opts.force_original_dimensions) {
                    if (that.el.offsetWidth == 0 && that.el.offsetHeight == 0) {
                        that.el.setAttribute('width', that.el.naturalWidth);
                        that.el.setAttribute('height', that.el.naturalHeight);
                    } else {
                        that.el.setAttribute('width', that.el.offsetWidth);
                        that.el.setAttribute('height', that.el.offsetHeight);
                    }
                }

                var old_src = that.el.src;
                that.el.setAttribute('src', path);
                $(that.el).one('error', function() {
                    that.el.setAttribute('src', old_src);
                });
            }
        }
        load();
    }
})(jQuery);;
/* jqPlot 1.0.7r1224 | (c) 2009-2013 Chris Leonello | jplot.com
   jsDate | (c) 2010-2013 Chris Leonello
 */(function(d){d.jqplot.eventListenerHooks.push(["jqplotMouseMove",f]);d.jqplot.Highlighter=function(h){this.show=d.jqplot.config.enablePlugins;this.markerRenderer=new d.jqplot.MarkerRenderer({shadow:false});this.showMarker=true;this.lineWidthAdjust=2.5;this.sizeAdjust=5;this.showTooltip=true;this.tooltipLocation="nw";this.fadeTooltip=true;this.tooltipFadeSpeed="fast";this.tooltipOffset=2;this.tooltipAxes="both";this.tooltipSeparator=", ";this.tooltipContentEditor=null;this.useAxesFormatters=true;this.tooltipFormatString="%.5P";this.formatString=null;this.yvalues=1;this.bringSeriesToFront=false;this._tooltipElem;this.isHighlighting=false;this.currentNeighbor=null;d.extend(true,this,h)};var b=["nw","n","ne","e","se","s","sw","w"];var e={nw:0,n:1,ne:2,e:3,se:4,s:5,sw:6,w:7};var c=["se","s","sw","w","nw","n","ne","e"];d.jqplot.Highlighter.init=function(k,j,i){var h=i||{};this.plugins.highlighter=new d.jqplot.Highlighter(h.highlighter)};d.jqplot.Highlighter.parseOptions=function(i,h){this.showHighlight=true};d.jqplot.Highlighter.postPlotDraw=function(){if(this.plugins.highlighter&&this.plugins.highlighter.highlightCanvas){this.plugins.highlighter.highlightCanvas.resetCanvas();this.plugins.highlighter.highlightCanvas=null}if(this.plugins.highlighter&&this.plugins.highlighter._tooltipElem){this.plugins.highlighter._tooltipElem.emptyForce();this.plugins.highlighter._tooltipElem=null}this.plugins.highlighter.highlightCanvas=new d.jqplot.GenericCanvas();this.eventCanvas._elem.before(this.plugins.highlighter.highlightCanvas.createElement(this._gridPadding,"jqplot-highlight-canvas",this._plotDimensions,this));this.plugins.highlighter.highlightCanvas.setContext();var h=document.createElement("div");this.plugins.highlighter._tooltipElem=d(h);h=null;this.plugins.highlighter._tooltipElem.addClass("jqplot-highlighter-tooltip");this.plugins.highlighter._tooltipElem.css({position:"absolute",display:"none"});this.eventCanvas._elem.before(this.plugins.highlighter._tooltipElem)};d.jqplot.preInitHooks.push(d.jqplot.Highlighter.init);d.jqplot.preParseSeriesOptionsHooks.push(d.jqplot.Highlighter.parseOptions);d.jqplot.postDrawHooks.push(d.jqplot.Highlighter.postPlotDraw);function a(m,o){var j=m.plugins.highlighter;var p=m.series[o.seriesIndex];var h=p.markerRenderer;var i=j.markerRenderer;i.style=h.style;i.lineWidth=h.lineWidth+j.lineWidthAdjust;i.size=h.size+j.sizeAdjust;var l=d.jqplot.getColorComponents(h.color);var n=[l[0],l[1],l[2]];var k=(l[3]>=0.6)?l[3]*0.6:l[3]*(2-l[3]);i.color="rgba("+n[0]+","+n[1]+","+n[2]+","+k+")";i.init();i.draw(p.gridData[o.pointIndex][0],p.gridData[o.pointIndex][1],j.highlightCanvas._ctx)}function g(A,q,m){var k=A.plugins.highlighter;var D=k._tooltipElem;var r=q.highlighter||{};var t=d.extend(true,{},k,r);if(t.useAxesFormatters){var w=q._xaxis._ticks[0].formatter;var h=q._yaxis._ticks[0].formatter;var E=q._xaxis._ticks[0].formatString;var s=q._yaxis._ticks[0].formatString;var z;var u=w(E,m.data[0]);var l=[];for(var B=1;B<t.yvalues+1;B++){l.push(h(s,m.data[B]))}if(typeof t.formatString==="string"){switch(t.tooltipAxes){case"both":case"xy":l.unshift(u);l.unshift(t.formatString);z=d.jqplot.sprintf.apply(d.jqplot.sprintf,l);break;case"yx":l.push(u);l.unshift(t.formatString);z=d.jqplot.sprintf.apply(d.jqplot.sprintf,l);break;case"x":z=d.jqplot.sprintf.apply(d.jqplot.sprintf,[t.formatString,u]);break;case"y":l.unshift(t.formatString);z=d.jqplot.sprintf.apply(d.jqplot.sprintf,l);break;default:l.unshift(u);l.unshift(t.formatString);z=d.jqplot.sprintf.apply(d.jqplot.sprintf,l);break}}else{switch(t.tooltipAxes){case"both":case"xy":z=u;for(var B=0;B<l.length;B++){z+=t.tooltipSeparator+l[B]}break;case"yx":z="";for(var B=0;B<l.length;B++){z+=l[B]+t.tooltipSeparator}z+=u;break;case"x":z=u;break;case"y":z=l.join(t.tooltipSeparator);break;default:z=u;for(var B=0;B<l.length;B++){z+=t.tooltipSeparator+l[B]}break}}}else{var z;if(typeof t.formatString==="string"){z=d.jqplot.sprintf.apply(d.jqplot.sprintf,[t.formatString].concat(m.data))}else{if(t.tooltipAxes=="both"||t.tooltipAxes=="xy"){z=d.jqplot.sprintf(t.tooltipFormatString,m.data[0])+t.tooltipSeparator+d.jqplot.sprintf(t.tooltipFormatString,m.data[1])}else{if(t.tooltipAxes=="yx"){z=d.jqplot.sprintf(t.tooltipFormatString,m.data[1])+t.tooltipSeparator+d.jqplot.sprintf(t.tooltipFormatString,m.data[0])}else{if(t.tooltipAxes=="x"){z=d.jqplot.sprintf(t.tooltipFormatString,m.data[0])}else{if(t.tooltipAxes=="y"){z=d.jqplot.sprintf(t.tooltipFormatString,m.data[1])}}}}}}if(d.isFunction(t.tooltipContentEditor)){z=t.tooltipContentEditor(z,m.seriesIndex,m.pointIndex,A)}D.html(z);var C={x:m.gridData[0],y:m.gridData[1]};var v=0;var j=0.707;if(q.markerRenderer.show==true){v=(q.markerRenderer.size+t.sizeAdjust)/2}var o=b;if(q.fillToZero&&q.fill&&m.data[1]<0){o=c}switch(o[e[t.tooltipLocation]]){case"nw":var p=C.x+A._gridPadding.left-D.outerWidth(true)-t.tooltipOffset-j*v;var n=C.y+A._gridPadding.top-t.tooltipOffset-D.outerHeight(true)-j*v;break;case"n":var p=C.x+A._gridPadding.left-D.outerWidth(true)/2;var n=C.y+A._gridPadding.top-t.tooltipOffset-D.outerHeight(true)-v;break;case"ne":var p=C.x+A._gridPadding.left+t.tooltipOffset+j*v;var n=C.y+A._gridPadding.top-t.tooltipOffset-D.outerHeight(true)-j*v;break;case"e":var p=C.x+A._gridPadding.left+t.tooltipOffset+v;var n=C.y+A._gridPadding.top-D.outerHeight(true)/2;break;case"se":var p=C.x+A._gridPadding.left+t.tooltipOffset+j*v;var n=C.y+A._gridPadding.top+t.tooltipOffset+j*v;break;case"s":var p=C.x+A._gridPadding.left-D.outerWidth(true)/2;var n=C.y+A._gridPadding.top+t.tooltipOffset+v;break;case"sw":var p=C.x+A._gridPadding.left-D.outerWidth(true)-t.tooltipOffset-j*v;var n=C.y+A._gridPadding.top+t.tooltipOffset+j*v;break;case"w":var p=C.x+A._gridPadding.left-D.outerWidth(true)-t.tooltipOffset-v;var n=C.y+A._gridPadding.top-D.outerHeight(true)/2;break;default:var p=C.x+A._gridPadding.left-D.outerWidth(true)-t.tooltipOffset-j*v;var n=C.y+A._gridPadding.top-t.tooltipOffset-D.outerHeight(true)-j*v;break}D.css("left",p);D.css("top",n);if(t.fadeTooltip){D.stop(true,true).fadeIn(t.tooltipFadeSpeed)}else{D.show()}D=null}function f(n,j,i,p,l){var h=l.plugins.highlighter;var m=l.plugins.cursor;if(h.show){if(p==null&&h.isHighlighting){var o=jQuery.Event("jqplotHighlighterUnhighlight");l.target.trigger(o);var q=h.highlightCanvas._ctx;q.clearRect(0,0,q.canvas.width,q.canvas.height);if(h.fadeTooltip){h._tooltipElem.fadeOut(h.tooltipFadeSpeed)}else{h._tooltipElem.hide()}if(h.bringSeriesToFront){l.restorePreviousSeriesOrder()}h.isHighlighting=false;h.currentNeighbor=null;q=null}else{if(p!=null&&l.series[p.seriesIndex].showHighlight&&!h.isHighlighting){var o=jQuery.Event("jqplotHighlighterHighlight");o.which=n.which;o.pageX=n.pageX;o.pageY=n.pageY;var k=[p.seriesIndex,p.pointIndex,p.data,l];l.target.trigger(o,k);h.isHighlighting=true;h.currentNeighbor=p;if(h.showMarker){a(l,p)}if(h.showTooltip&&(!m||!m._zoom.started)){g(l,l.series[p.seriesIndex],p)}if(h.bringSeriesToFront){l.moveSeriesToFront(p.seriesIndex)}}else{if(p!=null&&h.isHighlighting&&h.currentNeighbor!=p){if(l.series[p.seriesIndex].showHighlight){var q=h.highlightCanvas._ctx;q.clearRect(0,0,q.canvas.width,q.canvas.height);h.isHighlighting=true;h.currentNeighbor=p;if(h.showMarker){a(l,p)}if(h.showTooltip&&(!m||!m._zoom.started)){g(l,l.series[p.seriesIndex],p)}if(h.bringSeriesToFront){l.moveSeriesToFront(p.seriesIndex)}}}}}}}})(jQuery);;
/* jqPlot 1.0.7r1224 | (c) 2009-2013 Chris Leonello | jplot.com
   jsDate | (c) 2010-2013 Chris Leonello
 */(function(j){j.jqplot.Cursor=function(q){this.style="crosshair";this.previousCursor="auto";this.show=j.jqplot.config.enablePlugins;this.showTooltip=true;this.followMouse=false;this.tooltipLocation="se";this.tooltipOffset=6;this.showTooltipGridPosition=false;this.showTooltipUnitPosition=true;this.showTooltipDataPosition=false;this.tooltipFormatString="%.4P, %.4P";this.useAxesFormatters=true;this.tooltipAxisGroups=[];this.zoom=false;this.zoomProxy=false;this.zoomTarget=false;this.looseZoom=true;this.clickReset=false;this.dblClickReset=true;this.showVerticalLine=false;this.showHorizontalLine=false;this.constrainZoomTo="none";this.shapeRenderer=new j.jqplot.ShapeRenderer();this._zoom={start:[],end:[],started:false,zooming:false,isZoomed:false,axes:{start:{},end:{}},gridpos:{},datapos:{}};this._tooltipElem;this.zoomCanvas;this.cursorCanvas;this.intersectionThreshold=2;this.showCursorLegend=false;this.cursorLegendFormatString=j.jqplot.Cursor.cursorLegendFormatString;this._oldHandlers={onselectstart:null,ondrag:null,onmousedown:null};this.constrainOutsideZoom=true;this.showTooltipOutsideZoom=false;this.onGrid=false;j.extend(true,this,q)};j.jqplot.Cursor.cursorLegendFormatString="%s x:%s, y:%s";j.jqplot.Cursor.init=function(t,s,r){var q=r||{};this.plugins.cursor=new j.jqplot.Cursor(q.cursor);var u=this.plugins.cursor;if(u.show){j.jqplot.eventListenerHooks.push(["jqplotMouseEnter",b]);j.jqplot.eventListenerHooks.push(["jqplotMouseLeave",f]);j.jqplot.eventListenerHooks.push(["jqplotMouseMove",i]);if(u.showCursorLegend){r.legend=r.legend||{};r.legend.renderer=j.jqplot.CursorLegendRenderer;r.legend.formatString=this.plugins.cursor.cursorLegendFormatString;r.legend.show=true}if(u.zoom){j.jqplot.eventListenerHooks.push(["jqplotMouseDown",a]);if(u.clickReset){j.jqplot.eventListenerHooks.push(["jqplotClick",k])}if(u.dblClickReset){j.jqplot.eventListenerHooks.push(["jqplotDblClick",c])}}this.resetZoom=function(){var x=this.axes;if(!u.zoomProxy){for(var w in x){x[w].reset();x[w]._ticks=[];if(u._zoom.axes[w]!==undefined){x[w]._autoFormatString=u._zoom.axes[w].tickFormatString}}this.redraw()}else{var v=this.plugins.cursor.zoomCanvas._ctx;v.clearRect(0,0,v.canvas.width,v.canvas.height);v=null}this.plugins.cursor._zoom.isZoomed=false;this.target.trigger("jqplotResetZoom",[this,this.plugins.cursor])};if(u.showTooltipDataPosition){u.showTooltipUnitPosition=false;u.showTooltipGridPosition=false;if(q.cursor.tooltipFormatString==undefined){u.tooltipFormatString=j.jqplot.Cursor.cursorLegendFormatString}}}};j.jqplot.Cursor.postDraw=function(){var x=this.plugins.cursor;if(x.zoomCanvas){x.zoomCanvas.resetCanvas();x.zoomCanvas=null}if(x.cursorCanvas){x.cursorCanvas.resetCanvas();x.cursorCanvas=null}if(x._tooltipElem){x._tooltipElem.emptyForce();x._tooltipElem=null}if(x.zoom){x.zoomCanvas=new j.jqplot.GenericCanvas();this.eventCanvas._elem.before(x.zoomCanvas.createElement(this._gridPadding,"jqplot-zoom-canvas",this._plotDimensions,this));x.zoomCanvas.setContext()}var v=document.createElement("div");x._tooltipElem=j(v);v=null;x._tooltipElem.addClass("jqplot-cursor-tooltip");x._tooltipElem.css({position:"absolute",display:"none"});if(x.zoomCanvas){x.zoomCanvas._elem.before(x._tooltipElem)}else{this.eventCanvas._elem.before(x._tooltipElem)}if(x.showVerticalLine||x.showHorizontalLine){x.cursorCanvas=new j.jqplot.GenericCanvas();this.eventCanvas._elem.before(x.cursorCanvas.createElement(this._gridPadding,"jqplot-cursor-canvas",this._plotDimensions,this));x.cursorCanvas.setContext()}if(x.showTooltipUnitPosition){if(x.tooltipAxisGroups.length===0){var t=this.series;var u;var q=[];for(var r=0;r<t.length;r++){u=t[r];var w=u.xaxis+","+u.yaxis;if(j.inArray(w,q)==-1){q.push(w)}}for(var r=0;r<q.length;r++){x.tooltipAxisGroups.push(q[r].split(","))}}}};j.jqplot.Cursor.zoomProxy=function(v,r){var q=v.plugins.cursor;var u=r.plugins.cursor;q.zoomTarget=true;q.zoom=true;q.style="auto";q.dblClickReset=false;u.zoom=true;u.zoomProxy=true;r.target.bind("jqplotZoom",t);r.target.bind("jqplotResetZoom",s);function t(x,w,z,y,A){q.doZoom(w,z,v,A)}function s(w,x,y){v.resetZoom()}};j.jqplot.Cursor.prototype.resetZoom=function(u,v){var t=u.axes;var s=v._zoom.axes;if(!u.plugins.cursor.zoomProxy&&v._zoom.isZoomed){for(var r in t){t[r].reset();t[r]._ticks=[];t[r]._autoFormatString=s[r].tickFormatString}u.redraw();v._zoom.isZoomed=false}else{var q=v.zoomCanvas._ctx;q.clearRect(0,0,q.canvas.width,q.canvas.height);q=null}u.target.trigger("jqplotResetZoom",[u,v])};j.jqplot.Cursor.resetZoom=function(q){q.resetZoom()};j.jqplot.Cursor.prototype.doZoom=function(G,t,C,u){var I=u;var F=C.axes;var r=I._zoom.axes;var w=r.start;var s=r.end;var B,E,z,D,v,x,q,H,J;var A=C.plugins.cursor.zoomCanvas._ctx;if((I.constrainZoomTo=="none"&&Math.abs(G.x-I._zoom.start[0])>6&&Math.abs(G.y-I._zoom.start[1])>6)||(I.constrainZoomTo=="x"&&Math.abs(G.x-I._zoom.start[0])>6)||(I.constrainZoomTo=="y"&&Math.abs(G.y-I._zoom.start[1])>6)){if(!C.plugins.cursor.zoomProxy){for(var y in t){if(I._zoom.axes[y]==undefined){I._zoom.axes[y]={};I._zoom.axes[y].numberTicks=F[y].numberTicks;I._zoom.axes[y].tickInterval=F[y].tickInterval;I._zoom.axes[y].daTickInterval=F[y].daTickInterval;I._zoom.axes[y].min=F[y].min;I._zoom.axes[y].max=F[y].max;I._zoom.axes[y].tickFormatString=(F[y].tickOptions!=null)?F[y].tickOptions.formatString:""}if((I.constrainZoomTo=="none")||(I.constrainZoomTo=="x"&&y.charAt(0)=="x")||(I.constrainZoomTo=="y"&&y.charAt(0)=="y")){z=t[y];if(z!=null){if(z>w[y]){v=w[y];x=z}else{D=w[y]-z;v=z;x=w[y]}q=F[y];H=null;if(q.alignTicks){if(q.name==="x2axis"&&C.axes.xaxis.show){H=C.axes.xaxis.numberTicks}else{if(q.name.charAt(0)==="y"&&q.name!=="yaxis"&&q.name!=="yMidAxis"&&C.axes.yaxis.show){H=C.axes.yaxis.numberTicks}}}if(this.looseZoom&&(F[y].renderer.constructor===j.jqplot.LinearAxisRenderer||F[y].renderer.constructor===j.jqplot.LogAxisRenderer)){J=j.jqplot.LinearTickGenerator(v,x,q._scalefact,H);if(F[y].tickInset&&J[0]<F[y].min+F[y].tickInset*F[y].tickInterval){J[0]+=J[4];J[2]-=1}if(F[y].tickInset&&J[1]>F[y].max-F[y].tickInset*F[y].tickInterval){J[1]-=J[4];J[2]-=1}if(F[y].renderer.constructor===j.jqplot.LogAxisRenderer&&J[0]<F[y].min){J[0]+=J[4];J[2]-=1}F[y].min=J[0];F[y].max=J[1];F[y]._autoFormatString=J[3];F[y].numberTicks=J[2];F[y].tickInterval=J[4];F[y].daTickInterval=[J[4]/1000,"seconds"]}else{F[y].min=v;F[y].max=x;F[y].tickInterval=null;F[y].numberTicks=null;F[y].daTickInterval=null}F[y]._ticks=[]}}}A.clearRect(0,0,A.canvas.width,A.canvas.height);C.redraw();I._zoom.isZoomed=true;A=null}C.target.trigger("jqplotZoom",[G,t,C,u])}};j.jqplot.preInitHooks.push(j.jqplot.Cursor.init);j.jqplot.postDrawHooks.push(j.jqplot.Cursor.postDraw);function e(G,r,C){var J=C.plugins.cursor;var w="";var N=false;if(J.showTooltipGridPosition){w=G.x+", "+G.y;N=true}if(J.showTooltipUnitPosition){var F;for(var E=0;E<J.tooltipAxisGroups.length;E++){F=J.tooltipAxisGroups[E];if(N){w+="<br />"}if(J.useAxesFormatters){for(var D=0;D<F.length;D++){if(D){w+=", "}var H=C.axes[F[D]]._ticks[0].formatter;var B=C.axes[F[D]]._ticks[0].formatString;w+=H(B,r[F[D]])}}else{w+=j.jqplot.sprintf(J.tooltipFormatString,r[F[0]],r[F[1]])}N=true}}if(J.showTooltipDataPosition){var u=C.series;var M=d(C,G.x,G.y);var N=false;for(var E=0;E<u.length;E++){if(u[E].show){var y=u[E].index;var t=u[E].label.toString();var I=j.inArray(y,M.indices);var z=undefined;var x=undefined;if(I!=-1){var L=M.data[I].data;if(J.useAxesFormatters){var A=u[E]._xaxis._ticks[0].formatter;var q=u[E]._yaxis._ticks[0].formatter;var K=u[E]._xaxis._ticks[0].formatString;var v=u[E]._yaxis._ticks[0].formatString;z=A(K,L[0]);x=q(v,L[1])}else{z=L[0];x=L[1]}if(N){w+="<br />"}w+=j.jqplot.sprintf(J.tooltipFormatString,t,z,x);N=true}}}}J._tooltipElem.html(w)}function g(C,A){var E=A.plugins.cursor;var z=E.cursorCanvas._ctx;z.clearRect(0,0,z.canvas.width,z.canvas.height);if(E.showVerticalLine){E.shapeRenderer.draw(z,[[C.x,0],[C.x,z.canvas.height]])}if(E.showHorizontalLine){E.shapeRenderer.draw(z,[[0,C.y],[z.canvas.width,C.y]])}var G=d(A,C.x,C.y);if(E.showCursorLegend){var r=j(A.targetId+" td.jqplot-cursor-legend-label");for(var B=0;B<r.length;B++){var v=j(r[B]).data("seriesIndex");var t=A.series[v];var s=t.label.toString();var D=j.inArray(v,G.indices);var x=undefined;var w=undefined;if(D!=-1){var H=G.data[D].data;if(E.useAxesFormatters){var y=t._xaxis._ticks[0].formatter;var q=t._yaxis._ticks[0].formatter;var F=t._xaxis._ticks[0].formatString;var u=t._yaxis._ticks[0].formatString;x=y(F,H[0]);w=q(u,H[1])}else{x=H[0];w=H[1]}}if(A.legend.escapeHtml){j(r[B]).text(j.jqplot.sprintf(E.cursorLegendFormatString,s,x,w))}else{j(r[B]).html(j.jqplot.sprintf(E.cursorLegendFormatString,s,x,w))}}}z=null}function d(A,F,E){var B={indices:[],data:[]};var G,w,u,C,v,q,t;var z;var D=A.plugins.cursor;for(var w=0;w<A.series.length;w++){G=A.series[w];q=G.renderer;if(G.show){z=D.intersectionThreshold;if(G.showMarker){z+=G.markerRenderer.size/2}for(var v=0;v<G.gridData.length;v++){t=G.gridData[v];if(D.showVerticalLine){if(Math.abs(F-t[0])<=z){B.indices.push(w);B.data.push({seriesIndex:w,pointIndex:v,gridData:t,data:G.data[v]})}}}}}return B}function n(r,t){var v=t.plugins.cursor;var s=v._tooltipElem;switch(v.tooltipLocation){case"nw":var q=r.x+t._gridPadding.left-s.outerWidth(true)-v.tooltipOffset;var u=r.y+t._gridPadding.top-v.tooltipOffset-s.outerHeight(true);break;case"n":var q=r.x+t._gridPadding.left-s.outerWidth(true)/2;var u=r.y+t._gridPadding.top-v.tooltipOffset-s.outerHeight(true);break;case"ne":var q=r.x+t._gridPadding.left+v.tooltipOffset;var u=r.y+t._gridPadding.top-v.tooltipOffset-s.outerHeight(true);break;case"e":var q=r.x+t._gridPadding.left+v.tooltipOffset;var u=r.y+t._gridPadding.top-s.outerHeight(true)/2;break;case"se":var q=r.x+t._gridPadding.left+v.tooltipOffset;var u=r.y+t._gridPadding.top+v.tooltipOffset;break;case"s":var q=r.x+t._gridPadding.left-s.outerWidth(true)/2;var u=r.y+t._gridPadding.top+v.tooltipOffset;break;case"sw":var q=r.x+t._gridPadding.left-s.outerWidth(true)-v.tooltipOffset;var u=r.y+t._gridPadding.top+v.tooltipOffset;break;case"w":var q=r.x+t._gridPadding.left-s.outerWidth(true)-v.tooltipOffset;var u=r.y+t._gridPadding.top-s.outerHeight(true)/2;break;default:var q=r.x+t._gridPadding.left+v.tooltipOffset;var u=r.y+t._gridPadding.top+v.tooltipOffset;break}s.css("left",q);s.css("top",u);s=null}function m(u){var s=u._gridPadding;var v=u.plugins.cursor;var t=v._tooltipElem;switch(v.tooltipLocation){case"nw":var r=s.left+v.tooltipOffset;var q=s.top+v.tooltipOffset;t.css("left",r);t.css("top",q);break;case"n":var r=(s.left+(u._plotDimensions.width-s.right))/2-t.outerWidth(true)/2;var q=s.top+v.tooltipOffset;t.css("left",r);t.css("top",q);break;case"ne":var r=s.right+v.tooltipOffset;var q=s.top+v.tooltipOffset;t.css({right:r,top:q});break;case"e":var r=s.right+v.tooltipOffset;var q=(s.top+(u._plotDimensions.height-s.bottom))/2-t.outerHeight(true)/2;t.css({right:r,top:q});break;case"se":var r=s.right+v.tooltipOffset;var q=s.bottom+v.tooltipOffset;t.css({right:r,bottom:q});break;case"s":var r=(s.left+(u._plotDimensions.width-s.right))/2-t.outerWidth(true)/2;var q=s.bottom+v.tooltipOffset;t.css({left:r,bottom:q});break;case"sw":var r=s.left+v.tooltipOffset;var q=s.bottom+v.tooltipOffset;t.css({left:r,bottom:q});break;case"w":var r=s.left+v.tooltipOffset;var q=(s.top+(u._plotDimensions.height-s.bottom))/2-t.outerHeight(true)/2;t.css({left:r,top:q});break;default:var r=s.right-v.tooltipOffset;var q=s.bottom+v.tooltipOffset;t.css({right:r,bottom:q});break}t=null}function k(r,q,v,u,t){r.preventDefault();r.stopImmediatePropagation();var w=t.plugins.cursor;if(w.clickReset){w.resetZoom(t,w)}var s=window.getSelection;if(document.selection&&document.selection.empty){document.selection.empty()}else{if(s&&!s().isCollapsed){s().collapse()}}return false}function c(r,q,v,u,t){r.preventDefault();r.stopImmediatePropagation();var w=t.plugins.cursor;if(w.dblClickReset){w.resetZoom(t,w)}var s=window.getSelection;if(document.selection&&document.selection.empty){document.selection.empty()}else{if(s&&!s().isCollapsed){s().collapse()}}return false}function f(w,t,q,z,u){var v=u.plugins.cursor;v.onGrid=false;if(v.show){j(w.target).css("cursor",v.previousCursor);if(v.showTooltip&&!(v._zoom.zooming&&v.showTooltipOutsideZoom&&!v.constrainOutsideZoom)){v._tooltipElem.empty();v._tooltipElem.hide()}if(v.zoom){v._zoom.gridpos=t;v._zoom.datapos=q}if(v.showVerticalLine||v.showHorizontalLine){var B=v.cursorCanvas._ctx;B.clearRect(0,0,B.canvas.width,B.canvas.height);B=null}if(v.showCursorLegend){var A=j(u.targetId+" td.jqplot-cursor-legend-label");for(var s=0;s<A.length;s++){var y=j(A[s]).data("seriesIndex");var r=u.series[y];var x=r.label.toString();if(u.legend.escapeHtml){j(A[s]).text(j.jqplot.sprintf(v.cursorLegendFormatString,x,undefined,undefined))}else{j(A[s]).html(j.jqplot.sprintf(v.cursorLegendFormatString,x,undefined,undefined))}}}}}function b(r,q,u,t,s){var v=s.plugins.cursor;v.onGrid=true;if(v.show){v.previousCursor=r.target.style.cursor;r.target.style.cursor=v.style;if(v.showTooltip){e(q,u,s);if(v.followMouse){n(q,s)}else{m(s)}v._tooltipElem.show()}if(v.showVerticalLine||v.showHorizontalLine){g(q,s)}}}function i(r,q,u,t,s){var v=s.plugins.cursor;if(v.show){if(v.showTooltip){e(q,u,s);if(v.followMouse){n(q,s)}}if(v.showVerticalLine||v.showHorizontalLine){g(q,s)}}}function o(y){var x=y.data.plot;var t=x.eventCanvas._elem.offset();var w={x:y.pageX-t.left,y:y.pageY-t.top};var u={xaxis:null,yaxis:null,x2axis:null,y2axis:null,y3axis:null,y4axis:null,y5axis:null,y6axis:null,y7axis:null,y8axis:null,y9axis:null,yMidAxis:null};var v=["xaxis","yaxis","x2axis","y2axis","y3axis","y4axis","y5axis","y6axis","y7axis","y8axis","y9axis","yMidAxis"];var q=x.axes;var r,s;for(r=11;r>0;r--){s=v[r-1];if(q[s].show){u[s]=q[s].series_p2u(w[s.charAt(0)])}}return{offsets:t,gridPos:w,dataPos:u}}function h(z){var x=z.data.plot;var y=x.plugins.cursor;if(y.show&&y.zoom&&y._zoom.started&&!y.zoomTarget){z.preventDefault();var B=y.zoomCanvas._ctx;var v=o(z);var w=v.gridPos;var t=v.dataPos;y._zoom.gridpos=w;y._zoom.datapos=t;y._zoom.zooming=true;var u=w.x;var s=w.y;var A=B.canvas.height;var q=B.canvas.width;if(y.showTooltip&&!y.onGrid&&y.showTooltipOutsideZoom){e(w,t,x);if(y.followMouse){n(w,x)}}if(y.constrainZoomTo=="x"){y._zoom.end=[u,A]}else{if(y.constrainZoomTo=="y"){y._zoom.end=[q,s]}else{y._zoom.end=[u,s]}}var r=window.getSelection;if(document.selection&&document.selection.empty){document.selection.empty()}else{if(r&&!r().isCollapsed){r().collapse()}}l.call(y);B=null}}function a(w,s,r,x,t){var v=t.plugins.cursor;if(t.plugins.mobile){j(document).one("vmouseup.jqplot_cursor",{plot:t},p)}else{j(document).one("mouseup.jqplot_cursor",{plot:t},p)}var u=t.axes;if(document.onselectstart!=undefined){v._oldHandlers.onselectstart=document.onselectstart;document.onselectstart=function(){return false}}if(document.ondrag!=undefined){v._oldHandlers.ondrag=document.ondrag;document.ondrag=function(){return false}}if(document.onmousedown!=undefined){v._oldHandlers.onmousedown=document.onmousedown;document.onmousedown=function(){return false}}if(v.zoom){if(!v.zoomProxy){var y=v.zoomCanvas._ctx;y.clearRect(0,0,y.canvas.width,y.canvas.height);y=null}if(v.constrainZoomTo=="x"){v._zoom.start=[s.x,0]}else{if(v.constrainZoomTo=="y"){v._zoom.start=[0,s.y]}else{v._zoom.start=[s.x,s.y]}}v._zoom.started=true;for(var q in r){v._zoom.axes.start[q]=r[q]}if(t.plugins.mobile){j(document).bind("vmousemove.jqplotCursor",{plot:t},h)}else{j(document).bind("mousemove.jqplotCursor",{plot:t},h)}}}function p(y){var v=y.data.plot;var x=v.plugins.cursor;if(x.zoom&&x._zoom.zooming&&!x.zoomTarget){var u=x._zoom.gridpos.x;var r=x._zoom.gridpos.y;var t=x._zoom.datapos;var z=x.zoomCanvas._ctx.canvas.height;var q=x.zoomCanvas._ctx.canvas.width;var w=v.axes;if(x.constrainOutsideZoom&&!x.onGrid){if(u<0){u=0}else{if(u>q){u=q}}if(r<0){r=0}else{if(r>z){r=z}}for(var s in t){if(t[s]){if(s.charAt(0)=="x"){t[s]=w[s].series_p2u(u)}else{t[s]=w[s].series_p2u(r)}}}}if(x.constrainZoomTo=="x"){r=z}else{if(x.constrainZoomTo=="y"){u=q}}x._zoom.end=[u,r];x._zoom.gridpos={x:u,y:r};x.doZoom(x._zoom.gridpos,t,v,x)}x._zoom.started=false;x._zoom.zooming=false;j(document).unbind("mousemove.jqplotCursor",h);if(document.onselectstart!=undefined&&x._oldHandlers.onselectstart!=null){document.onselectstart=x._oldHandlers.onselectstart;x._oldHandlers.onselectstart=null}if(document.ondrag!=undefined&&x._oldHandlers.ondrag!=null){document.ondrag=x._oldHandlers.ondrag;x._oldHandlers.ondrag=null}if(document.onmousedown!=undefined&&x._oldHandlers.onmousedown!=null){document.onmousedown=x._oldHandlers.onmousedown;x._oldHandlers.onmousedown=null}}function l(){var y=this._zoom.start;var u=this._zoom.end;var s=this.zoomCanvas._ctx;var r,v,x,q;if(u[0]>y[0]){r=y[0];q=u[0]-y[0]}else{r=u[0];q=y[0]-u[0]}if(u[1]>y[1]){v=y[1];x=u[1]-y[1]}else{v=u[1];x=y[1]-u[1]}s.fillStyle="rgba(0,0,0,0.2)";s.strokeStyle="#999999";s.lineWidth=1;s.clearRect(0,0,s.canvas.width,s.canvas.height);s.fillRect(0,0,s.canvas.width,s.canvas.height);s.clearRect(r,v,q,x);s.strokeRect(r,v,q,x);s=null}j.jqplot.CursorLegendRenderer=function(q){j.jqplot.TableLegendRenderer.call(this,q);this.formatString="%s"};j.jqplot.CursorLegendRenderer.prototype=new j.jqplot.TableLegendRenderer();j.jqplot.CursorLegendRenderer.prototype.constructor=j.jqplot.CursorLegendRenderer;j.jqplot.CursorLegendRenderer.prototype.draw=function(){if(this._elem){this._elem.emptyForce();this._elem=null}if(this.show){var w=this._series,A;var r=document.createElement("div");this._elem=j(r);r=null;this._elem.addClass("jqplot-legend jqplot-cursor-legend");this._elem.css("position","absolute");var q=false;for(var x=0;x<w.length;x++){A=w[x];if(A.show&&A.showLabel){var v=j.jqplot.sprintf(this.formatString,A.label.toString());if(v){var t=A.color;if(A._stack&&!A.fill){t=""}z.call(this,v,t,q,x);q=true}for(var u=0;u<j.jqplot.addLegendRowHooks.length;u++){var y=j.jqplot.addLegendRowHooks[u].call(this,A);if(y){z.call(this,y.label,y.color,q);q=true}}}}w=A=null;delete w;delete A}function z(D,C,F,s){var B=(F)?this.rowSpacing:"0";var E=j('<tr class="jqplot-legend jqplot-cursor-legend"></tr>').appendTo(this._elem);E.data("seriesIndex",s);j('<td class="jqplot-legend jqplot-cursor-legend-swatch" style="padding-top:'+B+';"><div style="border:1px solid #cccccc;padding:0.2em;"><div class="jqplot-cursor-legend-swatch" style="background-color:'+C+';"></div></div></td>').appendTo(E);var G=j('<td class="jqplot-legend jqplot-cursor-legend-label" style="vertical-align:middle;padding-top:'+B+';"></td>');G.appendTo(E);G.data("seriesIndex",s);if(this.escapeHtml){G.text(D)}else{G.html(D)}E=null;G=null}return this._elem}})(jQuery);;
/* jqPlot 1.0.7r1224 | (c) 2009-2013 Chris Leonello | jplot.com
   jsDate | (c) 2010-2013 Chris Leonello
 */(function(h){h.jqplot.DateAxisRenderer=function(){h.jqplot.LinearAxisRenderer.call(this);this.date=new h.jsDate()};var c=1000;var e=60*c;var f=60*e;var l=24*f;var b=7*l;var j=30.4368499*l;var k=365.242199*l;var g=[31,28,31,30,31,30,31,30,31,30,31,30];var i=["%M:%S.%#N","%M:%S.%#N","%M:%S.%#N","%M:%S","%M:%S","%M:%S","%M:%S","%H:%M:%S","%H:%M:%S","%H:%M","%H:%M","%H:%M","%H:%M","%H:%M","%H:%M","%a %H:%M","%a %H:%M","%b %e %H:%M","%b %e %H:%M","%b %e %H:%M","%b %e %H:%M","%v","%v","%v","%v","%v","%v","%v"];var m=[0.1*c,0.2*c,0.5*c,c,2*c,5*c,10*c,15*c,30*c,e,2*e,5*e,10*e,15*e,30*e,f,2*f,4*f,6*f,8*f,12*f,l,2*l,3*l,4*l,5*l,b,2*b];var d=[];function a(p,s,t){var o=Number.MAX_VALUE;var u,r,v;for(var q=0,n=m.length;q<n;q++){u=Math.abs(t-m[q]);if(u<o){o=u;r=m[q];v=i[q]}}return[r,v]}h.jqplot.DateAxisRenderer.prototype=new h.jqplot.LinearAxisRenderer();h.jqplot.DateAxisRenderer.prototype.constructor=h.jqplot.DateAxisRenderer;h.jqplot.DateTickFormatter=function(n,o){if(!n){n="%Y/%m/%d"}return h.jsDate.strftime(o,n)};h.jqplot.DateAxisRenderer.prototype.init=function(E){this.tickOptions.formatter=h.jqplot.DateTickFormatter;this.tickInset=0;this.drawBaseline=true;this.baselineWidth=null;this.baselineColor=null;this.daTickInterval=null;this._daTickInterval=null;h.extend(true,this,E);var C=this._dataBounds,u,x,D,y,A,z,o;for(var t=0;t<this._series.length;t++){u={intervals:[],frequencies:{},sortedIntervals:[],min:null,max:null,mean:null};x=0;D=this._series[t];y=D.data;A=D._plotData;z=D._stackData;o=0;for(var r=0;r<y.length;r++){if(this.name=="xaxis"||this.name=="x2axis"){y[r][0]=new h.jsDate(y[r][0]).getTime();A[r][0]=new h.jsDate(y[r][0]).getTime();z[r][0]=new h.jsDate(y[r][0]).getTime();if((y[r][0]!=null&&y[r][0]<C.min)||C.min==null){C.min=y[r][0]}if((y[r][0]!=null&&y[r][0]>C.max)||C.max==null){C.max=y[r][0]}if(r>0){o=Math.abs(y[r][0]-y[r-1][0]);u.intervals.push(o);if(u.frequencies.hasOwnProperty(o)){u.frequencies[o]+=1}else{u.frequencies[o]=1}}x+=o}else{y[r][1]=new h.jsDate(y[r][1]).getTime();A[r][1]=new h.jsDate(y[r][1]).getTime();z[r][1]=new h.jsDate(y[r][1]).getTime();if((y[r][1]!=null&&y[r][1]<C.min)||C.min==null){C.min=y[r][1]}if((y[r][1]!=null&&y[r][1]>C.max)||C.max==null){C.max=y[r][1]}if(r>0){o=Math.abs(y[r][1]-y[r-1][1]);u.intervals.push(o);if(u.frequencies.hasOwnProperty(o)){u.frequencies[o]+=1}else{u.frequencies[o]=1}}}x+=o}if(D.renderer.bands){if(D.renderer.bands.hiData.length){var w=D.renderer.bands.hiData;for(var r=0,q=w.length;r<q;r++){if(this.name==="xaxis"||this.name==="x2axis"){w[r][0]=new h.jsDate(w[r][0]).getTime();if((w[r][0]!=null&&w[r][0]>C.max)||C.max==null){C.max=w[r][0]}}else{w[r][1]=new h.jsDate(w[r][1]).getTime();if((w[r][1]!=null&&w[r][1]>C.max)||C.max==null){C.max=w[r][1]}}}}if(D.renderer.bands.lowData.length){var w=D.renderer.bands.lowData;for(var r=0,q=w.length;r<q;r++){if(this.name==="xaxis"||this.name==="x2axis"){w[r][0]=new h.jsDate(w[r][0]).getTime();if((w[r][0]!=null&&w[r][0]<C.min)||C.min==null){C.min=w[r][0]}}else{w[r][1]=new h.jsDate(w[r][1]).getTime();if((w[r][1]!=null&&w[r][1]<C.min)||C.min==null){C.min=w[r][1]}}}}}var B=0,v=0;for(var p in u.frequencies){u.sortedIntervals.push({interval:p,frequency:u.frequencies[p]})}u.sortedIntervals.sort(function(s,n){return n.frequency-s.frequency});u.min=h.jqplot.arrayMin(u.intervals);u.max=h.jqplot.arrayMax(u.intervals);u.mean=x/y.length;this._intervalStats.push(u);u=x=D=y=A=z=null}C=null};h.jqplot.DateAxisRenderer.prototype.reset=function(){this.min=this._options.min;this.max=this._options.max;this.tickInterval=this._options.tickInterval;this.numberTicks=this._options.numberTicks;this._autoFormatString="";if(this._overrideFormatString&&this.tickOptions&&this.tickOptions.formatString){this.tickOptions.formatString=""}this.daTickInterval=this._daTickInterval};h.jqplot.DateAxisRenderer.prototype.createTicks=function(p){var X=this._ticks;var L=this.ticks;var F=this.name;var H=this._dataBounds;var M=this._intervalStats;var n=(this.name.charAt(0)==="x")?this._plotDimensions.width:this._plotDimensions.height;var w;var ae,J;var y,x;var ad,aa;var s=30;var O=1;var U=null;if(this.tickInterval!=null){if(Number(this.tickInterval)){U=[Number(this.tickInterval),"seconds"]}else{if(typeof this.tickInterval=="string"){var ac=this.tickInterval.split(" ");if(ac.length==1){U=[1,ac[0]]}else{if(ac.length==2){U=[ac[0],ac[1]]}}}}}var v=this.tickInterval;ae=new h.jsDate((this.min!=null)?this.min:H.min).getTime();J=new h.jsDate((this.max!=null)?this.max:H.max).getTime();var A=p.plugins.cursor;if(A&&A._zoom&&A._zoom.zooming){this.min=null;this.max=null}var B=J-ae;if(this.tickOptions==null||!this.tickOptions.formatString){this._overrideFormatString=true}if(L.length){for(aa=0;aa<L.length;aa++){var P=L[aa];var Y=new this.tickRenderer(this.tickOptions);if(P.constructor==Array){Y.value=new h.jsDate(P[0]).getTime();Y.label=P[1];if(!this.showTicks){Y.showLabel=false;Y.showMark=false}else{if(!this.showTickMarks){Y.showMark=false}}Y.setTick(Y.value,this.name);this._ticks.push(Y)}else{Y.value=new h.jsDate(P).getTime();if(!this.showTicks){Y.showLabel=false;Y.showMark=false}else{if(!this.showTickMarks){Y.showMark=false}}Y.setTick(Y.value,this.name);this._ticks.push(Y)}}this.numberTicks=L.length;this.min=this._ticks[0].value;this.max=this._ticks[this.numberTicks-1].value;this.daTickInterval=[(this.max-this.min)/(this.numberTicks-1)/1000,"seconds"]}else{if(this.min==null&&this.max==null&&H.min==H.max){var E=h.extend(true,{},this.tickOptions,{name:this.name,value:null});var T=300000;this.min=H.min-T;this.max=H.max+T;this.numberTicks=3;for(var aa=this.min;aa<=this.max;aa+=T){E.value=aa;var Y=new this.tickRenderer(E);if(this._overrideFormatString&&this._autoFormatString!=""){Y.formatString=this._autoFormatString}Y.showLabel=false;Y.showMark=false;this._ticks.push(Y)}if(this.showTicks){this._ticks[1].showLabel=true}if(this.showTickMarks){this._ticks[1].showTickMarks=true}}else{if(this.min==null&&this.max==null){var N=h.extend(true,{},this.tickOptions,{name:this.name,value:null});var ab,I;if(!this.tickInterval&&!this.numberTicks){var R=Math.max(n,s+1);var Z=115;if(this.tickRenderer===h.jqplot.CanvasAxisTickRenderer&&this.tickOptions.angle){Z=115-40*Math.abs(Math.sin(this.tickOptions.angle/180*Math.PI))}ab=Math.ceil((R-s)/Z+1);I=(J-ae)/(ab-1)}else{if(this.tickInterval){I=new h.jsDate(0).add(U[0],U[1]).getTime()}else{if(this.numberTicks){ab=this.numberTicks;I=(J-ae)/(ab-1)}}}if(I<=19*l){var Q=a(ae,J,I);var r=Q[0];this._autoFormatString=Q[1];ae=new h.jsDate(ae);ae=Math.floor((ae.getTime()-ae.getUtcOffset())/r)*r+ae.getUtcOffset();ab=Math.ceil((J-ae)/r)+1;this.min=ae;this.max=ae+(ab-1)*r;if(this.max<J){this.max+=r;ab+=1}this.tickInterval=r;this.numberTicks=ab;for(var aa=0;aa<ab;aa++){N.value=this.min+aa*r;Y=new this.tickRenderer(N);if(this._overrideFormatString&&this._autoFormatString!=""){Y.formatString=this._autoFormatString}if(!this.showTicks){Y.showLabel=false;Y.showMark=false}else{if(!this.showTickMarks){Y.showMark=false}}this._ticks.push(Y)}O=this.tickInterval}else{if(I<=9*j){this._autoFormatString="%v";var D=Math.round(I/j);if(D<1){D=1}else{if(D>6){D=6}}var V=new h.jsDate(ae).setDate(1).setHours(0,0,0,0);var q=new h.jsDate(J);var z=new h.jsDate(J).setDate(1).setHours(0,0,0,0);if(q.getTime()!==z.getTime()){z=z.add(1,"month")}var S=z.diff(V,"month");ab=Math.ceil(S/D)+1;this.min=V.getTime();this.max=V.clone().add((ab-1)*D,"month").getTime();this.numberTicks=ab;for(var aa=0;aa<ab;aa++){if(aa===0){N.value=V.getTime()}else{N.value=V.add(D,"month").getTime()}Y=new this.tickRenderer(N);if(this._overrideFormatString&&this._autoFormatString!=""){Y.formatString=this._autoFormatString}if(!this.showTicks){Y.showLabel=false;Y.showMark=false}else{if(!this.showTickMarks){Y.showMark=false}}this._ticks.push(Y)}O=D*j}else{this._autoFormatString="%v";var D=Math.round(I/k);if(D<1){D=1}var V=new h.jsDate(ae).setMonth(0,1).setHours(0,0,0,0);var z=new h.jsDate(J).add(1,"year").setMonth(0,1).setHours(0,0,0,0);var K=z.diff(V,"year");ab=Math.ceil(K/D)+1;this.min=V.getTime();this.max=V.clone().add((ab-1)*D,"year").getTime();this.numberTicks=ab;for(var aa=0;aa<ab;aa++){if(aa===0){N.value=V.getTime()}else{N.value=V.add(D,"year").getTime()}Y=new this.tickRenderer(N);if(this._overrideFormatString&&this._autoFormatString!=""){Y.formatString=this._autoFormatString}if(!this.showTicks){Y.showLabel=false;Y.showMark=false}else{if(!this.showTickMarks){Y.showMark=false}}this._ticks.push(Y)}O=D*k}}}else{if(F=="xaxis"||F=="x2axis"){n=this._plotDimensions.width}else{n=this._plotDimensions.height}if(this.min!=null&&this.max!=null&&this.numberTicks!=null){this.tickInterval=null}if(this.tickInterval!=null&&U!=null){this.daTickInterval=U}if(ae==J){var o=24*60*60*500;ae-=o;J+=o}B=J-ae;var G=2+parseInt(Math.max(0,n-100)/100,10);var W,C;W=(this.min!=null)?new h.jsDate(this.min).getTime():ae-B/2*(this.padMin-1);C=(this.max!=null)?new h.jsDate(this.max).getTime():J+B/2*(this.padMax-1);this.min=W;this.max=C;B=this.max-this.min;if(this.numberTicks==null){if(this.daTickInterval!=null){var u=new h.jsDate(this.max).diff(this.min,this.daTickInterval[1],true);this.numberTicks=Math.ceil(u/this.daTickInterval[0])+1;this.max=new h.jsDate(this.min).add((this.numberTicks-1)*this.daTickInterval[0],this.daTickInterval[1]).getTime()}else{if(n>200){this.numberTicks=parseInt(3+(n-200)/100,10)}else{this.numberTicks=2}}}O=B/(this.numberTicks-1)/1000;if(this.daTickInterval==null){this.daTickInterval=[O,"seconds"]}for(var aa=0;aa<this.numberTicks;aa++){var ae=new h.jsDate(this.min);ad=ae.add(aa*this.daTickInterval[0],this.daTickInterval[1]).getTime();var Y=new this.tickRenderer(this.tickOptions);if(!this.showTicks){Y.showLabel=false;Y.showMark=false}else{if(!this.showTickMarks){Y.showMark=false}}Y.setTick(ad,this.name);this._ticks.push(Y)}}}}if(this.tickInset){this.min=this.min-this.tickInset*O;this.max=this.max+this.tickInset*O}if(this._daTickInterval==null){this._daTickInterval=this.daTickInterval}X=null}})(jQuery);;
/* jqPlot 1.0.7r1224 | (c) 2009-2013 Chris Leonello | jplot.com
   jsDate | (c) 2010-2013 Chris Leonello
 */(function(e){e.jqplot.PieRenderer=function(){e.jqplot.LineRenderer.call(this)};e.jqplot.PieRenderer.prototype=new e.jqplot.LineRenderer();e.jqplot.PieRenderer.prototype.constructor=e.jqplot.PieRenderer;e.jqplot.PieRenderer.prototype.init=function(q,u){this.diameter=null;this.padding=20;this.sliceMargin=0;this.fill=true;this.shadowOffset=2;this.shadowAlpha=0.07;this.shadowDepth=5;this.highlightMouseOver=true;this.highlightMouseDown=false;this.highlightColors=[];this.dataLabels="percent";this.showDataLabels=false;this.dataLabelFormatString=null;this.dataLabelThreshold=3;this.dataLabelPositionFactor=0.52;this.dataLabelNudge=2;this.dataLabelCenterOn=true;this.startAngle=0;this.tickRenderer=e.jqplot.PieTickRenderer;this._drawData=true;this._type="pie";if(q.highlightMouseDown&&q.highlightMouseOver==null){q.highlightMouseOver=false}e.extend(true,this,q);if(this.sliceMargin<0){this.sliceMargin=0}this._diameter=null;this._radius=null;this._sliceAngles=[];this._highlightedPoint=null;if(this.highlightColors.length==0){for(var s=0;s<this.seriesColors.length;s++){var r=e.jqplot.getColorComponents(this.seriesColors[s]);var o=[r[0],r[1],r[2]];var t=o[0]+o[1]+o[2];for(var p=0;p<3;p++){o[p]=(t>570)?o[p]*0.8:o[p]+0.3*(255-o[p]);o[p]=parseInt(o[p],10)}this.highlightColors.push("rgb("+o[0]+","+o[1]+","+o[2]+")")}}this.highlightColorGenerator=new e.jqplot.ColorGenerator(this.highlightColors);u.postParseOptionsHooks.addOnce(m);u.postInitHooks.addOnce(g);u.eventListenerHooks.addOnce("jqplotMouseMove",b);u.eventListenerHooks.addOnce("jqplotMouseDown",a);u.eventListenerHooks.addOnce("jqplotMouseUp",l);u.eventListenerHooks.addOnce("jqplotClick",f);u.eventListenerHooks.addOnce("jqplotRightClick",n);u.postDrawHooks.addOnce(i)};e.jqplot.PieRenderer.prototype.setGridData=function(t){var p=[];var u=[];var o=this.startAngle/180*Math.PI;var s=0;this._drawData=false;for(var r=0;r<this.data.length;r++){if(this.data[r][1]!=0){this._drawData=true}p.push(this.data[r][1]);u.push([this.data[r][0]]);if(r>0){p[r]+=p[r-1]}s+=this.data[r][1]}var q=Math.PI*2/p[p.length-1];for(var r=0;r<p.length;r++){u[r][1]=p[r]*q;u[r][2]=this.data[r][1]/s}this.gridData=u};e.jqplot.PieRenderer.prototype.makeGridData=function(t,u){var p=[];var v=[];var s=0;var o=this.startAngle/180*Math.PI;this._drawData=false;for(var r=0;r<t.length;r++){if(this.data[r][1]!=0){this._drawData=true}p.push(t[r][1]);v.push([t[r][0]]);if(r>0){p[r]+=p[r-1]}s+=t[r][1]}var q=Math.PI*2/p[p.length-1];for(var r=0;r<p.length;r++){v[r][1]=p[r]*q;v[r][2]=t[r][1]/s}return v};function h(o){return Math.sin((o-(o-Math.PI)/8/Math.PI)/2)}function j(u,t,o,v,r){var w=0;var q=t-u;var s=Math.abs(q);var p=o;if(v==false){p+=r}if(p>0&&s>0.01&&s<6.282){w=parseFloat(p)/2/h(q)}return w}e.jqplot.PieRenderer.prototype.drawSlice=function(B,z,y,u,w){if(this._drawData){var p=this._radius;var A=this.fill;var x=this.lineWidth;var s=this.sliceMargin;if(this.fill==false){s+=this.lineWidth}B.save();B.translate(this._center[0],this._center[1]);var D=j(z,y,this.sliceMargin,this.fill,this.lineWidth);var o=D*Math.cos((z+y)/2);var C=D*Math.sin((z+y)/2);if((y-z)<=Math.PI){p-=D}else{p+=D}B.translate(o,C);if(w){for(var v=0,t=this.shadowDepth;v<t;v++){B.save();B.translate(this.shadowOffset*Math.cos(this.shadowAngle/180*Math.PI),this.shadowOffset*Math.sin(this.shadowAngle/180*Math.PI));q(p)}for(var v=0,t=this.shadowDepth;v<t;v++){B.restore()}}else{q(p)}B.restore()}function q(r){if(y>6.282+this.startAngle){y=6.282+this.startAngle;if(z>y){z=6.281+this.startAngle}}if(z>=y){return}B.beginPath();B.fillStyle=u;B.strokeStyle=u;B.lineWidth=x;B.arc(0,0,r,z,y,false);B.lineTo(0,0);B.closePath();if(A){B.fill()}else{B.stroke()}}};e.jqplot.PieRenderer.prototype.draw=function(B,z,E,o){var W;var H=(E!=undefined)?E:{};var t=0;var s=0;var N=1;var L=new e.jqplot.ColorGenerator(this.seriesColors);if(E.legendInfo&&E.legendInfo.placement=="insideGrid"){var J=E.legendInfo;switch(J.location){case"nw":t=J.width+J.xoffset;break;case"w":t=J.width+J.xoffset;break;case"sw":t=J.width+J.xoffset;break;case"ne":t=J.width+J.xoffset;N=-1;break;case"e":t=J.width+J.xoffset;N=-1;break;case"se":t=J.width+J.xoffset;N=-1;break;case"n":s=J.height+J.yoffset;break;case"s":s=J.height+J.yoffset;N=-1;break;default:break}}var K=(H.shadow!=undefined)?H.shadow:this.shadow;var A=(H.fill!=undefined)?H.fill:this.fill;var C=B.canvas.width;var I=B.canvas.height;var Q=C-t-2*this.padding;var X=I-s-2*this.padding;var M=Math.min(Q,X);var Y=M;this._sliceAngles=[];var v=this.sliceMargin;if(this.fill==false){v+=this.lineWidth}var q;var G=0;var R,aa,Z,ab;var D=this.startAngle/180*Math.PI;for(var W=0,V=z.length;W<V;W++){aa=(W==0)?D:z[W-1][1]+D;Z=z[W][1]+D;this._sliceAngles.push([aa,Z]);q=j(aa,Z,this.sliceMargin,this.fill,this.lineWidth);if(Math.abs(Z-aa)>Math.PI){G=Math.max(q,G)}}if(this.diameter!=null&&this.diameter>0){this._diameter=this.diameter-2*G}else{this._diameter=Y-2*G}if(this._diameter<6){e.jqplot.log("Diameter of pie too small, not rendering.");return}var S=this._radius=this._diameter/2;this._center=[(C-N*t)/2+N*t+G*Math.cos(D),(I-N*s)/2+N*s+G*Math.sin(D)];if(this.shadow){for(var W=0,V=z.length;W<V;W++){ab="rgba(0,0,0,"+this.shadowAlpha+")";this.renderer.drawSlice.call(this,B,this._sliceAngles[W][0],this._sliceAngles[W][1],ab,true)}}for(var W=0;W<z.length;W++){this.renderer.drawSlice.call(this,B,this._sliceAngles[W][0],this._sliceAngles[W][1],L.next(),false);if(this.showDataLabels&&z[W][2]*100>=this.dataLabelThreshold){var F,U=(this._sliceAngles[W][0]+this._sliceAngles[W][1])/2,T;if(this.dataLabels=="label"){F=this.dataLabelFormatString||"%s";T=e.jqplot.sprintf(F,z[W][0])}else{if(this.dataLabels=="value"){F=this.dataLabelFormatString||"%d";T=e.jqplot.sprintf(F,this.data[W][1])}else{if(this.dataLabels=="percent"){F=this.dataLabelFormatString||"%d%%";T=e.jqplot.sprintf(F,z[W][2]*100)}else{if(this.dataLabels.constructor==Array){F=this.dataLabelFormatString||"%s";T=e.jqplot.sprintf(F,this.dataLabels[W])}}}}var p=(this._radius)*this.dataLabelPositionFactor+this.sliceMargin+this.dataLabelNudge;var P=this._center[0]+Math.cos(U)*p+this.canvas._offsets.left;var O=this._center[1]+Math.sin(U)*p+this.canvas._offsets.top;var u=e('<div class="jqplot-pie-series jqplot-data-label" style="position:absolute;">'+T+"</div>").insertBefore(o.eventCanvas._elem);if(this.dataLabelCenterOn){P-=u.width()/2;O-=u.height()/2}else{P-=u.width()*Math.sin(U/2);O-=u.height()/2}P=Math.round(P);O=Math.round(O);u.css({left:P,top:O})}}};e.jqplot.PieAxisRenderer=function(){e.jqplot.LinearAxisRenderer.call(this)};e.jqplot.PieAxisRenderer.prototype=new e.jqplot.LinearAxisRenderer();e.jqplot.PieAxisRenderer.prototype.constructor=e.jqplot.PieAxisRenderer;e.jqplot.PieAxisRenderer.prototype.init=function(o){this.tickRenderer=e.jqplot.PieTickRenderer;e.extend(true,this,o);this._dataBounds={min:0,max:100};this.min=0;this.max=100;this.showTicks=false;this.ticks=[];this.showMark=false;this.show=false};e.jqplot.PieLegendRenderer=function(){e.jqplot.TableLegendRenderer.call(this)};e.jqplot.PieLegendRenderer.prototype=new e.jqplot.TableLegendRenderer();e.jqplot.PieLegendRenderer.prototype.constructor=e.jqplot.PieLegendRenderer;e.jqplot.PieLegendRenderer.prototype.init=function(o){this.numberRows=null;this.numberColumns=null;e.extend(true,this,o)};e.jqplot.PieLegendRenderer.prototype.draw=function(){var r=this;if(this.show){var B=this._series;this._elem=e(document.createElement("table"));this._elem.addClass("jqplot-table-legend");var E={position:"absolute"};if(this.background){E.background=this.background}if(this.border){E.border=this.border}if(this.fontSize){E.fontSize=this.fontSize}if(this.fontFamily){E.fontFamily=this.fontFamily}if(this.textColor){E.textColor=this.textColor}if(this.marginTop!=null){E.marginTop=this.marginTop}if(this.marginBottom!=null){E.marginBottom=this.marginBottom}if(this.marginLeft!=null){E.marginLeft=this.marginLeft}if(this.marginRight!=null){E.marginRight=this.marginRight}this._elem.css(E);var I=false,A=false,o,y;var C=B[0];var p=new e.jqplot.ColorGenerator(C.seriesColors);if(C.show){var J=C.data;if(this.numberRows){o=this.numberRows;if(!this.numberColumns){y=Math.ceil(J.length/o)}else{y=this.numberColumns}}else{if(this.numberColumns){y=this.numberColumns;o=Math.ceil(J.length/this.numberColumns)}else{o=J.length;y=1}}var H,G;var q,w,v;var x,z,F;var D=0;var u,t;for(H=0;H<o;H++){q=e(document.createElement("tr"));q.addClass("jqplot-table-legend");if(A){q.prependTo(this._elem)}else{q.appendTo(this._elem)}for(G=0;G<y;G++){if(D<J.length){x=this.labels[D]||J[D][0].toString();F=p.next();if(!A){if(H>0){I=true}else{I=false}}else{if(H==o-1){I=false}else{I=true}}z=(I)?this.rowSpacing:"0";w=e(document.createElement("td"));w.addClass("jqplot-table-legend jqplot-table-legend-swatch");w.css({textAlign:"center",paddingTop:z});u=e(document.createElement("div"));u.addClass("jqplot-table-legend-swatch-outline");t=e(document.createElement("div"));t.addClass("jqplot-table-legend-swatch");t.css({backgroundColor:F,borderColor:F});w.append(u.append(t));v=e(document.createElement("td"));v.addClass("jqplot-table-legend jqplot-table-legend-label");v.css("paddingTop",z);if(this.escapeHtml){v.text(x)}else{v.html(x)}if(A){v.prependTo(q);w.prependTo(q)}else{w.appendTo(q);v.appendTo(q)}I=true}D++}}}}return this._elem};e.jqplot.PieRenderer.prototype.handleMove=function(q,p,t,s,r){if(s){var o=[s.seriesIndex,s.pointIndex,s.data];r.target.trigger("jqplotDataMouseOver",o);if(r.series[o[0]].highlightMouseOver&&!(o[0]==r.plugins.pieRenderer.highlightedSeriesIndex&&o[1]==r.series[o[0]]._highlightedPoint)){r.target.trigger("jqplotDataHighlight",o);d(r,o[0],o[1])}}else{if(s==null){k(r)}}};function c(s,r,p){p=p||{};p.axesDefaults=p.axesDefaults||{};p.legend=p.legend||{};p.seriesDefaults=p.seriesDefaults||{};var o=false;if(p.seriesDefaults.renderer==e.jqplot.PieRenderer){o=true}else{if(p.series){for(var q=0;q<p.series.length;q++){if(p.series[q].renderer==e.jqplot.PieRenderer){o=true}}}}if(o){p.axesDefaults.renderer=e.jqplot.PieAxisRenderer;p.legend.renderer=e.jqplot.PieLegendRenderer;p.legend.preDraw=true;p.seriesDefaults.pointLabels={show:false}}}function g(r,q,o){for(var p=0;p<this.series.length;p++){if(this.series[p].renderer.constructor==e.jqplot.PieRenderer){if(this.series[p].highlightMouseOver){this.series[p].highlightMouseDown=false}}}}function m(o){for(var p=0;p<this.series.length;p++){this.series[p].seriesColors=this.seriesColors;this.series[p].colorGenerator=e.jqplot.colorGenerator}}function d(t,r,q){var p=t.series[r];var o=t.plugins.pieRenderer.highlightCanvas;o._ctx.clearRect(0,0,o._ctx.canvas.width,o._ctx.canvas.height);p._highlightedPoint=q;t.plugins.pieRenderer.highlightedSeriesIndex=r;p.renderer.drawSlice.call(p,o._ctx,p._sliceAngles[q][0],p._sliceAngles[q][1],p.highlightColorGenerator.get(q),false)}function k(q){var o=q.plugins.pieRenderer.highlightCanvas;o._ctx.clearRect(0,0,o._ctx.canvas.width,o._ctx.canvas.height);for(var p=0;p<q.series.length;p++){q.series[p]._highlightedPoint=null}q.plugins.pieRenderer.highlightedSeriesIndex=null;q.target.trigger("jqplotDataUnhighlight")}function b(s,r,v,u,t){if(u){var q=[u.seriesIndex,u.pointIndex,u.data];var p=jQuery.Event("jqplotDataMouseOver");p.pageX=s.pageX;p.pageY=s.pageY;t.target.trigger(p,q);if(t.series[q[0]].highlightMouseOver&&!(q[0]==t.plugins.pieRenderer.highlightedSeriesIndex&&q[1]==t.series[q[0]]._highlightedPoint)){var o=jQuery.Event("jqplotDataHighlight");o.which=s.which;o.pageX=s.pageX;o.pageY=s.pageY;t.target.trigger(o,q);d(t,q[0],q[1])}}else{if(u==null){k(t)}}}function a(r,q,u,t,s){if(t){var p=[t.seriesIndex,t.pointIndex,t.data];if(s.series[p[0]].highlightMouseDown&&!(p[0]==s.plugins.pieRenderer.highlightedSeriesIndex&&p[1]==s.series[p[0]]._highlightedPoint)){var o=jQuery.Event("jqplotDataHighlight");o.which=r.which;o.pageX=r.pageX;o.pageY=r.pageY;s.target.trigger(o,p);d(s,p[0],p[1])}}else{if(t==null){k(s)}}}function l(q,p,t,s,r){var o=r.plugins.pieRenderer.highlightedSeriesIndex;if(o!=null&&r.series[o].highlightMouseDown){k(r)}}function f(r,q,u,t,s){if(t){var p=[t.seriesIndex,t.pointIndex,t.data];var o=jQuery.Event("jqplotDataClick");o.which=r.which;o.pageX=r.pageX;o.pageY=r.pageY;s.target.trigger(o,p)}}function n(s,r,v,u,t){if(u){var q=[u.seriesIndex,u.pointIndex,u.data];var o=t.plugins.pieRenderer.highlightedSeriesIndex;if(o!=null&&t.series[o].highlightMouseDown){k(t)}var p=jQuery.Event("jqplotDataRightClick");p.which=s.which;p.pageX=s.pageX;p.pageY=s.pageY;t.target.trigger(p,q)}}function i(){if(this.plugins.pieRenderer&&this.plugins.pieRenderer.highlightCanvas){this.plugins.pieRenderer.highlightCanvas.resetCanvas();this.plugins.pieRenderer.highlightCanvas=null}this.plugins.pieRenderer={highlightedSeriesIndex:null};this.plugins.pieRenderer.highlightCanvas=new e.jqplot.GenericCanvas();var p=e(this.targetId+" .jqplot-data-label");if(p.length){e(p[0]).before(this.plugins.pieRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-pieRenderer-highlight-canvas",this._plotDimensions,this))}else{this.eventCanvas._elem.before(this.plugins.pieRenderer.highlightCanvas.createElement(this._gridPadding,"jqplot-pieRenderer-highlight-canvas",this._plotDimensions,this))}var o=this.plugins.pieRenderer.highlightCanvas.setContext();this.eventCanvas._elem.bind("mouseleave",{plot:this},function(q){k(q.data.plot)})}e.jqplot.preInitHooks.push(c);e.jqplot.PieTickRenderer=function(){e.jqplot.AxisTickRenderer.call(this)};e.jqplot.PieTickRenderer.prototype=new e.jqplot.AxisTickRenderer();e.jqplot.PieTickRenderer.prototype.constructor=e.jqplot.PieTickRenderer})(jQuery);;
